---
title: Adjunctive Dexamethasone for Tuberculous Meningitis in HIV-negative Adults. Statistical analysis report
author: 
  - Trinh Dong Huu Khanh
  - Lam Phung Khanh
  - Ronald Geskus
date: today
format: 
  html:
    output-file: "Report.html"
    toc: true
    toc-depth: 5
    anchor-sections: true
    smooth-scroll: true
    embed-resources: true
    theme: yeti
    fig-dpi: 600
    fig-format: png
    max-width: 1600px
params:
  dummy: no
  datapath27: 'data/VAD/final_VAD.Rdata'
  randopath27: 
    - "data/RandomizationList/27TB_PNTRandlist_CT.csv"
    - "data/RandomizationList/27TB_HTDRandlist_CC.csv"
    - "data/RandomizationList/27TB_HTDRandlist_CT.csv"
    - "data/RandomizationList/27TB_PNTRandlist_CC.csv"
---

```{r setup}
#| echo: false
#| include: false


# Define helper functions ----
if (R.version$major=='4'&&as.numeric(R.version$minor)<4) `%||%` <- utils:::`%||%`
is.na.blank <- function(x){
  ifelse(is.na(x) | x == '', TRUE, FALSE)
}

tdpath <- \(x) structure(x, class='tdpath')
`/.tdpath` <- \(x, y) tdpath(file.path(x, y))

# Options for knitr ------
options(contrasts=c("contr.treatment","contr.treatment"), knitr.table.format = "html") 
knitr::opts_chunk$set(dpi = 300, echo = FALSE, message = FALSE, warning = FALSE)
project.dir <- tdpath(getwd())
dummy <- params$dummy %||% TRUE

# Library load ------
library(dplyr)
library(ggplot2)
library(survminer)
library(survival)
library(C306)
library(lubridate)
library(gtsummary)
library(patchwork)
library(sub.dongle)
library(broom)

# Some functions ------
# Function to drop level but keep label (Im very annoyed by this)
droplevels2 <- function(x, ...){
  attrx <- attributes(x)
  x <- droplevels(x, ...)
  attributes(x) <- modifyList(attributes(x), attrx[names(attrx)!="levels"])
  x
}

# Function to find the min of max(x|by)
minimax <- function(x, by, na.rm=TRUE){
  min(by(x, by, max, na.rm=na.rm), na.rm=na.rm)
}

# Global theme for forestplots
fr_theme <- forestploter::forest_theme(
    base_size = 11,
    colhead = list(fg_params=list(hjust=0, x=0.1)),
    vertline_lty = c("solid"),
    vertline_col = c("#d6604d"),
    core = list(
      fg_params=list(hjust=0, x=0.1),padding = unit(c(12, 3), "mm"),
       bg_params=list(fill = c('white', '#F2EFEE')))
  )

```

```{r import-randomization-list}

# Load randolist files
# Randomlist files are required to be in csv format
# And are specified in the params field on the yaml header of this files
randolist <- do.call(rbind,
                     lapply(params$randopath27,
                            function(x) read.csv(x, as.is = TRUE)))

if (dummy) {
  arm_levels <- paste("Dummy", LETTERS[1:length(unique(randolist$arm))])

  
} else {
  arm_levels <- c("Placebo", "Dexamethasone")
}

randolist$arm <- factor(randolist$arm, levels = c(arm_levels))
randolist$RANNO <- randolist$pat.id.full


```

```{r import-study-data}

load(params$datapath27);
#load(params$datapath26)
# load('data/VAD/final_VAD.Rdata')

## merge randomization list with data
### baseline
bsl_ran <- left_join(bsl3, select(randolist, RANNO, arm), by = "RANNO") 
#### deal with patients with LTA4H result of TT
idx <- which(!is.na(bsl_ran$LTA4HRESULT) & bsl_ran$LTA4HRESULT == "TT")
bsl_ran$arm[idx] <- if (dummy) 'Dummy B' else 'Dexamethasone'
bsl_ran <- filter(bsl_ran, !is.na(arm))

### other datasets
endpoints_ran <- right_join(endpoints, select(bsl_ran, USUBJID, arm, TBMGRADE, LTA4HRESULT, site, drug_resist), by = "USUBJID")

total <- SCR_fm
```


This is the final `r if (dummy) 'dummy ' else '\b'`analysis of the LAST ACT study (**‘A randomized double blind placebo controlled non-inferiority trial of adjunctive dexamethasone for the treatment of HIV-uninfected adults with tuberculous meningitis stratified by Leukotriene A4 hydrolase genotype'**). It follows the LAST ACT statistical analysis plan.

```{r general}
## add labels, units
names(bsl_ran) <- tolower(names(bsl_ran))
bsl_ran <- bsl_ran |>
  mutate(age = structure(age, label = "Age [years]", unit = "years"),
         arm = structure(arm, label = 'Treatment arm'),
         sex = structure(sex, label = "Sex"),
         lta4hresult = structure(lta4hresult, label = "Leukotriene A4 hydrolase"),
         tbm_dx2 = structure(tbm_dx2, label = "TBM diagnosis"),
         receivedtbt = structure(
           factor(receivedtbt, levels=c("Yes", "No", "Unknown")),
           label = "Previous tuberculosis treatment"),
         xrayresult = structure(factor(xrayresult, 
                       levels = c("other/normal/unk", "miliary TB", "pulmonary TB"),
                       labels = c("No tuberculosis", 
                                  "Miliary tuberculosis", 
                                  "Pulmonary tuberculosis")),
                       label = "Chest X-ray findings"),
                        
         tbmgrade = structure(
           factor(tbmgrade, levels=1:3, 
                  labels = paste("Grade", c("I", "II", "III"))),
           label = "Modified MRC grade"),
         site = structure(site, label = "Site"),
         gcs = structure(gcs, label="Glasgow coma score"),
         weight = structure(weight, label = 'Weight [kg]', unit='kg'),
         neuroday = structure(neuroday, label = "Duration of symptoms", unit='days'),
         
         # neurological signs
         cnp = structure(cnp  %in% "Yes", label = '- Cranial nerve palsy'),
         hemiplegia = structure(hemiplegia %in% "Yes", label = '- Hemiplegia'),
         para_tetraplegia = structure(paraplegia  %in% "Yes" | tetraplegia  %in% "Yes", label = '- Paraplegia/Tetraplegia'),
         urineretention = structure(urineretention %in% "Yes", label = '- Urinary retention'),
         diabetes = structure(diabetes |> relevel(ref='Yes'), label = 'History of diabetes'),
         hba1c = structure(hba1c, label = 'HbA1c', unit = '%'),
         hbsag = structure(lab_hbsag %in% 'Positive' | scr_hbsag %in% 'Positive', label='Hepatitis B sAg positivity'),
         antihcv = structure(antihcv, label = 'Hepatitis C Ab positivity'),
         alt = structure(alt, label = 'Alanine aminotransferase (ALT) [IU/L]', unit='IU/L'),
         bilirubin = structure(bilirubin, label = 'Bilirubin [$\\mu$mol/L]', unit='$\\mu$mol/L'),
         
         # Full blood count
         hgb = structure(hgb, label = 'Haemoglobin [g/dL]', unit = 'g/dL'),
         wbc = structure(wbc, label = 'White cell count [x10^3^/$\\mu$L]', unit = 'x10^3^/$\\mu$L'),
         plt = structure(plt, label = 'Platelets [x10^3^/$\\mu$L]', unit = 'x10^3^/$\\mu$L'),
         sodium = structure(sodium, label = 'Plasma sodium [mmol/L]', unit = 'mmol/L'),
         
         # CSF parameter
         csf_pressure = structure(csf_pressure, label = '- Open pressure [cmH~2~O]', unit = 'cmH~2~O'),
         csf_wbc = structure(csf_wbc, label = '- Total leucocytes [cells/mm^3^]', unit = 'cells/mm^3^'),
         csf_neu = structure(csf_neu, label = '- Total neutrophils [cells/mm^3^]', unit = 'cells/mm^3^'),
         csf_lym = structure(csf_lym, label = '- Total lymphocytes [cells/mm^3^]', unit = 'cells/mm^3^'),
         csf_pro = structure(csf_pro, label = '- Protein [g/L]', unit = 'g/L'),
         csf_gluratio = structure(csf_gluratio, label = '- CSF:Blood glucose ratio'),
         
         # Microbio tests
         csf_smear = structure(csf_smear, label = '- Positive ZN stain'),
         csf_xpert = structure(csf_xpert, label = '- Positive GeneXpert MTB/RIF'),
         csf_xpert_ultra = structure(csf_xpert_ultra, label =  '- Positive GeneXpert MTB/RIF Ultra'),
         csf_mgit = structure(csf_mgit, label = '- Positive mycobacterial culture'),
    
         bsl_tbdrug_day = structure(bsl_tbdrug_day, 
                                    label = "Duration of anti-tuberculosis chemotherapy before enrolment [days]"),
         
         # anti-tb drug at enrol
         bsl_drug = structure(
           factor(snakecase::to_title_case(as.character(bsl_drug)), 
                  levels = c('Rifampicin', 'Isoniazid',
                             'Pyrazinamide', 'Ethambutol', 'Streptomycin')),
           label = 'Enrolment anti-tuberculosis chemotherapy regimen'
         ),
         bsl_rifamicin = structure(bsl_rifamicin, label = '- Rifampicin'),
         bsl_isoniazid = structure(bsl_isoniazid, label = '- Isoniazid'),
         bsl_pyrazinamide = structure(bsl_pyrazinamide, label = '- Pyrazinamide'),
         bsl_ethambutol = structure(bsl_ethambutol, label = '- Ethambutol'),
         bsl_streptomycin = structure(bsl_streptomycin, label = '- Streptomycin'),
         
         resist = structure(
           ifelse(is.na(drug_resist)&!csf_mgit, '*Mtb* non-isolated or missing result', as.character(drug_resist)) |>
             factor(levels=c(levels(drug_resist), '*Mtb* non-isolated or missing result')), 
           label = 'Anti-tuberculosis drug resistance')
  )
```

Up to `r data_date`, 1030 patients were screened, amongst whom `r nrow(total)` were enrolled. 

In this trial not all enrolled patients were subsequently randomized. After enrolment, LTA4H genotyping was required prior to randomization, with 1-3 days required to obtain this result. It was possible for events to develop after enrolment that made randomization inappropriate. There were `r nrow(total) - nrow(bsl_ran)` enrolled participants excluded from the randomization.

In total, `r nrow(bsl_ran)` patients who were randomized (for LTA4H group CC and CT) or received study drug (for LTA4H group TT) are included in this analysis.

Before the end of the study at 12 months, three participants were lost to follow up; two participants withdrew the consent. Participant (retracted) was discharged at Day 3 of the study due to rapid recovery hence unlikely TBM. This participant was still included in the ITT analysis, and censored at day 3.

## Table 1: Baseline characteristics {.tabset .tabset-fade}

::: {.panel-tabset .panel-tabset-fade}

### By treatment arm with CC & CT genotype

```{r table1}

bsl_summary <- bsl_ran |> select(arm, age, sex, site, lta4hresult, tbm_dx2, receivedtbt, xrayresult, tbmgrade, gcs, neuroday, cnp, hemiplegia, para_tetraplegia, urineretention, diabetes, hba1c, hbsag, antihcv, alt, bilirubin, hgb, wbc, plt, sodium, csf_pressure, csf_wbc, csf_neu, csf_lym, csf_pro, csf_gluratio, csf_smear, csf_xpert, csf_xpert_ultra, csf_mgit, bsl_tbdrug_day, bsl_rifamicin:bsl_ethambutol,  resist) |>
  filter(lta4hresult != 'TT') |>
  mutate(arm=forcats::fct_rev(arm), lta4hresult=droplevels2(lta4hresult)) |>
  tbl_summary(by=arm ,
              type = list(bsl_tbdrug_day ~ 'continuous'),
              label = list(bsl_tbdrug_day ~ 'Duration of anti-tuberculosis chemotherapy before enrolment [days]' ),
              digits = list(
                where(\(x) !is.numeric(x)) ~ c(0,1),
                where(\(x) is.numeric(x) & mean(x, na.rm=T) > 10) ~ 0,
                where(\(x) is.numeric(x) & mean(x, na.rm=T) > 1 & mean(x, na.rm=T) <= 10) ~ 1,
                where(\(x) is.numeric(x) & mean(x, na.rm=T) <= 1) ~ 2,
                c('bsl_tbdrug_day') ~ 1,
                'gcs' ~ c(1, 0, 0, 0)),
              missing = 'no',
              missing_text = ' (Missing/Unknown)',
              statistic = list(
                all_categorical() ~ '{n} ({p}%)',
                all_continuous() ~ '{mean}; {median} ({p25}, {p75})'
              
                # c('bsl_tbdrug_day', 'gcs') ~ '{mean}; {my.med} ({my.q25}, {my.q75})'
              )) |> 
  gtsummary::add_n(statistic = '{N_nonmiss}') |>
  gtsummary::add_overall()

bsl_summary |>
  modify_table_body(
    function(x){
      which.start <- c(
        which.cnp =  which(x$variable == 'cnp')[[1]],
        which.hgb = which(x$variable == 'hgb')[[1]],
        which.csf = which(x$variable == 'csf_pressure')[[1]],
        which.smear = which(x$variable == 'csf_smear')[[1]],
        which.drug = which(x$variable == 'bsl_rifamicin')[[1]]
      )
      
      order.start <- order(which.start)
      which.start <- sort(which.start)
      grp <- lapply(c('Neurological signs', 
                      'Full blood count',
                      'CSF parameters',
                      'CSF microbiological tests', 
                      'Enrolment anti-tuberculosis chemotherapy regimen'),
                    function(g){
                      tibble(
                        variable=g,
                        var_type=NA,
                        var_label = g,
                        row_type="label",
                        label=sprintf('**%s**',g),
                        n=NA,
                        stat_0=NA,
                        stat_1=NA, stat_2=NA)
                      })[order.start]
      
      rbind(
        x[1:(which.start[1]-1),],
        grp[[1]],
        x[which.start[1]:(which.start[2]-1),],
        grp[[2]],
        x[which.start[2]:(which.start[3]-1),],
        grp[[3]],
        x[which.start[3]:(which.start[4]-1),],
        grp[[4]],
        x[which.start[4]:(which.start[5]-1),],
        grp[[5]],
        x[which.start[5]:nrow(x),]
        )
    
    }
  ) |>
  modify_footnote(
    update = list(all_stat_cols() ~ "N = number of patients with non-missing data included in that statistic.\n
      Summary statistic = the mean; median (1st and 3rd quartile) value for numeric data, and the number and frequency (%) of patients with the characteristic for categorical data.")
  ) |>
  as_flex_table() |>
  ftExtra::colformat_md(j=1, part='body') |>
  flextable::set_caption('Baseline characteristics, stratified by arm, excluding TT genotype') |>
  flextable::footnote(
    i = 12, j = 1,
    part='body',
    value = flextable::as_paragraph(c(
      'Participants will only be categorised as ‘not TBM’ if they have a confirmed alternative diagnosis (alternative to TBM) or if they fully recovered without any anti-TB drugs.\n
      Definite TBM = positive acid fast bacilli (AFB) on CSF Ziehl Neelsen stain, or positive CSF TB GeneXpert test, OR positive CSF TB culture. Probable or possible TBM defined following uniform case defintion, with the modification that participants with score<6, who do not meet the criteria for ‘not tuberculous meningitis’, will be classifed as ‘possible TBM’. Confirmed not-TBM = microbiologically confirmed other brain infection. Confirmed additional brain infection includes positive CSF India Ink stain, or CSF cryptococcal antigen, or positive blood cryptococcal antigen, or positive CSF bacterial Gram stain, or positive CSF bacterial culture, or positive CSF viral or helminth PCR test.\n
      Participants with TT genotype were excluded from this table.'
      )),
    ref_symbols = '2'
  ) |>
  flextable::add_footer_lines(
    values = 'HTD=Hospital for Tropical Diseases. MDR=multi-drug resistant. MRC=Medical Research Council. PNT=Pham Ngoc Thach Hospital for Tuberculosis and Lung Disease. TBM=tuberculous meningitis. ZN=Ziehl Neelsen.'
  ) |>
  ft_sstheme(bg="#F2EFEE")
```

### By genotype

```{r table1-gen}

bsl_summary2 <- bsl_ran |> select(arm, age, sex, site, lta4hresult, tbm_dx2, receivedtbt, xrayresult, tbmgrade, gcs, neuroday, cnp, hemiplegia, para_tetraplegia, urineretention, diabetes, hba1c, hbsag, antihcv, alt, bilirubin, hgb, wbc, plt, sodium, csf_pressure, csf_wbc, csf_neu, csf_lym, csf_pro, csf_gluratio, csf_smear, csf_xpert, csf_xpert_ultra, csf_mgit, bsl_tbdrug_day,  bsl_rifamicin:bsl_ethambutol, resist) |>
  tbl_summary(by=lta4hresult ,
              type = list(bsl_tbdrug_day ~ 'continuous'),
              # digits = list(all_continuous()~1, csf_gluratio ~ 2, gcs~0, neuroday~0),
               digits = list(
                where(\(x) !is.numeric(x)) ~ c(0,1),
                where(\(x) is.numeric(x) & mean(x, na.rm=T) > 10) ~ 0,
                where(\(x) is.numeric(x) & mean(x, na.rm=T) > 1 & mean(x, na.rm=T) <= 10) ~ 1,
                where(\(x) is.numeric(x) & mean(x, na.rm=T) <= 1) ~ 2,
                 c('bsl_tbdrug_day') ~ 1,
                'gcs' ~ c(1, 0, 0, 0)),
              missing = 'no',
              missing_text = ' (Missing/Unknown)',
              statistic = list(
                all_categorical() ~ '{n} ({p}%)',
                all_continuous() ~ '{mean}; {median} ({p25}, {p75})'
              )) |> 
  gtsummary::add_n(statistic='{N_nonmiss}') |>
  gtsummary::add_overall()

bsl_summary2 |>
  modify_table_body(
    function(x){
      which.start <- c(
        which.cnp =  which(x$variable == 'cnp')[[1]],
        which.hgb = which(x$variable == 'hgb')[[1]],
        which.csf = which(x$variable == 'csf_pressure')[[1]],
        which.smear = which(x$variable == 'csf_smear')[[1]],
        which.drug = which(x$variable == 'bsl_rifamicin')[[1]]
      )
      
      order.start <- order(which.start)
      which.start <- sort(which.start)
      grp <- lapply(c('Neurological signs', 
                      'Full blood count',
                      'CSF parameters',
                      'CSF microbiological tests', 
                      'Enrolment anti-tuberculosis chemotherapy regimen'),
                    function(g){
                      tibble(
                        variable=g,
                        var_type=NA,
                        var_label = g,
                        row_type="label",
                        label=sprintf('**%s**',g),
                        n=NA,
                        stat_0=NA,
                        stat_1=NA, stat_2=NA, stat_3=NA)
                      })[order.start]
      
      rbind(
        x[1:(which.start[1]-1),],
        grp[[1]],
        x[which.start[1]:(which.start[2]-1),],
        grp[[2]],
        x[which.start[2]:(which.start[3]-1),],
        grp[[3]],
        x[which.start[3]:(which.start[4]-1),],
         grp[[4]],
        x[which.start[4]:(which.start[5]-1),],
        grp[[5]],
        x[which.start[5]:nrow(x),]
        )
    
    }
  ) |>
  modify_footnote(
    update = list(all_stat_cols() ~ "N = number of patients with non-missing data included in that statistic.\n
      Summary statistic = the mean; median (1st and 3rd quartile) value for numeric data, and the number and frequency (%) of patients with the characteristic for categorical data.")
  ) |>
  as_flex_table() |>
  ftExtra::colformat_md(j=1, part='body') |>
  flextable::set_caption('Baseline characteristics, stratified by genotype') |>
  flextable::footnote(
    i = 11, j = 1,
    part='body',
    value = flextable::as_paragraph(c(
      'Participants will only be categorised as ‘not TBM’ if they have a confirmed alternative diagnosis (alternative to TBM) or if they fully recovered without any anti-TB drugs.\n
      Definite TBM = positive acid fast bacilli (AFB) on CSF Ziehl Neelsen stain, or positive CSF TB GeneXpert test, OR positive CSF TB culture. Probable or possible TBM defined following uniform case defintion, with the modification that participants with score<6, who do not meet the criteria for ‘not tuberculous meningitis’, will be classifed as ‘possible TBM’. Confirmed not-TBM = microbiologically confirmed other brain infection. Confirmed additional brain infection includes positive CSF India Ink stain, or CSF cryptococcal antigen, or positive blood cryptococcal antigen, or positive CSF bacterial Gram stain, or positive CSF bacterial culture, or positive CSF viral or helminth PCR test.'
      )),
    ref_symbols = '2'
  ) |>
  flextable::add_footer_lines(
    values = 'HTD=Hospital for Tropical Diseases. MDR=multi-drug resistant. MRC=Medical Research Council. PNT=Pham Ngoc Thach Hospital for Tuberculosis and Lung Disease. TBM=tuberculous meningitis. ZN=Ziehl Neelsen.'
  ) |>
  ft_sstheme(bg="#F2EFEE")
```

:::

## ITT analysis
### Primary endpoint

#### Table 2.1: Primary non-inferiority analysis {.tabset .tabset-fade} 

```{r crit_value}
#| description: calculate the first alpha.cc to protect the overall alpha
#| include: false

endpoints_c <- merge(
  endpoints, select(bsl3, USUBJID, LTA4HRESULT), all.x=TRUE
) |> filter(LTA4HRESULT %in% c('CC', 'CT'))

# we test for CC&CT and CC. so S is CC and F is CC&CT/slide referred.
# the slides say inforates = c(tau, 1) where tau is the relative fraction of information.
inforates <- with(endpoints_c, 
                  sum(ev_survival_neuro_12m&LTA4HRESULT%in%c('CC'))/
                    sum(ev_survival_neuro_12m&LTA4HRESULT%in%c('CC', 'CT'))
)


alpha.cc <- sapply(c(0.05, 0.025, 0.005), \(alpha) {
  rpact::getDesignGroupSequential(informationRates = c(inforates,1), alpha=alpha, typeOfDesign = "asUser", userAlphaSpending = c(alpha*4/5, alpha))$stageLevels[[2]]
}) 

```

```{r endpoints}
## add labels, units
endpoints_ran <- endpoints_ran %>%
  mutate(mt_survival_neuro_12m = tt_survival_neuro_12m/365*12) %>%
  mutate(ev_death = structure(ev_death, label = "Death"),
         ev_death2 = structure(factor(ev_death,
                                      levels = c(1, 0),
                                      labels = c("Yes", "No")), label = "Death"),
         ev_death_12m = structure(ev_death_12m, label = "Death until 12 months after randomization"),
         ev_death_12m2 = structure(factor(ev_death_12m, 
                                          levels = c(1, 0),
                                          labels = c("Yes", "No")), label = "Death until 12 months after randomization"),
         tt_death_12m = structure(tt_death_12m, label = "Time to death until 12 months after randomization", unit = "days"),
         ev_newnev_12m = structure(ev_newnev_12m, label = "New neurological event until 12 months after randomization"),
         ev_newnev_12m2 = structure(factor(ev_newnev_12m,
                                           levels = c(1, 0),
                                           labels = c("Yes", "No")), label = "New neurological event until 12 months after randomization"),
         tt_newnev_12m = structure(tt_newnev_12m, label = "Time to new neurological event until 12 months after randomization", unit = "days"),
         ev_survival_neuro_12m = structure(ev_survival_neuro_12m, label = "Death or new neurological event until 12 months after randomization"),
         ev_survival_neuro_12m2 = structure(factor(ev_survival_neuro_12m,
                                                   levels = c(1, 0),
                                                   labels = c("Yes", "No")), label = "Death or new neurological event until 12 months after randomization"),
         tt_survival_neuro_12m = structure(tt_survival_neuro_12m, label = "Time to death or new neurological event until 12 months after randomization", unit = "days"),
         TBMGRADE = structure(TBMGRADE, label = "Modified MRC grade"),
         LTA4HRESULT = structure(LTA4HRESULT, label = "LTA4H genotype"),
         site = structure(site, label = "Site"),
         drug_resist = structure(drug_resist, label = "Drug resistance at baseline"),
         ev_odduring = structure(ev_odduring, label = "Required open label dex duing period of study drug"),
         reason_odduring = structure(reason_odduring, label = "Reason for open label dexamethasone"),
         ev_odafter = structure(ev_odafter, label = "Required open label dex after completion of study drug"),
         reason_odafter = structure(reason_odafter, label = "Reason for open label dexamethasone"))

endpoints_ran2 <- endpoints_ran2_itt <- endpoints_ran %>%
  filter(arm %in% arm_levels) %>%
  mutate(arm = droplevels(arm)) %>%
  mutate(mrs = structure(mrs, label="12-month Modified Rankin Score"),
         ev_death = structure(ev_death, label = "Death"),
         ev_death2 = structure(factor(ev_death,
                                      levels = c(1, 0),
                                      labels = c("Yes", "No")), label = "Death"),
         ev_death_12m = structure(ev_death_12m, label = "Death until 12 months after randomization"),
         ev_death_12m2 = structure(factor(ev_death_12m, 
                                          levels = c(1, 0),
                                          labels = c("Yes", "No")), label = "Death until 12 months after randomization"),
         tt_death_12m = structure(tt_death_12m, label = "Time to death until 12 months after randomization", unit = "days"),
         ev_newnev_12m = structure(ev_newnev_12m, label = "New neurological event until 12 months after randomization"),
         ev_newnev_12m2 = structure(factor(ev_newnev_12m,
                                           levels = c(1, 0),
                                           labels = c("Yes", "No")), label = "New neurological event until 12 months after randomization"),
         tt_newnev_12m = structure(tt_newnev_12m, label = "Time to new neurological event until 12 months after randomization", unit = "days"),
         ev_survival_neuro_12m = structure(ev_survival_neuro_12m, label = "Death or new neurological event until 12 months after randomization"),
         ev_survival_neuro_12m2 = structure(factor(ev_survival_neuro_12m,
                                                   levels = c(1, 0),
                                                   labels = c("Yes", "No")), label = "Death or new neurological event until 12 months after randomization"),
         tt_survival_neuro_12m = structure(tt_survival_neuro_12m, label = "Time to death or new neurological event until 12 months after randomization", unit = "days"),
         TBMGRADE = structure(TBMGRADE, label = "Modified MRC grade"),
         LTA4HRESULT = structure(droplevels(LTA4HRESULT), label = "LTA4H genotype"),
         site = structure(site, label = "Site"),
         drug_resist = structure(drug_resist, label = "Drug resistance at baseline"),
         ev_odduring = structure(ev_odduring, label = "Required open label dex duing period of study drug"),
         reason_odduring = structure(reason_odduring, label = "Reason for open label dex"),
         ev_odafter = structure(ev_odafter, label = "Required open label dex after completion of study drug"))

names(endpoints_ran2) <- names(endpoints_ran2_itt) <- tolower(names(endpoints_ran2))
```

The primary endpoint of the LAST ACT trial was all-cause mortality or new neurological event, whichever occurred earlier, over the first 12 months after randomization. A new neurological event was defined as follows: new cerebellar symptoms; hemiplegia, paraplegia, tetraplegia or monoplegia; seizures; cerebral herniation; cranial nerve palsy; or a fall in Glasgow coma score by ≥ 2 points for ≥ 2 days (from the highest previously recorded GCS, including baseline).

Two analyses were performed. The primary/default one was a Cox proportional hazard model stratified by MRC Grade and
LTA4H genotype. However, an extra analysis without stratification was done; results are shown in the second tab.

The null hypothesis of non-inferiority of placebo for the primary endpoint is HR ≤ 0.75 dex/placebo, which is rejected if the lower limit of the confidence interval is above 0.75. We performed the test for the combination CC & CT as well as for CC only, where 80% of the significance level was used for the combined group. Following the approximation by the Spiessens and Debois method, to protect the overall one-sided $\alpha$ as 2.5%, the $\alpha$ for testing CC is `r formatC(alpha.cc[2]*100, digits=2)`%. We also report results based on the one-sided overall $\alpha=5$% and $\alpha=0.5$%.


```{r ep_helper_fn, included=FALSE}
#' @description Function to format point_est and nested conf.intervals
#' @param x a fitted model object
#' @param t [exp] a post-processing transformation method (not transpose)
#' @param alpha.one.sided [c(0.04,0.02,0.004)] one-sided error type I
#' @author: trinhdhk

est_ci <- function(x, t=exp, alpha.one.sided = c(0.04,0.02,0.004), p.alpha1 = FALSE) {
    point_est <- t(coef(x))
    conf_int <- lapply(alpha.one.sided, \(a) confint(x, level=(1-2*a)))
    if (p.alpha1) {
      p <- coef(summary(x))[1, 'Pr(>|z|)'] |> format.pval(digits=3, eps=0.001)
      return(
        sprintf('%.2f (%.2f - %.2f); %s \n {%.2f [%.2f - %.2f] %.2f}', 
            point_est, 
            t(conf_int[[2]][[1]]), t(conf_int[[2]][[2]]),
            p,
            t(conf_int[[3]][[1]]), t(conf_int[[1]][[1]]),
            t(conf_int[[1]][[2]]), t(conf_int[[3]][[2]])
        ) 
      )
    }
      
    sprintf('%.2f (%.2f - %.2f) \n {%.2f [%.2f - %.2f] %.2f}', 
            point_est, 
            t(conf_int[[2]][[1]]), t(conf_int[[2]][[2]]),
            t(conf_int[[3]][[1]]), t(conf_int[[1]][[1]]),
            t(conf_int[[1]][[2]]), t(conf_int[[3]][[2]])
    ) 
  } 

```

::: {.panel-tabset .tabset-fade}
##### With stratification

```{r table2a}


endpoint_summary <- endpoints_ran2 |>
  select(ev_survival_neuro_12m, arm, lta4hresult) |>
  mutate(
    cc_ct = structure(
      ifelse(lta4hresult %in% c('CC', 'CT'), ev_survival_neuro_12m, NA),
      label = 'All patients of CT or CC genotype'
    ),
    cc = structure(
      ifelse(lta4hresult %in% c('CC'), ev_survival_neuro_12m, NA),
      label = 'All patients of CC genotype'
    ),
    ev_survival_neuro_12m = NULL, lta4hresult=NULL,
    arm = relevel(arm, ref=arm_levels[2])
  )
tab2 <- tbl_summary(endpoint_summary, by=arm, 
                    digits = list(everything() ~ c(0,0,1)),
                    missing = 'no', 
                    statistic=list(all_categorical() ~ "{n}/{N} ({p}%)")) |>
  modify_header(all_stat_cols() ~ "{level}", label = ' ') |>
  as_tibble()

# fit the surv with cc&ct
surv.c <- coxph(Surv(tt_survival_neuro_12m, ev_survival_neuro_12m) ~ arm + strata(tbmgrade, lta4hresult), data=subset(endpoints_ran2, lta4hresult %in% c('CC', 'CT'))) 

# ci.alpha <- list(
#   ci.alpha0.02 = confint(surv.c, level=1-0.02*2), 
#   ci.alpha0.04 = confint(surv.c, level=1-0.04*2),
#   ci.alpha0.004 = confint(surv.c, level=1-0.004*2)
# )

surv.c.ci <-  est_ci(surv.c)


# fit the surv with cc
surv.cc <- coxph(Surv(tt_survival_neuro_12m, ev_survival_neuro_12m) ~ arm + strata(tbmgrade), data=subset(endpoints_ran2, lta4hresult %in% c('CC')))

# Code for loop-back procedure. Depricated on 09 July 2024 ----
## trinhdhk
#####################
# check the level of confint of cc based on rejection of c
# if reject alpha=0.004: 0.05, 0.025, 0.005.
# if reject alpha=0.02: 0.05, 0.025, alpha.cc[3].
# if reject alpha=0.04: 0.05, alpha.cc[2], alpha.cc[3].
# else alpha.cc
#####################


# alpha.ci.cc <- sapply(ci.alpha, "[", 1) |> # get the lower bound of cis
#   sapply(">", log(.75)) |>                 # reject if to the right of log(.75)
#   ifelse(c(0.05, 0.025, 0.005), alpha.cc)  # select alpha accordingly

### ----
alpha.ci.cc <- alpha.cc

sig.lev <- 100*(1-2*(alpha.ci.cc))
surv.cc.ci <- est_ci(surv.cc, alpha.one.sided = alpha.ci.cc)


cc_note <- sprintf('For CC, nested significance levels are (%.1f%%), [%.1f%%] and {%.1f%%}', sig.lev[2], sig.lev[1],  sig.lev[3])

tab2 |> 
  cbind(`**Hazard ratio (CI)**` = c(surv.c.ci, surv.cc.ci)) |>
  flextable::as_flextable() |>
  flextable::add_header_row(values=c(' ', '**All-cause mortality or new neurological event**', '**Hazard ratio (CI)**'), colwidths = c(1,2,1)) |>
  flextable::merge_v(j=c(1,4), part='header') |>
  ftExtra::colformat_md(j=1:4, part='header') |>
  flextable::footnote(
    i=1, j=4, part='header',
    value = flextable::as_paragraph(
      'CI=confidence interval. Significance level will be based on the Spiessens and Debois method, with main significance level protecting the 2.5% familywise error type I and nested confidence intervals for other familywise one-sided error rate of 5% and 0.5%\n',
      'In details, for CC & CT combined, nested confidence levels are (96%), [92%] and {99.2%}\n',
      cc_note
     ),
    ref_symbols = '*'
  ) |>
  flextable::add_footer_lines(
    'XX/XX denotes the number of participants experiencing the event divided by the total number of participants in the treatment arm'
  ) |>
  flextable::autofit()
  
```


```{r forestplot-pe}
#| fig-width: 7
#| fig-asp: 0.25
#| out-width: 100%

subgrp_cox <-
  tidy_subgroup(
    base_model = surv.c,
    data = subset(endpoints_ran2, lta4hresult %in% c('CC', 'CT')) |>
      mutate(lta4hresult=droplevels2(lta4hresult)),
    group = lta4hresult,
    conf.level = 0.96,
    exponentiate=TRUE,
    .overall = TRUE
  ) |>
  filter(grepl('(All|CC)', .subgroup_label)) |>
  mutate(
    .subgroup_label = case_when(
      grepl('All', .subgroup_label) ~ 'CC & CT',
      TRUE ~ 'CC'
    ),
    .subgroup_name = .subgroup_label
  )

# Create a clone with alpha.cc

subgrp_cox_tmp <-
  tidy_subgroup(
    base_model = surv.c,
    data = subset(endpoints_ran2, lta4hresult %in% c('CC', 'CT')) |>
      mutate(lta4hresult=droplevels2(lta4hresult)),
    group = lta4hresult,
    conf.level = (1-2*(alpha.cc[2])),
    exponentiate=TRUE,
    .overall = TRUE
  ) |>
  filter(grepl('(All|CC)', .subgroup_label)) |>
  mutate(
    .subgroup_label = case_when(
      grepl('All', .subgroup_label) ~ 'CC & CT',
      TRUE ~ 'CC'
    ),
    .subgroup_name = .subgroup_label
  )

subgrp_cox[2,] <- subgrp_cox_tmp[2,]
rm(subgrp_cox_tmp)
fp_data_pe <- as_forest_dt(
  subgrp_cox, 
  stats = c(
    'HR (CI)' = format.ci(estimate, conf.low, conf.high, digits=2),
    'p-value' =  format.pval(p.value, digits=2, eps=1e-3)),
  plot_width = 3
) |>
  mutate(Subgroup=gsub('\\s?\\-\\s?','', Subgroup))

forestploter(
  fp_data_pe[c(3,2),],
  stats_col = c(Subgroup, `HR (CI)`),
  terms=paste0('arm',arm_levels[2]), 
  ref_line=1,
  vert_line=0.75,
  digits=2,
  ticks_at=c(0.6, 0.75, 0.9, 1, 1.1, 1.25),
  est=estimate,
  lower=conf.low,
  upper=conf.high,
  x_trans='log',
  ci_column=2,
  arrow_lab = glue::glue('{rev(arm_levels)} favoured'),
  theme=fr_theme)
```


Test for proportional hazard assumption by scaled Schoenfeld residuals versus time

```{r coxzph_a}
#| out-width: 100%    
#| fig-asp: 0.7

# fix to ggcoxzph is on a github version of survminer that hasn't appear on CRAN.
env <- rlang::current_env()
zph.c <- cox.zph(surv.c)
# zph_c.plot <- ggplotify::as.ggplot(~plot(zph.c), envir=env)

zph_c.plot <- survminer::ggcoxzph(zph.c)[[1]]
zph.cc <- cox.zph(surv.cc)
# zph_cc.plot <- ggplotify::as.ggplot(~plot(zph.cc), envir=env)
zph_cc.plot <- survminer::ggcoxzph(zph.cc)[[1]]

(zph_c.plot + ggtitle(glue::glue('CC&CT: p={format.pval(zph.c$table[1,"p"],digits=2)}'))) | (zph_cc.plot + ggtitle(glue::glue('CC: p={format.pval(zph.cc$table[1,"p"],digits=2)}')) + theme(axis.title.y=element_blank()))
```

##### Without stratification

```{r table2b}
endpoint_summary <- endpoints_ran2 |>
  select(ev_survival_neuro_12m, arm, lta4hresult) |>
  mutate(
    cc_ct = structure(
      ifelse(lta4hresult %in% c('CC', 'CT'), ev_survival_neuro_12m, NA),
      label = 'All patients of CT or CC genotype'
    ),
    cc = structure(
      ifelse(lta4hresult %in% c('CC'), ev_survival_neuro_12m, NA),
      label = 'All patients of CC genotype'
    ),
    ev_survival_neuro_12m = NULL, lta4hresult = NULL,
    arm = relevel(arm, ref=arm_levels[2])
  )
tab2 <- tbl_summary(endpoint_summary, by=arm, 
                   digits = list(everything() ~ c(0,0,1)),
                    missing = 'no', 
                    statistic=list(all_categorical() ~ "{n}/{N} ({p}%)")) |>
  modify_header(all_stat_cols() ~ "{level}", label = ' ') |>
  as_tibble()

# endpoints_ran2$arm = relevel(endpoints_ran2$arm, ref=levels(endpoints_ran2$arm)[[2]])

# fit the surv with cc&ct
surv.c <- coxph(Surv(tt_survival_neuro_12m, ev_survival_neuro_12m) ~ arm, data=subset(endpoints_ran2, lta4hresult %in% c('CC', 'CT'))) 

# ci.alpha <- list(
#   ci.alpha0.02 = confint(surv.c, level=1-0.02*2), 
#   ci.alpha0.04 = confint(surv.c, level=1-0.04*2),
#   ci.alpha0.004 = confint(surv.c, level=1-0.004*2)
# )

surv.c.ci <-  est_ci(surv.c)


# fit the surv with cc
surv.cc <- coxph(Surv(tt_survival_neuro_12m, ev_survival_neuro_12m) ~ arm, data=subset(endpoints_ran2, lta4hresult %in% c('CC')))

# Code for loop-back procedure. Depricated on 09 July 2024 ----
## trinhdhk
#####################
# check the level of confint of cc based on rejection of c
# if reject alpha=0.004: 0.05, 0.025, 0.005.
# if reject alpha=0.02: 0.05, 0.025, alpha.cc[3].
# if reject alpha=0.04: 0.05, alpha.cc[2], alpha.cc[3.
# else alpha.cc
#####################
# alpha.ci.cc <- sapply(ci.alpha, "[", 1) |> # get the lower bound of cis
#   sapply(">", log(.75)) |>                 # reject if to the right of log(.75)
#   ifelse(c(0.05, 0.025, 0.005), alpha.cc)  # select alpha accordingly

### E ----

alpha.ci.cc <- alpha.cc

sig.lev <- 100*(1-2*(alpha.ci.cc))
surv.cc.ci <- est_ci(surv.cc, alpha.one.sided = alpha.ci.cc)


# cc_note <- sprintf('For CC, nested significance levels depends on the rejection of the combined CC & CT above. In this case, the adjusted significance level of CC are (%.1f%%), {%.1f%%} and [%.1f%%]', sig.lev[2], sig.lev[1],  sig.lev[3])

cc_note <- sprintf('For CC, nested significance levels are (%.1f%%), [%.1f%%] and {%.1f%%}', sig.lev[2], sig.lev[1],  sig.lev[3])

tab2 |> 
  cbind(`**Hazard ratio (CI)**` = c(surv.c.ci, surv.cc.ci)) |>
  flextable::as_flextable() |>
  flextable::add_header_row(values=c(' ', '**All-cause mortality or new neurological event**', '**Hazard ratio (CI)**'), colwidths = c(1,2,1)) |>
  flextable::merge_v(j=c(1,4), part='header') |>
  ftExtra::colformat_md(j=1:4, part='header') |>
  flextable::footnote(
    i=1, j=4, part='header',
    value = flextable::as_paragraph(
      'CI=confidence interval. Significance level will be based on the Spiessens and Debois method, with main significance level protecting the 2.5% familywise error type I and nested confidence intervals for other familywise one-sided error rate of 5% and 0.5%\n',
      'In details, for CC & CT combined, nested confidence levels are (96%), [92%] and {99.2%}\n',
      cc_note
     ),
    ref_symbols = '*'
  ) |>
  flextable::add_footer_lines(
    'XX/XX denotes the number of participants experiencing the event divided by the total number of participants in the treatment arm'
  ) |>
  flextable::autofit()
  
```

```{r forestplot-pe-2}
#| fig-width: 7
#| fig-asp: 0.25
#| out-width: 100%
<<forestplot-pe>>
```

Test for proportional hazard assumption by scaled Schoenfeld residuals versus time

```{r coxzph_b}
#| out-width: 100%    
#| fig-asp: 0.7
<<coxzph_a>>
```

:::

#### Table 2.2: Primary endpoint; superiority analyses {.tabset .tabset-fade}

This table is similar to Table 2.1 above, with the addition of the p-values based on the null hypothesis of no difference between the treatment arms. 

::: {.panel-tabset .tabset-fade}

##### With stratification

```{r table2.2a}

endpoint_summary <- endpoints_ran2 |>
  select(ev_survival_neuro_12m, arm, lta4hresult) |>
  mutate(
    cc_ct = structure(
      ifelse(lta4hresult %in% c('CC', 'CT'), ev_survival_neuro_12m, NA),
      label = 'All patients of CT or CC genotype'
    ),
    cc = structure(
      ifelse(lta4hresult %in% c('CC'), ev_survival_neuro_12m, NA),
      label = 'All patients of CC genotype'
    ),
    ev_survival_neuro_12m = NULL, lta4hresult=NULL,
    arm = relevel(arm, ref=arm_levels[2])
  )
tab2 <- tbl_summary(endpoint_summary, by=arm, 
                    digits = list(everything() ~ c(0,0,1)),
                    missing = 'no', 
                    statistic=list(all_categorical() ~ "{n}/{N} ({p}%)")) |>
  modify_header(all_stat_cols() ~ "{level}", label = ' ') |>
  as_tibble()


# fit the surv with cc&ct
surv.c <- coxph(Surv(tt_survival_neuro_12m, ev_survival_neuro_12m) ~ arm + strata(tbmgrade, lta4hresult), data=subset(endpoints_ran2, lta4hresult %in% c('CC', 'CT'))) 

# ci.alpha <- list(
#   ci.alpha0.02 = confint(surv.c, level=1-0.02*2), 
#   ci.alpha0.04 = confint(surv.c, level=1-0.04*2),
#   ci.alpha0.004 = confint(surv.c, level=1-0.004*2)
# )

surv.c.ci <-  est_ci(surv.c, p.alpha1 = F)
p.c <- coef(summary(surv.c))[1, 'Pr(>|z|)'] |> format.pval(digits=3, eps=.001) 


# fit the surv with cc
surv.cc <- coxph(Surv(tt_survival_neuro_12m, ev_survival_neuro_12m) ~ arm + strata(tbmgrade), data=subset(endpoints_ran2, lta4hresult %in% c('CC')))

# Code for loop-back procedure. Depricated on 09 July 2024 ----
## trinhdhk
#####################
# check the level of confint of cc based on rejection of c
# if reject alpha=0.004: 0.05, 0.025, 0.005.
# if reject alpha=0.02: 0.05, 0.025, alpha.cc[3].
# if reject alpha=0.04: 0.05, alpha.cc[2], alpha.cc[3.
# else alpha.cc
#####################
# alpha.ci.cc <- sapply(ci.alpha, "[", 1) |> # get the lower bound of cis
#   sapply(">", 0) |>                 # reject if to the right of log(.75)
#   ifelse(c(0.05, 0.025, 0.005), alpha.cc)  # select alpha accordingly
# E ----

alpha.ci.cc <- alpha.cc

sig.lev <- 100*(1-2*(alpha.ci.cc))
surv.cc.ci <- est_ci(surv.cc, alpha.one.sided = alpha.ci.cc)
p.cc <- coef(summary(surv.cc))[1, 'Pr(>|z|)'] |> format.pval(digits=3, eps=.001)


cc_note <- sprintf('For CC, nested significance levels depends on the rejection of the combined CC & CT above. In this case, the adjusted significance level of CC are (%.1f%%), [%.1f%%] and {%.1f%%}', sig.lev[2], sig.lev[1],  sig.lev[3])

tab2 |> 
  cbind(`**Hazard ratio (CI)**` = c(surv.c.ci, surv.cc.ci)) |>
  cbind(`**p-value for superiority**` = c(p.c, p.cc)) |>
  flextable::flextable() |>
  flextable::add_header_row(values=c(' ', '**All-cause mortality or new neurological event**', '**Hazard ratio (CI)**', '**p-value for superiority**'), colwidths = c(1,2,1,1)) |>
  flextable::merge_v(j=c(1,4,5), part='header') |>
  ftExtra::colformat_md(j=1:5, part='header') |>
  flextable::footnote(
    i=1, j=4, part='header',
    value = flextable::as_paragraph(
      'CI=confidence interval. Significance level will be based on the Spiessens and Debois method, with main significance level protecting the 2.5% familywise error type I and nested confidence intervals for other familywise one-sided error rate of 5% and 0.5%\n',
      'In details, for CC & CT combined, nested significance levels are (96%), [92%] and {99.2%}\n',
      cc_note
     ),
    ref_symbols = '*'
  ) |>
  flextable::add_footer_lines(
    'XX/XX denotes the number of participants experiencing the event divided by the total number of participants in the treatment arm'
  ) |>
  flextable::autofit()
  
```

##### Without stratification

```{r table2.2b}

endpoint_summary <- endpoints_ran2 |>
  select(ev_survival_neuro_12m, arm, lta4hresult) |>
  mutate(
    cc_ct = structure(
      ifelse(lta4hresult %in% c('CC', 'CT'), ev_survival_neuro_12m, NA),
      label = 'All patients of CT or CC genotype'
    ),
    cc = structure(
      ifelse(lta4hresult %in% c('CC'), ev_survival_neuro_12m, NA),
      label = 'All patients of CC genotype'
    ),
    ev_survival_neuro_12m = NULL, lta4hresult=NULL,
    arm = relevel(arm, ref=arm_levels[2])
  )
tab2 <- tbl_summary(endpoint_summary, by=arm, 
                    digits = list(everything() ~ c(0,0,1)),
                    missing = 'no', 
                    statistic=list(all_categorical() ~ "{n}/{N} ({p}%)")) |>
  modify_header(all_stat_cols() ~ "{level}", label = ' ') |>
  as_tibble()


# fit the surv with cc&ct
surv.c <- coxph(Surv(tt_survival_neuro_12m, ev_survival_neuro_12m) ~ arm , data=subset(endpoints_ran2, lta4hresult %in% c('CC', 'CT'))) 

# ci.alpha <- list(
#   ci.alpha0.02 = confint(surv.c, level=1-0.02*2), 
#   ci.alpha0.04 = confint(surv.c, level=1-0.04*2),
#   ci.alpha0.004 = confint(surv.c, level=1-0.004*2)
# )

surv.c.ci <-  est_ci(surv.c, p.alpha1 = F)
p.c <- coef(summary(surv.c))[1, 'Pr(>|z|)'] |> format.pval(digits=3, eps=.001) 


# fit the surv with cc
surv.cc <- coxph(Surv(tt_survival_neuro_12m, ev_survival_neuro_12m) ~ arm,  data=subset(endpoints_ran2, lta4hresult %in% c('CC')))

# Code for loop-back procedure. Depricated on 09 July 2024 ----
## trinhdhk
#####################
# check the level of confint of cc based on rejection of c
# if reject alpha=0.004: 0.05, 0.025, 0.005.
# if reject alpha=0.02: 0.05, 0.025, alpha.cc[3].
# if reject alpha=0.04: 0.05, alpha.cc[2], alpha.cc[3.
# else alpha.cc
#####################
# alpha.ci.cc <- sapply(ci.alpha, "[", 1) |> # get the lower bound of cis
#   sapply(">", 0) |>                 # reject if to the right of log(.75)
#   ifelse(c(0.05, 0.025, 0.005), alpha.cc)  # select alpha accordingly
# E----

alpha.ci.cc <- alpha.cc

sig.lev <- 100*(1-2*(alpha.ci.cc))
surv.cc.ci <- est_ci(surv.cc, alpha.one.sided = alpha.ci.cc)
p.cc <- coef(summary(surv.cc))[1, 'Pr(>|z|)'] |> format.pval(digits=3, eps=.001)


cc_note <- sprintf('For CC, nested significance levels depends on the rejection of the combined CC & CT above. In this case, the adjusted significance level of CC are (%.1f%%), [%.1f%%] and {%.1f%%}', sig.lev[2], sig.lev[1],  sig.lev[3])

tab2 |> 
  cbind(`**Hazard ratio (CI)**` = c(surv.c.ci, surv.cc.ci)) |>
  cbind(`**p-value for superiority**` = c(p.c, p.cc)) |>
  flextable::flextable() |>
  flextable::add_header_row(values=c(' ', '**All-cause mortality or new neurological event**', '**Hazard ratio (CI)**', '**p-value for superiority**'), colwidths = c(1,2,1,1)) |>
  flextable::merge_v(j=c(1,4,5), part='header') |>
  ftExtra::colformat_md(j=1:5, part='header') |>
  flextable::footnote(
    i=1, j=4, part='header',
    value = flextable::as_paragraph(
      'CI=confidence interval. Significance level will be based on the Spiessens and Debois method, with main significance level protecting the 2.5% familywise error type I and nested confidence intervals for other familywise one-sided error rate of 5% and 0.5%\n',
      'In details, for CC & CT combined, nested significance levels are (96%), [92%] and {99.2%}\n',
      cc_note
     ),
    ref_symbols = '*'
  ) |>
  flextable::add_footer_lines(
    'XX/XX denotes the number of participants experiencing the event divided by the total number of participants in the treatment arm'
  ) |>
  flextable::autofit()
  
```

:::

### Further analyses for superiority design

All further analyses use a superiority design. We performed Kaplan-Meier estimation and compared restricted mean time lost between the two arms with adjustment for LTA4H genotype and MRC grade. For this point onwards, correction for multiple testing is no longer made.

#### Figure 2.1: Kaplan-Meier curve for all-cause mortality or new neurological event, stratified by genotype

We visualise the distribution of time-to-primary endpoint using Kaplan-Meier plots, with stratification by genotype. We also visualize the difference in estimated survival probability between the arms over time.


```{r figure2.1}
#| out-width: 100%
#| fig-width: 6
#| fig-asp: 1.2

tmp_dat <- endpoints_ran2 |>
  filter(lta4hresult != 'TT') %>%
  rbind(.,.) %>%
  mutate(
    mt_survival_neuro_12m = tt_survival_neuro_12m/365*12,
    lta4hresult = c(
    rep('CC & CT', nrow(.)/2), as.character(lta4hresult)[1:(nrow(.)/2)]
  ) |> factor(levels=c('CC & CT', 'CC', 'CT')))
  
plt_combined <- ggsurvplot(
  survfit(Surv(mt_survival_neuro_12m, ev_survival_neuro_12m) ~ arm, 
          data = subset(tmp_dat, lta4hresult=='CC & CT')),
  risk.table = TRUE,
  censor = FALSE, pval = FALSE, conf.int = TRUE, 
  short.panel.labs = TRUE,
  ylab='Probability of event-free survival',
  xlim = c(0, 12), 
   xlab = "Months since randomization", 
  break.x.by=1,
  # ggtheme = theme_bw(base_size=12),
  ggtheme = ggsurvfit::theme_ggsurvfit_KMunicate(),
  legend.title = 'Treatment arm',
  tables.height = 0.2,
  tables.theme = theme_void() + theme(axis.line = element_blank(), axis.text = element_blank(),
                                      # axis.title.x = element_text(),
                                      # plot.title = element_blank(),
                                      axis.ticks = element_blank()),
  fontsize = 3, 
  risk.table.title='Number at risk in CC & CT combined',
  palette=ggsci::pal_nejm()(10)[2:3],
  # facet.by = c('lta4hresult'),
  legend.labs=arm_levels,
  risk.table.y.text.col = TRUE, risk.table.y.text = FALSE,
)

#
plt_genotype <- ggsurvplot(
  survfit(Surv(mt_survival_neuro_12m, ev_survival_neuro_12m) ~ arm, 
          data = subset(tmp_dat, lta4hresult!='CC & CT')),
  risk.table = FALSE,  censor = FALSE, pval = FALSE, conf.int = TRUE, 
  short.panel.labs = TRUE,
  ylab='Percentage of event-free survival',
  xlim = c(0, 12), xlab = "Months since randomization",
  break.x.by=2,
  # ggtheme = theme_bw(base_size=12) +
  # ggtheme = ggsurvfit::theme_ggsurvfit_KMunicate() + 
  #   theme(panel.spacing = unit(1, 'lines')
  #         # axis.title.x = element_blank()
  #         ),
  ggtheme = modifyList(ggsurvfit::theme_ggsurvfit_KMunicate(),
    list(theme(panel.spacing = unit(1, 'lines')))),
  tables.theme = theme(
    axis.line = element_blank(), axis.text = element_blank(),
    axis.title = element_blank(), axis.ticks = element_blank()),
  fontsize = 2, 
  legend.title = 'Treatment arm',
  palette=ggsci::pal_nejm()(10)[2:3],
  facet.by = c('lta4hresult'),
  # legend.labs=arm_levels,
  risk.table.y.text.col = TRUE, risk.table.y.text = FALSE
)


plt_genotype_tbl <- lapply(c('CC', 'CT'), \(g) {
  dt = subset(tmp_dat, lta4hresult==g)
  ggsurvplot(
    survfit(Surv(mt_survival_neuro_12m, ev_survival_neuro_12m) ~ arm, 
            data = dt),
    data = dt,
    risk.table = TRUE,  censor = FALSE, pval = FALSE, conf.int = TRUE, 
    short.panel.labs = TRUE,
    ylab='Probability of event-free survival',
    xlim = c(0, 12), 
    xlab=NULL,
    # xlab = "Months since randomization", 
    break.x.by = 2, 
    ggtheme = theme_bw(base_size=12) +
    # ggtheme = ggsurvfit::theme_risktable_boxed(axis.text.y.size=12) + 
      theme(axis.title.y = element_blank(), legend.position='none'),
    tables.theme =  theme_void() + 
      theme(axis.line = element_blank(), axis.text = element_blank(),
            axis.title.x = element_text(),
            axis.ticks = element_blank(),
            plot.title = element_blank()),
    tables.y.text.col = FALSE,
    fontsize = 3,
    palette=ggsci::pal_nejm()(10)[2:3],
    # legend.labs=arm_levels,
    risk.table.y.text.col = TRUE, risk.table.y.text = FALSE
  )[[2]]
})

# plt_genotype_tbl[[1]][[1]] <- plt_genotype[[1]]
# plt_genotype_tbl[[2]][[1]] <- plt_genotype[[2]]

# design <- c(area(1,1,4,3), area(5,1,5.5,3), area(6,1,10,3), area(11,1,11.5,3))
design <- c(area(1,1,1,3), area(2,1,5,3), area(6,1,10,3), area(11,1,11.5,3))

# plt_combined[[2]] / plt_combined[[1]] / (plt_genotype_tbl[[1]][[2]] + plt_genotype_tbl[[2]][[2]])/ (plt_genotype) +
plt_combined[[2]] / plt_combined[[1]] / (plt_genotype) / (plt_genotype_tbl[[1]] + plt_genotype_tbl[[2]])   +
  plot_layout(guides='collect', design = design) &
  theme(legend.position = 'bottom')

```



```{r figure2.2}
#| out-width: 100%
#| fig-width: 8
#| fig-asp: 1.1

diff.plts <- lapply(
  list(c('CC', 'CT'), 'CC', 'CT'),
  function(genotype) 
    callr::r(
      function(genotype, endpoints_ran2, arm_levels){
        strata <- paste(genotype, collapse=' & ')
        subdat <- subset(endpoints_ran2, lta4hresult%in%genotype) |>
          dplyr::mutate(arm = relevel(arm, ref=arm_levels[2]))
        subdat.fit <- rms::npsurv(survival::Surv(tt_survival_neuro_12m, ev_survival_neuro_12m) ~ arm, data = subdat)
        
        names(subdat.fit$strata) <- arm_levels[2:1] 
        subdat.plot <- ~ {
          par(las=.5)
          rms::survdiffplot(
            subdat.fit,
            grid=TRUE,
            conf='shaded',
            time.inc=60,
            xlim = c(0,360),
            xlab = '',
            ylab = 'Difference in probability'
          )}
        
        # browser()
        env <- rlang::current_env()
        ggplotify::as.ggplot(subdat.plot , envir=env, scale=1-0.05*(length(genotype)==1), vjust=0.1) + ggplot2::ggtitle(strata) + ggplot2::theme(plot.title.position = 'plot', plot.title = ggplot2::element_text(hjust=.5))
      },
      args = list(genotype=genotype, endpoints_ran2=endpoints_ran2,
                  arm_levels=arm_levels)
    )
)

# This will break any subsequent plot call. which is weird
# ---
# diff.plts <- lapply(list(c('CC', 'CT'), 'CC', 'CT'),
#                     function(genotype){
#                       strata <- paste(genotype, collapse=' & ')
#                       subdat <- subset(endpoints_ran2, lta4hresult%in%genotype) |>
#                         mutate(arm = relevel(arm, ref=arm_levels[2]))
#                       subdat.fit <- rms::npsurv(Surv(tt_survival_neuro_12m, ev_survival_neuro_12m) ~ arm, data = subdat)
#                       
#                       names(subdat.fit$strata) <- arm_levels[2:1] 
#                       subdat.plot <- ~ {
#                         par(las=.5)
#                         rms::survdiffplot(
#                         subdat.fit,
#                         grid=TRUE,
#                         conf='shaded',
#                         time.inc=60,
#                         xlim = c(0,360),
#                         xlab = ''
#                       )}
#   
#                       # browser()
#                       env <- rlang::current_env()
#                       ggplotify::as.ggplot(subdat.plot , envir=env, scale=1-0.05*(length(genotype)==1), vjust=0.1) + ggtitle(strata) + theme(plot.title.position = 'plot', plot.title = element_text(hjust=.5))
#                     })

design <-
  paste(
    strrep('A',25),
    paste0('#', paste0(strrep(c('B','C'),12),collapse = ''), collapse=''),
    sep='\n'
  )
wrap_plots(
  diff.plts,
  design = design
)

```


#### Table 2.3: Restricted mean time lost for all-cause mortality or new neurological event, corrected for genotype and MRC grade

We report cumulative event risk at 3, 6, 9, and 12 months of follow-up. A formal comparison between the two arms of the restricted mean time lost (RMTL; difference in months for Dexamethasone-Placebo) by 12 months was performed as well.

```{r table3.3}
#| message: false

endpoints_ran2$mt_survival_neuro_12m = structure(endpoints_ran2$tt_survival_neuro_12m/365*12, unit='months')
# endpoints_ran2$arm = relevel(endpoints_ran2$arm, ref='Dummy A')


# CC and CT combined

rmst.c3 <- 
  sstable.survcomp(
    Surv(mt_survival_neuro_12m, ev_survival_neuro_12m) ~ arm + tbmgrade + lta4hresult, 
    data=subset(endpoints_ran2, lta4hresult %in% c('CC', 'CT') & !is.na(ev_survival_neuro_12m)), 
    digits=2,
    time=3, compare.method = 'rmst', 
    compare.args = list(
      type='lost.diff',
      unit='months',
      model.censoring = 'independent'),
    flextable = F)

footer <- rmst.c3$footer

rmst.c3 <- rmst.c3$table[1:3,]


rmst.c6 <- 
  sstable.survcomp(Surv(mt_survival_neuro_12m, ev_survival_neuro_12m) ~ arm + tbmgrade + lta4hresult,
                   data=subset(endpoints_ran2, lta4hresult %in% c('CC', 'CT')), 
                   digits=2,
                   time=6, compare.method = 'rmst', flextable = F)$table[3,, drop=F]

rmst.c9 <- 
  sstable.survcomp(Surv(mt_survival_neuro_12m, ev_survival_neuro_12m) ~ arm + tbmgrade + lta4hresult,
                   data=subset(endpoints_ran2, lta4hresult %in% c('CC', 'CT')),
                   digits=2,
                   time=9, compare.method = 'rmst', flextable = F)$table[3,, drop=F]

rmst.c12 <- 
  sstable.survcomp(
    Surv(mt_survival_neuro_12m, ev_survival_neuro_12m) ~ arm + tbmgrade + lta4hresult, 
    data=subset(endpoints_ran2, lta4hresult %in% c('CC', 'CT')) |> mutate(lta4hresult = droplevels(lta4hresult)), 
    digits=2,
    time=12, 
    compare.method = 'rmst', 
    compare.args = list(
      type='lost.diff',
      model.censoring = "stratified", 
      formula.censoring = ~arm + tbmgrade + lta4hresult),
    flextable = F)$table[3,, drop=F]

# cuminc is depricated on July 26 - trinhdhk
# cuminc.c12 <-
#   sstable.survcomp(
#     Surv(mt_survival_neuro_12m, ev_survival_neuro_12m) ~ arm + tbmgrade + lta4hresult, 
#     data=subset(endpoints_ran2, lta4hresult %in% c('CC', 'CT')) |> mutate(lta4hresult = droplevels(lta4hresult)), 
#     time=Inf, 
#     compare.method = 'cuminc', 
#     compare.args = list(
#       type='diff',
#       model.censoring = "stratified", 
#       formula.censoring = ~arm + tbmgrade + lta4hresult),
#     flextable = F)
# cuminc.c12 <- cuminc.c12$table[1:3, ncol(cuminc.c12$table), drop=F]

rmst.c3[3,4] <- rmst.c6[1,4] <- rmst.c9[1,4] <- ''
rmst.c3[3,1] <- '3 months'
rmst.c6[1,1] <- '6 months'
rmst.c9[1,1] <- '9 months'
rmst.c12[1,1] <- '12 months'

rmst.c <- rbind(rmst.c3, rmst.c6, rmst.c9, rmst.c12) #|> cbind('')
rmst.c[2,1] <- rmst.c[1,1]
# rmst.c[1:2, ncol(rmst.c)] <- cuminc.c12[1:2,]
# rmst.c[nrow(rmst.c), ncol(rmst.c)] <- cuminc.c12[3,]

# CC only

rmst.cc3 <- 
  sstable.survcomp(Surv(mt_survival_neuro_12m, ev_survival_neuro_12m) ~ arm + tbmgrade,
                   data=subset(endpoints_ran2, lta4hresult %in% c('CC')), 
                   digits=2,
                   time=3, compare.method = 'rmst', flextable = F)$table[3,,drop=F]


rmst.cc6 <- 
  sstable.survcomp(Surv(mt_survival_neuro_12m, ev_survival_neuro_12m) ~ arm + tbmgrade,
                   data=subset(endpoints_ran2, lta4hresult %in% c('CC')), 
                   digits=2,
                   time=6, compare.method = 'rmst', flextable = F)$table[3,, drop=F]

rmst.cc9 <- 
  sstable.survcomp(Surv(mt_survival_neuro_12m, ev_survival_neuro_12m) ~ arm + tbmgrade,
                   data=subset(endpoints_ran2, lta4hresult %in% c('CC')), 
                   digits=2,
                   time=9, compare.method = 'rmst', flextable = F)$table[3,, drop=F]

rmst.cc12 <- 
  sstable.survcomp(
    Surv(mt_survival_neuro_12m, ev_survival_neuro_12m) ~ arm + tbmgrade, 
    data=subset(endpoints_ran2, lta4hresult %in% c('CC')), 
    digits=2,
    time=Inf, 
    compare.method = 'rmst', 
    compare.args = list(
      type='lost.diff',
      model.censoring = "stratified",
      formula.censoring = ~arm + tbmgrade),
    flextable = F)$table[3,, drop=F]


# cuminc.cc12 <-
#   sstable.survcomp(
#     Surv(mt_survival_neuro_12m, ev_survival_neuro_12m) ~ arm + tbmgrade,
#     data=subset(endpoints_ran2, lta4hresult %in% c('CC')),
#     time=Inf,
#     compare.method = 'cuminc',
#     compare.args = list(
#       model.censoring = "stratified",
#       formula.censoring = ~arm + tbmgrade),
#     flextable = F)
# cuminc.cc12 <- cuminc.cc12$table[3, ncol(cuminc.cc12$table), drop=F]


rmst.cc3[1,4] <- rmst.cc6[1,4] <- rmst.cc9[1,4] <- ''
rmst.cc3[1,1] <- '3 months'
rmst.cc6[1,1] <- '6 months'
rmst.cc9[1,1] <- '9 months'
rmst.cc12[1,1] <- '12 months'

rmst.cc <- rbind(rmst.cc3, rmst.cc6, rmst.cc9, rmst.cc12) #|> cbind('')
# rmst.cc[nrow(rmst.cc), ncol(rmst.cc)] <- cuminc.cc12[1,1]

table3.3 <-
  cbind(
    c('Genotype','', rep('CC & CT', nrow(rmst.cc)), rep('CC', nrow(rmst.cc))),
    rbind(rmst.c, rmst.cc)
  )

ss_flextable(table3.3, 
             footer = c('RMTL: Restricted mean time lost ', 
                        'RMTL difference (months) and p value were based on Restricted mean survival time model, correcting for MRC Grade and LTA4H genotype'
             )) |>
  flextable::merge_v(j=1) |>
  flextable::hline(i=4, border=officer::fp_border()) |>
  flextable::hline(i=5, j=1,border=officer::fp_border(color="black", width = 1.5), part='body')

```


#### Table 2.4: Primary endpoint; superiority subgroup analyses 

We fit separate models per subgroup and we will fit a model in which we test for interaction between treatment and subgroup. We considered the following grouping variables: LTA4H genotype, TBM MRC severity grade at enrolment (I, II, or III), TBM diagnosis (definite, probable, possible), and drug resistance pattern (MDR-TB or rifampicin mono-resistance, isoniazid resistant non-MDR, no or other resistance). No stratification variables (genotype and MRC grade) were included in these analyses.  We additionally use a model for the RMTL (with linear link function), and use a similar presentation of the results. Results in the “All patients” group and in the "CC" group are the same as for the "Without stratification" analyses in Table 2.2, except for the confidence intervals which are not corrected for multiple testing (hence set at 95%).

##### Figure 2.2: Kaplan-Meier estimates for subgroups (excluding LTA4H, which was mentioned above)

```{r figure-2.2}
#| fig-asp: 1.2
#| fig-width: 10
#| out-width: 100%

endpoints_ran3 <- inner_join(bsl_ran, endpoints_ran2 |> select(usubjid, ev_survival_neuro_12m, tt_survival_neuro_12m, mt_survival_neuro_12m), by='usubjid')
endpoints_ran3_ccct <- 
  filter(endpoints_ran3, lta4hresult!='TT') |>
  mutate(
    lta4hresult = structure(droplevels(lta4hresult), label= "LTA4H genotype"),
         tbm_dx2 = droplevels2(tbm_dx2))

km_subgroups <-
  lapply(
    c('tbm_dx2', 'tbmgrade', 'resist'),
    function(subgroup){
      dt <- endpoints_ran3_ccct
      subgroup_lab <- attr(dt[[subgroup]], 'label') %||% subgroup
      if (subgroup=='resist')
      dt[[subgroup]] <- forcats::fct_recode(
        dt[[subgroup]],
        'Multi-drug resistant or\nrifampicin mono-resistant' = 'Multi-drug resistant or rifampicin mono-resistant',
        'Mtb non-isolated or missing result' = '*Mtb* non-isolated or missing result'
      )
      ggsurvplot(
        survfit(Surv(mt_survival_neuro_12m, ev_survival_neuro_12m) ~ arm, 
                data = dt),
        data=dt,
        risk.table = FALSE,  censor = FALSE, pval = FALSE, conf.int = TRUE, 
        short.panel.labs = TRUE,
        legend.title = 'Treatment arm',
        ylab = 'Probability of event-free survival',
        xlim = c(0, 12), xlab = "Months since randomization", break.time.by = 1, 
        ggtheme = theme_bw(base_size=12) + theme(plot.title=element_text(face='bold', size=14, hjust = 0.5), 
                                                 plot.title.position = 'panel'),
        tables.theme = theme(axis.line = element_blank(), axis.text = element_blank(),
                             axis.title = element_blank(), axis.ticks = element_blank()),
        fontsize = 2, break.x.by=2,
        palette=ggsci::pal_nejm()(10)[2:3],
        title=subgroup_lab,
        nrow=1,
        facet.by = subgroup,
        # legend.labs=arm_levels,
        risk.table.y.text.col = TRUE, risk.table.y.text = FALSE
      )
    }
  )

# for (i in seq_along(km_subgroups)){
#   if (i < length(km_subgroups)) km_subgroups[[i]] <- km_subgroups[[i]] + 
#       theme(axis.title.x = element_blank())
#                                                                 
# }

wrap_plots(km_subgroups, ncol=1) + plot_layout(guides='collect') & theme(legend.position = 'bottom')

```

::: {.panel-tabset .tabset-fade}
##### CoxPH model


```{r table4a}

tbl_outcome <- sstable.survcomp.subgroup(
  base.model=Surv(mt_survival_neuro_12m, ev_survival_neuro_12m) ~ arm,
  subgroup.model = ~ lta4hresult + tbm_dx2 +  tbmgrade +resist ,
  digits=2, 
  data = endpoints_ran3_ccct,
  flextable = FALSE)

tbl_outcome$table[,1] <-
  gsub('^\\-', '\\\\-', tbl_outcome$table[,1])


ss_flextable(tbl_outcome) |> ftExtra::colformat_md(j=1, part='body')

```

##### RMST model

```{r table4b}
# 
# endpoints_ran3_ccct <- 
#   filter(endpoints_ran3, lta4hresult!='TT') |>
  # mutate(lta4hresult = structure(droplevels(lta4hresult), label= "LTA4H genotype"))
  

tbl_outcome <- sstable.survcomp.subgroup(
  base.model=Surv(mt_survival_neuro_12m, ev_survival_neuro_12m) ~ arm,
  subgroup.model = ~ lta4hresult + tbm_dx2 + tbmgrade +resist, data = endpoints_ran3_ccct,
  digits=2,
  compare.method = 'rmst',
  compare.args = list(type='lost.diff', unit='months'),
  flextable = F) 

tbl_outcome$footer[[2]] <- "RMTL difference (months) and p value were based on Restricted mean survival time model." 

ss_flextable(tbl_outcome) |> ftExtra::colformat_md(j=1, part='body')

```

:::

### Secondary endpoints

Outcomes 1-3 below are time-to-event outcomes, and we used similar analyses as for the primary outcome. For each, we computed and plot the Kaplan-Meier estimates (outcome 1) or the Aalen-Johansen estimates with death as competing risk (outcomes 2 and 3), with stratification by genotype, and report the values of the estimates at 3, 6 and 12 months; we will formally compare event risk at 12 months. We also compared RMTL at 12 months as well as the HR based on a Cox proportional hazards model (results are interpreted as relative cause-specific hazards in the presence of competing risks). The "overall" analyses correct for LTA4H genotype (CC alone) and MRC grade (CC & CT combined as well as CC alone).  Both ITT and PP analyses will be performed.

#### Outcome 1: Death over the first 12 months after randomization


##### Figure 3.1: Kaplan-Meier estimates

```{r outcome-1-ep}
endpoints_ran4 = left_join(bsl_ran, endpoints_ran2 |> select(usubjid, ev_death_12m, tt_death_12m), by='usubjid') |> mutate(ev_death_12m = as.logical(ev_death_12m)) |>
  mutate(
    mt_death_12m  = tt_death_12m/365*12,
    tbm_dx2 = droplevels2(tbm_dx2),
    resist = droplevels2(resist))

```

```{r figure-2}
#| out-width: 100%
#| fig-width: 6
#| fig-asp: 1.1


plt_combined <- ggsurvplot(
  survfit(Surv(mt_death_12m, ev_death_12m) ~ arm, 
          data = endpoints_ran4 |> filter(lta4hresult!='TT' ) |>
     mutate(lta4hresult = 'CC & CT')), 
  data = endpoints_ran4 |> filter(lta4hresult!='TT') |>
     mutate(lta4hresult = 'CC & CT'),  
  risk.table = FALSE,  censor = FALSE, pval = FALSE, conf.int = TRUE, 
  short.panel.labs = TRUE,
  # ylab='Percentage of survival',
  facet.by = 'lta4hresult',
  # surv.scale='percent',
  xlim = c(0, 12), xlab = "Months since randomization", 
  legend.title = 'Treatment arm',
  ggtheme = theme_bw(base_size=12),
  tables.theme = theme(axis.line = element_blank(), axis.text = element_blank(),
                       axis.title = element_blank(), axis.ticks = element_blank()),
  fontsize = 2, break.x.by=1,
  palette=ggsci::pal_nejm()(10)[2:3],
  # legend.labs = arm_levels,
  risk.table.y.text.col = TRUE, risk.table.y.text = FALSE)
  # theme(axis.title.x = element_blank())

plt_genotype <- ggsurvplot_facet(
  survfit(Surv(mt_death_12m, ev_death_12m) ~ arm + lta4hresult, 
          data = endpoints_ran4 |> filter(lta4hresult!='TT' )), 
  data = endpoints_ran4 |> filter(lta4hresult!='TT' ),
  risk.table = FALSE,  censor = FALSE, pval = FALSE, conf.int = TRUE, 
  facet.by = 'lta4hresult',
  # surv.scale='percent',
  short.panel.labs = TRUE,
  # ylab='Percentage of survival',
  xlim = c(0, 12), xlab = "Months since randomization",
  legend.title = 'Treatment arm',
  ggtheme = theme_bw(base_size=12),
  tables.theme = theme(axis.line = element_blank(), axis.text = element_blank(),
                       axis.title = element_blank(), axis.ticks = element_blank()),
  fontsize = 2, break.x.by=2,
   palette=ggsci::pal_nejm()(10)[2:3],
  risk.table.y.text.col = TRUE, risk.table.y.text = FALSE)

plt_combined/plt_genotype + plot_layout(guides='collect') & theme(legend.position = 'bottom')

```

##### Table 3.1: Overall incidence of death over the first 12 months after randomization


```{r outcome1-tbl}
#| message: false

# CC and CT combined

fml <- Surv(mt_death_12m, ev_death_12m) ~ arm + strata(tbmgrade, lta4hresult)
cox.c3 <- 
  sstable.survcomp(fml, data=subset(endpoints_ran4, lta4hresult %in% c('CC', 'CT')), 
                   digits=2,
                   time=3, compare.method = 'cox', add.prop.haz.test = F, flextable = F)

footer <- cox.c3$footer
cox.c3 <- cox.c3$table[1:3,]


cox.c6 <- 
  sstable.survcomp(fml, data=subset(endpoints_ran4, lta4hresult %in% c('CC', 'CT')), 
                   digits=2,
                   time=6, compare.method = 'cox',add.prop.haz.test = F, flextable = F)$table[3,, drop=F]

cox.c9 <- 
  sstable.survcomp(fml, data=subset(endpoints_ran4, lta4hresult %in% c('CC', 'CT')), 
                   digits=2,
                   time=9, compare.method = 'cox', add.prop.haz.test = F, flextable = F)$table[3,, drop=F]


cox.c12 <-
  rmst.c12 <- 
  sstable.survcomp(
    fml, 
    data=subset(endpoints_ran4, lta4hresult %in% c('CC', 'CT')),
    digits=2,
    time=Inf, 
    compare.method = 'cox', 
    add.prop.haz.test = F,
    flextable = F)$table[3,, drop=F]

rmst.c12 <- 
  sstable.survcomp(
    Surv(mt_death_12m, ev_death_12m) ~ arm + tbmgrade + lta4hresult, 
    data=subset(endpoints_ran4, lta4hresult %in% c('CC', 'CT')) |> mutate(lta4hresult = droplevels(lta4hresult)),
    digits=2,
    time=Inf, 
    compare.method = 'rmst', 
    compare.args = list(
      type='lost.diff',
      model.censoring = "stratified", 
      formula.censoring = ~arm + tbmgrade + lta4hresult),
    flextable = F)

# cuminc.c12 <- 
#   sstable.survcomp(
#     Surv(mt_death_12m, ev_death_12m) ~ arm + tbmgrade + lta4hresult, 
#     data=subset(endpoints_ran4, lta4hresult %in% c('CC', 'CT')) |> mutate(lta4hresult = droplevels(lta4hresult)),
#     time=Inf, 
#     compare.method = 'cuminc', 
#     compare.args = list(
#       model.censoring = "stratified", 
#       formula.censoring = ~arm + tbmgrade + lta4hresult),
#     flextable = F)

rmst.c12 <- rmst.c12$table[1:3, ncol(rmst.c12$table), drop=F]
# cuminc.c12 <- cuminc.c12$table[1:3, ncol(cuminc.c12$table), drop=F]

cox.c3[3,4] <- cox.c6[1,4] <- cox.c9[1,4] <- ''
cox.c3[3,1] <- '3 months'
cox.c6[1,1] <- '6 months'
cox.c9[1,1] <- '9 months'
cox.c12[1,1] <- '12 months'

cox.c <- rbind(cox.c3, cox.c6, cox.c9, cox.c12) |> cbind('')
cox.c[2,1] <- cox.c[1,1]
cox.c[1:2, ncol(cox.c)] <- rmst.c12[1:2,]
cox.c[nrow(cox.c), ncol(cox.c)] <- rmst.c12[3,]

# cox.c <- cbind(cox.c, '')
# cox.c[1:2, ncol(cox.c)] <- cuminc.c12[1:2,]
# cox.c[nrow(cox.c), ncol(cox.c)] <- cuminc.c12[3,]

# CC only

fml <- Surv(mt_death_12m, ev_death_12m) ~ arm + strata(tbmgrade)

cox.cc3 <- 
  sstable.survcomp(fml, data=subset(endpoints_ran4, lta4hresult %in% c('CC')),
                   digits=2,
                   time=3, compare.method = 'cox', add.prop.haz.test = F, flextable = F)$table[3,,drop=F]


cox.cc6 <- 
 sstable.survcomp(fml, data=subset(endpoints_ran4, lta4hresult %in% c('CC')),
                  digits=2,
                  time=6, compare.method = 'cox', add.prop.haz.test = F, flextable = F)$table[3,,drop=F]


cox.cc9 <- 
  sstable.survcomp(fml, data=subset(endpoints_ran4, lta4hresult %in% c('CC')),
                   digits=2,
                   time=9, compare.method = 'cox', add.prop.haz.test = F, flextable = F)$table[3,,drop=F]

cox.cc12 <- sstable.survcomp(fml, data=subset(endpoints_ran4, lta4hresult %in% c('CC')), 
                             digits=2,
                             time=Inf, compare.method = 'cox', add.prop.haz.test = F, flextable = F)$table[3,,drop=F]


rmst.cc12 <- 
  sstable.survcomp(
    Surv(mt_death_12m, ev_death_12m) ~ arm + tbmgrade, 
    data=subset(endpoints_ran4, lta4hresult %in% c('CC')), 
    digits=2,
    time=Inf, 
    compare.method = 'rmst', 
    compare.args = list(
      type='lost.diff',
      model.censoring = "stratified",
      formula.censoring = ~arm + tbmgrade),
    flextable = F)

# cuminc.cc12 <- 
#   sstable.survcomp(
#     Surv(mt_death_12m, ev_death_12m) ~ arm + tbmgrade, 
#     data=subset(endpoints_ran4, lta4hresult %in% c('CC')), 
#     time=Inf, 
#     compare.method = 'cuminc', 
#     compare.args = list(
#       model.censoring = "stratified",
#       formula.censoring = ~arm + tbmgrade),
#     flextable = F)

rmst.cc12  <- rmst.cc12$table[3, ncol(rmst.cc12$table), drop=F]
# cuminc.cc12  <- cuminc.cc12$table[3, ncol(cuminc.cc12$table), drop=F]


cox.cc3[1,4] <- cox.cc6[1,4] <- cox.cc9[1,4] <- ''
cox.cc3[1,1] <- '3 months'
cox.cc6[1,1] <- '6 months'
cox.cc9[1,1] <- '9 months'
cox.cc12[1,1] <- '12 months'

cox.cc <- rbind(cox.cc3, cox.cc6, cox.cc9, cox.cc12) |> cbind('')
cox.cc[nrow(cox.cc), ncol(cox.cc)] <- rmst.cc12[1,1]

# cox.cc <- cbind(cox.cc, '')
# cox.cc[nrow(cox.cc), ncol(cox.cc)] <- cuminc.cc12[1,1]

table5.1 <-
  cbind(
    c('Genotype','', rep('CC & CT', nrow(cox.cc)), rep('CC', nrow(cox.cc))),
    rbind(cox.c, cox.cc)
  )

ss_flextable(table5.1, 
             footer =  c('RMTL: Restricted mean time lost', 
                        'HR and p value were based on Cox proportional hazard model with MRC Grade and LTA4H genotype as stratum variables.',
                        'RMTL difference (months) and p value were based on Restricted mean survival time model, correcting for MRC Grade and LTA4H genotype.'
                       # 'Cumul.inc difference and p value were based on Generalized linear models for cumulative incidence, correcting for MRC Grade and LTA4H genotype'
                        )) |>
  flextable::merge_v(j=1) |>
  flextable::hline(i=4, border=officer::fp_border()) |>
  flextable::hline(i=5, j=1,border=officer::fp_border(color="black", width = 1.5), part='body')

```

<!-- ##### Figure 3.2: Forest plot of comparison {.tabset .tabset-fade}

###### CoxPH -->

```{r outcome-1-cox-fp}
#| fig-width: 5
#| fig-asp: 1
#| out-width: 100%
#| eval: false
fit.c <- coxph(Surv(mt_death_12m, ev_death_12m) ~ `CCCT` + strata(tbmgrade, lta4hresult), data=subset(endpoints_ran4, lta4hresult %in% c('CC', 'CT')) |> mutate(`CCCT`=relevel(arm, ref=levels(arm)[[2]])))
fit.cc <- coxph(Surv(mt_death_12m, ev_death_12m) ~ CC + strata(tbmgrade, lta4hresult), data=subset(endpoints_ran4, lta4hresult %in% c('CC')) |> mutate(CC=relevel(arm, ref=levels(arm)[[2]])))


```


<!-- ###### RMST -->

```{r outcome-1-rmst-fp}
#| fig-width: 5
#| fig-asp: 1
#| out-width: 100%
#| eval: false

endpoints_ran4_ccct <- subset(endpoints_ran4, lta4hresult %in% c('CC', 'CT'))
tau <- with(endpoints_ran4_ccct, minimax(mt_death_12m, arm))
fit.c <- eventglm::rmeanglm(
  Surv(mt_death_12m, ev_death_12m) ~ `CCCT` + tbmgrade + lta4hresult, 
  data=subset(endpoints_ran4, lta4hresult %in% c('CC', 'CT')) |>
    mutate(
      lta4hresult = droplevels(lta4hresult),
      `CCCT`=relevel(arm, ref=levels(arm)[[2]])),
  time = tau,
  model.censoring = 'stratified', 
  formula.censoring = ~ `CCCT` + tbmgrade + lta4hresult
  )
fit.cc <- eventglm::rmeanglm(
  Surv(mt_death_12m, ev_death_12m) ~ CC + tbmgrade,
  data=subset(endpoints_ran4, lta4hresult %in% c('CC')) |>
    mutate(
      lta4hresult = droplevels(lta4hresult),
      CC=relevel(arm, ref=levels(arm)[[2]])),
  time = tau,
  model.censoring = 'stratified', 
  formula.censoring = ~ CC + tbmgrade
  )

```


##### Table 3.2: Subgroup comparison of death over the first 12 months after randomization {.tabset .tabset-fade}

We performed subgroup analysis for the following variables: LTA4H genotype, TBM MRC severity grade at enrolment (I, II, or III), TBM diagnosis (definite, probable, possible). Note that in the "All patients" group, no other variables were included, explaining the discrepancy in the estimates with the Overall table above. 

##### Figure 3.2: Kaplan-Meier estimates for subgroups (excluding LTA4H, which was mentioned above)

```{r figure-3.2}
#| fig-asp: 0.8
#| fig-width: 10
#| out-width: 100%

endpoints_ran4.2 <- endpoints_ran4 |> filter(lta4hresult %in% c('CC', 'CT')) |>
  mutate(lta4hresult=droplevels2(lta4hresult) |> 
           structure(label = attr(bsl_ran$lta4hresult, 'label')))

km_subgroups <-
  lapply(
    c('tbm_dx2', 'tbmgrade'),
    function(subgroup){
      dt <- endpoints_ran4.2
      subgroup_lab <- attr(dt[[subgroup]], 'label') %||% subgroup
      ggsurvplot(
        survfit(Surv(mt_death_12m, ev_death_12m) ~ arm, 
                data = dt),
        data=dt,
        risk.table = FALSE,  censor = FALSE, pval = FALSE, conf.int = TRUE, 
        short.panel.labs = TRUE,
        xlim = c(0, 12), xlab = "Months since randomization", break.time.by = 1, 
        ggtheme = theme_bw(base_size=12) + theme(plot.title=element_text(face='bold', size=14, hjust = 0.5), 
                                                 plot.title.position = 'panel'),
        tables.theme = theme(axis.line = element_blank(), axis.text = element_blank(),
                             axis.title = element_blank(), axis.ticks = element_blank()),
        fontsize = 2, break.x.by=2,
        palette=ggsci::pal_nejm()(10)[2:3],
        title=subgroup_lab,
        nrow=1,
        facet.by = subgroup,
        legend.title='Treatment arm',
        # legend.labs=arm_levels,
        risk.table.y.text.col = TRUE, risk.table.y.text = FALSE
      )
    }
  )

# for (i in seq_along(km_subgroups)){
#   if (i < length(km_subgroups)) km_subgroups[[i]] <- km_subgroups[[i]] + 
#       theme(axis.title.x = element_blank())
#                                                                 
# }

wrap_plots(km_subgroups, ncol=1) + plot_layout(guides='collect') & theme(legend.position = 'bottom')

```

:::{.panel-tabset .tabset-fade}

###### CoxPH

```{r outcome1-subgroup-cox}
sstable.survcomp.subgroup(
  base.model=Surv(mt_death_12m, ev_death_12m) ~ arm,
  subgroup.model = ~lta4hresult + tbmgrade + tbm_dx2, 
  digits=2,
  data = endpoints_ran4.2,
  # overall.model = ~ strata(lta4hresult , tbmgrade),
  flextable = TRUE)
```

###### RMTL

```{r outcome1-subgroup-rmst}
rmst_tbl <- sstable.survcomp.subgroup(
  base.model=Surv(mt_death_12m, ev_death_12m) ~ arm,
  subgroup.model = ~lta4hresult + tbmgrade + tbm_dx2 ,
  digits=2,
  data = endpoints_ran4.2,
  compare.method = 'rmst',
  compare.args=list(type='lost.diff', unit='months'),
  flextable = FALSE)

rmst_tbl$footer[[2]] <- "RMTL difference (months) and p value were based on Restricted mean survival time model." 

ss_flextable(rmst_tbl)
```

:::

##### Forest plot for subgroup analysis

```{r outcome-1-forest-plot-1}

# forest.coef <- data.frame(genotype=character(0), outcome=character(0), model=character(0), est=numeric(0), l95=numeric(0), u95=numeric(0))

outcome <- 'Death'
# Cox
cox.c <- coxph(Surv(mt_death_12m, ev_death_12m) ~ arm + strata(tbmgrade, lta4hresult), data=subset(endpoints_ran4, lta4hresult %in% c('CC', 'CT')))
cox.cc <- coxph(Surv(mt_death_12m, ev_death_12m) ~ arm + strata(tbmgrade, lta4hresult), data=subset(endpoints_ran4, lta4hresult %in% c('CC')))

# coef.cox.c <- c('CC & CT', outcome, 'Cox PH', (c(coef(cox.c), confint(cox.c))))
# coef.cox.cc <- c('CC', outcome, 'Cox PH', (c(coef(cox.cc), confint(cox.cc))))

tidy_cox_c <- broom::tidy(cox.c, exponentiate=TRUE, conf.int=TRUE) |>
  cbind(.subgroup_label = 'CC & CT',
        .subgroup_name =  'CC & CT',
        .subgroup_val = outcome) |>
  select(starts_with('.subgroup'), everything())

tidy_cox_cc <-  broom::tidy(cox.cc, exponentiate=TRUE, conf.int=TRUE) |>
  cbind(.subgroup_label = 'CC',
        .subgroup_name =  'CC',
        .subgroup_val = outcome)

tidy_cox_subgroup <- tidy_subgroup(
  coxph(Surv(mt_death_12m, ev_death_12m) ~ arm,
        data=subset(endpoints_ran4, 
                lta4hresult %in% c('CC', 'CT')) |>
      mutate(lta4hresult = droplevels(lta4hresult))),
  group = c(lta4hresult, tbmgrade, tbm_dx2), data = endpoints_ran4.2,
  exponentiate=TRUE
)

# RMST
endpoints_ran4_ccct <- subset(endpoints_ran4, lta4hresult %in% c('CC', 'CT'))
tau <- with(endpoints_ran4_ccct, minimax(mt_death_12m, arm))

rmst.c <- eventglm::rmeanglm(
  Surv(mt_death_12m, ev_death_12m) ~ arm + tbmgrade + lta4hresult, 
  data=subset(endpoints_ran4, lta4hresult %in% c('CC', 'CT')) |>
    mutate(lta4hresult = droplevels(lta4hresult)),
  time = tau,
  model.censoring = 'stratified', 
  formula.censoring = ~ arm + tbmgrade + lta4hresult
  )
rmst.cc <- eventglm::rmeanglm(
  Surv(mt_death_12m, ev_death_12m) ~ arm + tbmgrade,
  data=subset(endpoints_ran4, lta4hresult %in% c('CC')) |>
    mutate(lta4hresult = droplevels(lta4hresult)),
  time = tau,
  model.censoring = 'stratified', 
  formula.censoring = ~ arm + tbmgrade
  )

tidy_rmst_c <- broom::tidy(rmst.c, conf.int=TRUE) |>
  cbind(.subgroup_label = 'CC & CT',
        .subgroup_name =  'CC & CT',
        .subgroup_val = outcome) |>
  select(starts_with('.subgroup'), everything())

tidy_rmst_cc <-  broom::tidy(rmst.cc, conf.int=TRUE) |>
  cbind(.subgroup_label = 'CC',
        .subgroup_name =  'CC',
        .subgroup_val = outcome) 

tidy_rmst_subgroup <- tidy_subgroup(
  eventglm::rmeanglm(
    Surv(mt_death_12m, ev_death_12m) ~ arm, 
    data=subset(endpoints_ran4, 
                lta4hresult %in% c('CC', 'CT')) |>
      mutate(lta4hresult = droplevels(lta4hresult)),
    time = tau,
    model.censoring='stratified',
    formula.censoring=~arm),
  group = c(lta4hresult, tbmgrade, tbm_dx2), 
  data = filter(endpoints_ran4, lta4hresult %in% c('CC', 'CT')) |>
    mutate(lta4hresult = droplevels2(lta4hresult)),
) |>
  mutate(across(c(estimate, conf.low, conf.high), `-`)) |>
  rename(rmst.estimate=estimate, rmst.conf.high=conf.low,
         rmst.conf.low=conf.high, rmst.p.value=p.value) |>
  select(c(.subgroup_label, .subgroup_name, term, starts_with('rmst')))

tidy_cox_outcome1 <- bind_rows(tidy_cox_c, tidy_cox_cc)
tidy_rmst_outcome1 <- bind_rows(tidy_rmst_c, tidy_rmst_cc) |>
  mutate(across(c(estimate, conf.low, conf.high), `-`)) |>
  rename(rmst.estimate=estimate, rmst.conf.high=conf.low,
         rmst.conf.low=conf.high, rmst.p.value=p.value) |>
  select(c(.subgroup_label, .subgroup_name, .subgroup_val, term,
           starts_with('rmst')))
tidy_outcome1 <- inner_join(tidy_cox_outcome1, tidy_rmst_outcome1)
tidy_subgroup_both <- inner_join(tidy_cox_subgroup, tidy_rmst_subgroup) |> 
  as_tidy_subgroup() |>
  as_forest_dt(
    terms = glue::glue('arm{arm_levels[2]}'),
    stats =  c(
      `HR (95% CI)` = format.ci(estimate, conf.low, conf.high, digits = 2),
      `p-value HR` = format.pval(p.value, digits = 2, eps = 0.001),
      `RMTL.diff (95% CI)` = format.ci(rmst.estimate, rmst.conf.low, rmst.conf.high, digits = 2),
      `p-value RMTL` = format.pval(rmst.p.value, digits = 2, eps = 0.001)
      ),
    plot_pos = c(2,5),
    plot_width = c(1.5,1.5))
```

```{r outcome-1-forest-plot-2}
#| fig-width: 10
#| out-width: 100%

forestploter(
  tidy_subgroup_both,
  stats_col = c(Subgroup, `HR (95% CI)`, `RMTL.diff (95% CI)`),
  terms=paste0('arm',arm_levels[2]), ref_line=c(1,0),
  est=list(estimate, rmst.estimate),
  lower=list(conf.low, rmst.conf.low),
  upper=list(conf.high, rmst.conf.high),
  x_trans=c('log', 'none'),
  ci_column=c(2,4),
  arrow_lab = glue::glue('{rev(arm_levels)} favoured'),
  theme=fr_theme)
```

#### Outcome 2: First neurological event within 12 months after randomization


##### Figure 3.3: Aalen-Johansen estimates

These plots visualize time to first neurological event within 12 months after randomization (curves going up from zero), with death as competing event (curves going down from one).

```{r outcome-2-ep}
endpoints_ran5 = left_join(bsl_ran, endpoints_ran2 |> select(usubjid, ev_newnev_12m, tt_newnev_12m, ev_death_12m, tt_death_12m), by='usubjid') |>
  mutate(
    ev_newnev_12m = case_when(
      ev_newnev_12m == 1 & tt_death_12m >= tt_newnev_12m ~ "nev", 
      ev_death_12m == 1 & tt_death_12m < tt_newnev_12m ~ "death",
      TRUE ~ "cen") |> factor(levels=c('cen', 'nev', 'death')),
    tt_newnev_12m = pmax(1/365/24, pmin(tt_newnev_12m, tt_death_12m, na.rm=TRUE)), #add 1 hrs
    mt_newnev_12m  = tt_newnev_12m/365*12,
    tbm_dx2 = droplevels2(tbm_dx2),
    resist = droplevels2(resist))

```

```{r figure-3.3}
#| out-width: 100%
#| fig-width: 6
#| fig-asp: 1.1

# outc2.fit <- survfit(Surv(tt_newnev_12m, ev_newnev_12m) ~ arm, data = endpoints_ran5)
plt_combined <-  surv.dongle::gg_ajsurvplot2(
  Surv(mt_newnev_12m, ev_newnev_12m) ~ arm + lta4hresult, 
  data = endpoints_ran5 |> filter(!is.na(tt_newnev_12m), lta4hresult!='TT') |>
     mutate(lta4hresult = 'CC & CT', arm = relevel(arm, ref='Placebo')),
  main.event = 'nev',
  competing.event='death',
  type='alternate',
  facet.by = ~ lta4hresult
) +
  scale_x_continuous(name='Months since randomization', breaks=seq(0,12,1)) +
  ylab('Cumulative incidence | Survival') +
  scale_fill_manual(values=ggsci::pal_nejm()(10)[2:3], aesthetics=c('color', 'fill'), name='Treatment arm', labels=arm_levels) +
  # ggsci::scale_fill_nejm(name='Arm', labels=(arm_levels)) +
  # ggsci::scale_color_lancet(name='Arm', labels=(arm_levels)) +
  theme_bw()
  # theme(axis.title.x = element_blank())

plt_genotype <- surv.dongle::gg_ajsurvplot2(
  Surv(mt_newnev_12m, ev_newnev_12m) ~ arm + lta4hresult, 
  data = endpoints_ran5 |> 
    filter(!is.na(tt_newnev_12m), lta4hresult!='TT') |>
    mutate(arm = relevel(arm, ref='Placebo')),
  main.event = 'nev',
  competing.event='death',
  type='alternate',
  facet.by=~lta4hresult
) +
  scale_x_continuous(name='Months since randomization', breaks=seq(0,12,2)) + 
  ylab('Cumulative incidence | Survival') +
  # ggsci::scale_fill_lancet(name='Arm', breaks=arm_levels, labels = arm_levels) +
  scale_fill_manual(values=ggsci::pal_nejm()(10)[2:3], aesthetics=c('color', 'fill'), name='Treatment arm', labels=arm_levels) +
  # ggsci::scale_color_lancet(name='Arm', labels = arm_levels) +
  # ggsci::scale_fill_lancet(name='Arm', labels=arm_levels) +
  theme_bw() 
  
plt_combined/plt_genotype + plot_layout(guides = 'collect') &
  theme(legend.position = 'bottom') 

```

##### Table 3.3: Overall risk of first neurological event over the first 12 months after randomization


```{r outcome2-tbl}
#| message: false

# CC and CT combined

fml <- Surv(mt_newnev_12m, I(ev_newnev_12m=='nev')) ~ arm + strata(tbmgrade, lta4hresult)
cox.c3 <- 
  sstable.survcomp(fml, data=subset(endpoints_ran5, lta4hresult %in% c('CC', 'CT')),
                   digits=2,
                   time=3, compare.method = 'cox', add.prop.haz.test = F, flextable = F)

footer <- cox.c3$footer
cox.c3 <- cox.c3$table[1:3,]


cox.c6 <- 
  sstable.survcomp(fml, data=subset(endpoints_ran5, lta4hresult %in% c('CC', 'CT')), 
                   digits=2,
                   time=6, compare.method = 'cox',add.prop.haz.test = F, flextable = F)$table[3,, drop=F]

cox.c9 <- 
  sstable.survcomp(fml, data=subset(endpoints_ran5, lta4hresult %in% c('CC', 'CT')), 
                   digits=2,
                   time=9, compare.method = 'cox', add.prop.haz.test = F, flextable = F)$table[3,, drop=F]


cox.c12 <-
  rmst.c12 <- 
  sstable.survcomp(
    fml, 
    data=subset(endpoints_ran5, lta4hresult %in% c('CC', 'CT')),
    digits=2,
    time=Inf, 
    compare.method = 'cox', 
    add.prop.haz.test = F,
    flextable = F)$table[3,, drop=F]

rmst.c12 <- 
  sstable.survcomp(
    Surv(mt_newnev_12m, ev_newnev_12m) ~ arm + tbmgrade + lta4hresult, 
    data=subset(endpoints_ran5, lta4hresult %in% c('CC', 'CT')) |> mutate(lta4hresult = droplevels(lta4hresult)),
    digits=2,
    time=Inf, 
    compare.method = 'rmst', 
    compare.args = list(
      cause='nev',
      type='lost.diff',
      model.censoring = "stratified", 
      formula.censoring = ~arm + tbmgrade + lta4hresult),
    flextable = F)

# cuminc.c12 <- 
#   sstable.survcomp(
#     Surv(tt_newnev_12m, ev_newnev_12m) ~ arm + tbmgrade + lta4hresult, 
#     data=subset(endpoints_ran5, lta4hresult %in% c('CC', 'CT')) |> mutate(lta4hresult = droplevels(lta4hresult)),
#     time=Inf, 
#     compare.method = 'cuminc', 
#     compare.args = list(
#       cause='nev',
#       model.censoring = "stratified", 
#       formula.censoring = ~arm + tbmgrade + lta4hresult),
#     flextable = F)

rmst.c12 <- rmst.c12$table[1:3, ncol(rmst.c12$table), drop=F]
# cuminc.c12 <- cuminc.c12$table[1:3, ncol(cuminc.c12$table), drop=F]

cox.c3[3,4] <- cox.c6[1,4] <- cox.c9[1,4] <- ''
cox.c3[3,1] <- '3 months'
cox.c6[1,1] <- '6 months'
cox.c9[1,1] <- '9 months'
cox.c12[1,1] <- '12 months'

cox.c <- rbind(cox.c3, cox.c6, cox.c9, cox.c12) |> cbind('')
cox.c[2,1] <- cox.c[1,1]
cox.c[1:2, ncol(cox.c)] <- rmst.c12[1:2,]
cox.c[nrow(cox.c), ncol(cox.c)] <- rmst.c12[3,]
# cox.c <- cbind(cox.c, '')
# cox.c[1:2, ncol(cox.c)] <- cuminc.c12[1:2,]
# cox.c[nrow(cox.c), ncol(cox.c)] <- cuminc.c12[3,]

# CC only

fml <- Surv(tt_newnev_12m, I(ev_newnev_12m=='nev')) ~ arm + strata(tbmgrade)

cox.cc3 <- 
  sstable.survcomp(fml, data=subset(endpoints_ran5, lta4hresult %in% c('CC')), 
                   digits=2,
                   time=3, compare.method = 'cox', add.prop.haz.test = F, flextable = F)$table[3,,drop=F]


cox.cc6 <- 
 sstable.survcomp(fml, data=subset(endpoints_ran5, lta4hresult %in% c('CC')), 
                  digits=2,
                  time=6, compare.method = 'cox', add.prop.haz.test = F, flextable = F)$table[3,,drop=F]


cox.cc9 <- 
  sstable.survcomp(fml, data=subset(endpoints_ran5, lta4hresult %in% c('CC')),
                   digits=2,
                   time=9, compare.method = 'cox', add.prop.haz.test = F, flextable = F)$table[3,,drop=F]

cox.cc12 <- sstable.survcomp(fml, data=subset(endpoints_ran5, lta4hresult %in% c('CC')),
                             digits=2,
                             time=Inf, compare.method = 'cox', add.prop.haz.test = F, flextable = F)$table[3,,drop=F]


rmst.cc12 <- 
  sstable.survcomp(
    Surv(mt_newnev_12m, ev_newnev_12m) ~ arm + tbmgrade, 
    data=subset(endpoints_ran5, lta4hresult %in% c('CC')), 
    digits=2,
    time=Inf, 
    compare.method = 'rmst', 
    compare.args = list(
      cause='nev',
      type='lost.diff',
      model.censoring = "stratified",
      formula.censoring = ~arm + tbmgrade),
    flextable = F)


# cuminc.cc12 <- 
#   sstable.survcomp(
#     Surv(tt_newnev_12m, ev_newnev_12m) ~ arm + tbmgrade, 
#     data=subset(endpoints_ran5, lta4hresult %in% c('CC')), 
#     time=Inf, 
#     compare.method = 'cuminc', 
#     compare.args = list(
#       cause='nev',
#       model.censoring = "stratified",
#       formula.censoring = ~arm + tbmgrade),
#     flextable = F)

rmst.cc12  <- rmst.cc12$table[3, ncol(rmst.cc12 $table), drop=F]
# cuminc.cc12  <- cuminc.cc12$table[3, ncol(cuminc.cc12 $table), drop=F]


cox.cc3[1,4] <- cox.cc6[1,4] <- cox.cc9[1,4] <- ''
cox.cc3[1,1] <- '3 months'
cox.cc6[1,1] <- '6 months'
cox.cc9[1,1] <- '9 months'
cox.cc12[1,1] <- '12 months'

cox.cc <- rbind(cox.cc3, cox.cc6, cox.cc9, cox.cc12) |> cbind('')
cox.cc[nrow(cox.cc), ncol(cox.cc)] <- rmst.cc12[1,1]
# cox.cc <- cbind(cox.cc, '')
# cox.cc[nrow(cox.cc), ncol(cox.cc)] <- cuminc.cc12[1,1]

table3.3 <-
  cbind(
    c('Genotype','', rep('CC & CT', nrow(cox.cc)), rep('CC', nrow(cox.cc))),
    rbind(cox.c, cox.cc)
  )

ss_flextable(table3.3, 
             footer =  c('RMTL: Restricted mean time lost', 
                        'HR and p value were based on Cox cause-specific hazard model for event of interest with MRC Grade and LTA4H genotype as stratum variables.',
                        'RMTL difference (months) and p value were based on Restricted mean survival time model with death as a competing risk, correcting for MRC Grade and LTA4H genotype.'
                        # 'Cumul.inc difference and p value were based on Generalized linear models for cumulative incidence, correcting for MRC Grade and LTA4H genotype.'
                        )) |>
  flextable::merge_v(j=1) |>
  flextable::hline(i=4, border=officer::fp_border()) |>
  flextable::hline(i=5, j=1,border=officer::fp_border(color="black", width = 1.5), part='body')

```

```{r outcome2-fit-and-save-coef}
#| eval: false
outcome <- 'Any neurological events'
# Cox
cox.c <- coxph(Surv(mt_newnev_12m, ev_newnev_12m=='nev') ~ arm + strata(tbmgrade, lta4hresult), data=subset(endpoints_ran5, lta4hresult %in% c('CC', 'CT')))
cox.cc <- coxph(Surv(mt_newnev_12m, ev_newnev_12m=='nev') ~ arm + strata(tbmgrade, lta4hresult), data=subset(endpoints_ran5, lta4hresult %in% c('CC')))

coef.cox.c <- c('CC & CT', outcome, 'Cox PH', (c(coef(cox.c), confint(cox.c))))
coef.cox.cc <- c('CC', outcome, 'Cox PH', (c(coef(cox.cc), confint(cox.cc))))


# RMST
endpoints_ran5_ccct <- subset(endpoints_ran5, lta4hresult %in% c('CC', 'CT'))
tau <- with(endpoints_ran5_ccct, minimax(mt_newnev_12m, arm))

rmst.c <- eventglm::rmeanglm(
  Surv(mt_newnev_12m, ev_newnev_12m) ~ arm + tbmgrade + lta4hresult, 
  data=subset(endpoints_ran5, lta4hresult %in% c('CC', 'CT') & !is.na(mt_newnev_12m)) |>
    mutate(lta4hresult = droplevels(lta4hresult)),
  time = tau,
  cause='nev',
  model.censoring = 'stratified', 
  formula.censoring = ~ arm + tbmgrade + lta4hresult
  )
rmst.cc <- eventglm::rmeanglm(
  Surv(mt_newnev_12m, ev_newnev_12m) ~ arm + tbmgrade,
  data=subset(endpoints_ran5, lta4hresult %in% c('CC') & !is.na(mt_newnev_12m)) |>
    mutate(lta4hresult = droplevels(lta4hresult)),
  time = tau,
  cause='nev',
  model.censoring = 'stratified', 
  formula.censoring = ~ arm + tbmgrade
  )

coef.rmst.c <- c('CC & CT', outcome, 'RMTL', -(c(coef(rmst.c)[[2]], sort(confint(rmst.c)[2,], decreasing=TRUE)))) 
coef.rmst.cc <- c('CC', outcome, 'RMTL', -(c(coef(rmst.cc)[[2]], sort(confint(rmst.cc)[2,], decreasing=TRUE))))


forest.coef <- rbind(
  coef.cox.c, coef.cox.cc,
  coef.rmst.c, coef.rmst.cc
) |> data.frame() |> 
  setNames(names(forest.coef)) |>
  rbind(forest.coef)

```

##### Table 3.4: Subgroup comparison of first neurological events over the first 12 months after randomization {.tabset .tabset-fade}

We performed subgroup analysis for the following variables: LTA4H genotype, TBM MRC severity grade at enrolment (I, II, or III), TBM diagnosis (definite, probable, possible). Note that in the "All patients" group, no other variables were included, explaining the discrepancy in the estimates with the Overall table above. 

###### Figure 3.4: Aelen-Johansen estimates for subgroups (excluding LTA4H, which was mentioned above)

```{r figure-3.4}
#| fig-asp: 0.8
#| fig-width: 10
#| out-width: 100%

aj_subgroups <-
  lapply(
    c('tbm_dx2', 'tbmgrade'),
    function(subgroup){
      dt <- endpoints_ran5 |> 
          filter(!is.na(mt_newnev_12m), lta4hresult!='TT') |>
          mutate(arm = relevel(arm, ref='Placebo'))
      subgroup_lab <- attr(dt[[subgroup]], 'label') %||% subgroup
      fml <- Surv(mt_newnev_12m, ev_newnev_12m) ~ 1
      formula.tools::rhs(fml) <- formula.tools::rhs(as.formula(paste0('~arm+', subgroup)))
      facet <- as.formula(paste('~', subgroup))
      surv.dongle::gg_ajsurvplot2(
        fml,
        data = dt,
        main.event = 'nev',
        competing.event='death',
        type='alternate',
        facet.by= facet
      ) +
        ggtitle(subgroup_lab) +
        scale_x_continuous(name='Months since randomization', breaks=seq(0,12,2)) + 
        ylab('Cumulative incidence | Survival') +
        scale_fill_manual(values=ggsci::pal_nejm()(10)[2:3], aesthetics=c('color', 'fill'), name='Treatment arm', labels=arm_levels) +
        # ggsci::scale_color_lancet(name='Arm', labels = arm_levels) +
        # ggsci::scale_fill_lancet(name='Arm', labels=arm_levels) +
        theme_bw() +
        theme(plot.title=element_text(face='bold', size=14, hjust=.5))
    }
  )

# for (i in seq_along(aj_subgroups)){
#   if (i < length(aj_subgroups)) aj_subgroups[[i]] <- aj_subgroups[[i]] + 
#       theme(axis.title.x = element_blank())
#                                                                 
# }

wrap_plots(aj_subgroups, ncol=1) + plot_layout(guides='collect') & theme(legend.position = 'bottom')

```

::: {.panel-tabset .tabset-fade}

###### Cox cause-specific hazard

```{r outcome2-subgroup-cox}

sstable.survcomp.subgroup(
  base.model=Surv(tt_newnev_12m, ev_newnev_12m=='nev') ~ arm,
  subgroup.model = ~ lta4hresult + tbmgrade +tbm_dx2 ,
  digits=2,
  data = filter(endpoints_ran5, lta4hresult!='TT') |> mutate(lta4hresult = droplevels2(lta4hresult)),
  flextable = TRUE)
```

###### RMTL with death as competing risk

```{r outcome2-subgroup-rmst}

rmst_tbl <- sstable.survcomp.subgroup(
  base.model=Surv(mt_newnev_12m, ev_newnev_12m) ~ arm,
  subgroup.model = ~ lta4hresult + tbmgrade +tbm_dx2 ,
  digits=2,
  data = filter(endpoints_ran5, lta4hresult!='TT') |> mutate(lta4hresult = droplevels2(lta4hresult)),
  compare.method = 'rmst', compare.args=list(type='lost.diff', cause='nev', unit='months'),
  flextable=FALSE)

rmst_tbl$footer[[2]] <- "RMTL difference (months) and p value were based on Restricted mean survival time model." 

ss_flextable(rmst_tbl)
```

:::

##### Forest plot for subgroup-analysis

```{r outcome2-forest-plot-1}

# forest.coef <- data.frame(genotype=character(0), outcome=character(0), model=character(0), est=numeric(0), l95=numeric(0), u95=numeric(0))

outcome <- 'New neurological event (vs. death)'
# Cox
cox.c <- coxph(Surv(mt_newnev_12m, ev_newnev_12m=='nev') ~ arm + strata(tbmgrade, lta4hresult), data=subset(endpoints_ran5, lta4hresult %in% c('CC', 'CT')))
cox.cc <- coxph(Surv(mt_newnev_12m, ev_newnev_12m=='nev') ~ arm + strata(tbmgrade, lta4hresult), data=subset(endpoints_ran5, lta4hresult %in% c('CC')))


tidy_cox_c <- broom::tidy(cox.c, exponentiate=TRUE, conf.int=TRUE) |>
  cbind(.subgroup_label = 'CC & CT',
        .subgroup_name =  'CC & CT',
        .subgroup_val = outcome) |>
  select(starts_with('.subgroup'), everything())

tidy_cox_cc <-  broom::tidy(cox.cc, exponentiate=TRUE, conf.int=TRUE) |>
  cbind(.subgroup_label = 'CC',
        .subgroup_name =  'CC',
        .subgroup_val = outcome)

tidy_cox_subgroup <- tidy_subgroup(
  coxph(Surv(mt_newnev_12m, ev_newnev_12m=='nev') ~ arm, 
        data = filter(endpoints_ran5, lta4hresult!='TT') |> 
    mutate(lta4hresult = droplevels2(lta4hresult))),
  group = c(lta4hresult, tbmgrade, tbm_dx2), 
  data = filter(endpoints_ran5, lta4hresult!='TT') |> 
    mutate(lta4hresult = droplevels2(lta4hresult)),
  exponentiate=TRUE
)

# RMST
endpoints_ran5_ccct <- subset(endpoints_ran5, lta4hresult %in% c('CC', 'CT'))
tau <- with(endpoints_ran5_ccct, minimax(mt_newnev_12m, arm))

rmst.c <- eventglm::rmeanglm(
  Surv(mt_newnev_12m, ev_newnev_12m) ~ arm + tbmgrade + lta4hresult, 
  data=subset(endpoints_ran5, lta4hresult %in% c('CC', 'CT') & !is.na(mt_newnev_12m)) |>
    mutate(lta4hresult = droplevels(lta4hresult)),
  time = tau,
  cause='nev',
  model.censoring = 'stratified', 
  formula.censoring = ~ arm + tbmgrade + lta4hresult
  )
rmst.cc <- eventglm::rmeanglm(
  Surv(mt_newnev_12m, ev_newnev_12m) ~ arm + tbmgrade,
  data=subset(endpoints_ran5, lta4hresult %in% c('CC') & !is.na(mt_newnev_12m)) |>
    mutate(lta4hresult = droplevels(lta4hresult)),
  time = tau,
  cause='nev',
  model.censoring = 'stratified', 
  formula.censoring = ~ arm + tbmgrade
  )

# coef.rmst.c <- c('CC & CT', outcome, 'RMTL', -(c(coef(rmst.c)[[2]], sort(confint(rmst.c)[2,])))) 
# coef.rmst.cc <- c('CC', outcome, 'RMTL', -(c(coef(rmst.cc)[[2]], sort(confint(rmst.cc)[2,]))))

tidy_rmst_c <- broom::tidy(rmst.c, conf.int=TRUE) |>
  cbind(.subgroup_label = 'CC & CT',
        .subgroup_name =  'CC & CT',
        .subgroup_val = outcome) |>
  select(starts_with('.subgroup'), everything())

tidy_rmst_cc <-  broom::tidy(rmst.cc, conf.int=TRUE) |>
  cbind(.subgroup_label = 'CC',
        .subgroup_name =  'CC',
        .subgroup_val = outcome) 
# Strange behaviour: rmeanglm quantify rmst.diff for non competing risk and rmtl.diff for competing risks
tidy_rmst_subgroup <- tidy_subgroup(
  eventglm::rmeanglm(
    Surv(mt_newnev_12m, ev_newnev_12m) ~ arm, 
    data = filter(endpoints_ran5, lta4hresult!='TT') |> 
    mutate(lta4hresult = droplevels2(lta4hresult)),
    time = tau,
    model.censoring='stratified',
    formula.censoring=~arm),
  group = c(lta4hresult, tbmgrade, tbm_dx2), 
 data = filter(endpoints_ran5, lta4hresult!='TT') |> 
    mutate(lta4hresult = droplevels2(lta4hresult))
) |>
  # mutate(across(c(estimate, conf.low, conf.high), `-`)) |>
  rename(rmst.estimate=estimate, 
         rmst.conf.low=conf.low,
         rmst.conf.high=conf.high, 
         rmst.p.value=p.value) |>
  select(c(.subgroup_label, .subgroup_name, term,
           starts_with('rmst')))
# Strange behaviour: rmeanglm quantify rmst.diff for non competing risk and rmtl.diff for competing risks
tidy_cox_outcome2 <- bind_rows(tidy_cox_c, tidy_cox_cc)
tidy_rmst_outcome2 <- bind_rows(tidy_rmst_c, tidy_rmst_cc) |>
  # mutate(across(c(estimate, conf.low, conf.high), `-`)) |>
  rename(rmst.estimate=estimate,
         rmst.conf.low=conf.low,
         rmst.conf.high=conf.high, 
         rmst.p.value=p.value) |>
  select(c(.subgroup_label, .subgroup_name, .subgroup_val, term,
           starts_with('rmst')))
tidy_outcome2 <- inner_join(tidy_cox_outcome2, tidy_rmst_outcome2)
tidy_subgroup_both <- inner_join(tidy_cox_subgroup, tidy_rmst_subgroup) |> 
  as_tidy_subgroup() |>
  as_forest_dt(
    terms = glue::glue('arm{arm_levels[2]}'),
    stats =  c(
      `HR (95% CI)` = format.ci(estimate, conf.low, conf.high, digits = 2),
      `p-value HR` = format.pval(p.value, digits = 2, eps = 0.001),
      `RMTL.diff (95% CI)` = format.ci(rmst.estimate, rmst.conf.low, rmst.conf.high, digits = 2),
      `p-value RMTL` = format.pval(rmst.p.value, digits = 2, eps = 0.001)
      ),
    plot_pos = c(2,5),
    plot_width = c(1.5,1.5))
```

```{r outcome2-forest-plot-2}
#| fig-width: 10
#| out-width: 100%

forestploter(
  tidy_subgroup_both,
  stats_col = c(Subgroup, `HR (95% CI)`, `RMTL.diff (95% CI)`),
  terms=paste0('arm',arm_levels[2]), ref_line=c(1,0),
  est=list(estimate, rmst.estimate),
  lower=list(conf.low, rmst.conf.low),
  upper=list(conf.high, rmst.conf.high),
  x_trans=c('log', 'none'),
  ci_column=c(2,4),
  arrow_lab = glue::glue('{rev(arm_levels)} favoured'),
  theme=fr_theme)
```

#### Outcome 3: First use of open-label corticosteroid within 12 months after randomization

We performed analyses for open-label corticosteroid with (i) death and (ii) the primary endpoint as competing events.

##### Death as competing event

```{r outcome-3-ep}
names(open_drug) = tolower(names(open_drug))
open_drug_ran <- merge(open_drug, select(bsl_ran, usubjid, daterandom2, arm)) |>
  mutate(dex_daystart = difftime(dex_datestart, daterandom2, units='d'),
         reason_od = ifelse(is.na(reason_od), '(missing)', reason_od)) |>
  filter(dex_daystart > 0) |>
  arrange(usubjid, dex_datestart) |>
  slice(1, .by=usubjid)
#
# Death as competing risk 
endpoints_ranx <- open_drug_ran |>
  mutate(ev_od = TRUE, tt_od=as.numeric(dex_daystart)) |>
  select(usubjid, ev_od, tt_od) |>
  right_join(select(bsl_ran, usubjid, arm, lta4hresult,tbm_dx2, resist,tbmgrade), by='usubjid') |>
  left_join(select(endpoints_ran, usubjid=USUBJID, ev_death_12m, tt_death_12m), by='usubjid') |>
  mutate(
    ev_od = tidyr::replace_na(ev_od, FALSE),
    tt_od = pmax(0.01, ifelse(is.na(tt_od), tt_death_12m, tt_od)),
    ev_od_12m = ifelse(ev_od & tt_od > 365, FALSE, ev_od),
    tt_od_12m = pmin(tt_od, 365),
   
    ev_oddeath = case_when(ev_od_12m ~ 'Open', ev_death_12m == 1 ~ 'Death', TRUE ~ 'Cen') |> factor(levels=c('Cen', 'Open', 'Death')),
   tt_oddeath = pmax(1/365/24, pmin(tt_od_12m, tt_death_12m)), #adding 1 hrs
    mt_oddeath = tt_oddeath/365*12,
    tbm_dx2 = droplevels2(tbm_dx2),
    resist = droplevels2(resist)
  ) 

# Primary ep as competing risk
# for covenient, I derived it sepearately
endpoints_ranx2 <- open_drug_ran |>
  mutate(ev_od = TRUE, tt_od=as.numeric(dex_daystart)) |>
  select(usubjid, ev_od, tt_od, reason_od) |>
  right_join(select(bsl_ran, usubjid, arm, lta4hresult,tbm_dx2, resist,tbmgrade), by='usubjid') |>
  left_join(select(endpoints_ran, usubjid=USUBJID, ev_survival_neuro_12m, tt_survival_neuro_12m), by='usubjid') |>
  mutate(
    ev_od = tidyr::replace_na(ev_od, FALSE),
    tt_od = pmax(0.01, ifelse(is.na(tt_od), tt_survival_neuro_12m, tt_od)),
    ev_od_12m = ifelse(ev_od & tt_od > 365, FALSE, ev_od),
    tt_od_12m = pmin(tt_od, 365),
    ev = case_when(ev_od_12m & tt_survival_neuro_12m >= tt_od_12m  ~ 2,
                   ev_survival_neuro_12m == 1 & tt_survival_neuro_12m <= tt_od_12m ~ 3,
                   ev_survival_neuro_12m==0 & !ev_od_12m ~ 1),
    ev_odpep = case_when(ev == 2 ~ 'Open', ev == 3 ~ 'PrEP', ev==1 ~ 'Cen') |> factor(levels=c('Cen', 'Open', 'PrEP')),
    tt_odpep = pmax(1/365/24, pmin(tt_od_12m, tt_survival_neuro_12m)), #adding 1 hrs
    mt_odpep = tt_odpep/365*12,
    tbm_dx2 = droplevels2(tbm_dx2),
    resist = droplevels2(resist)
  ) |> select(usubjid, ev_odpep, tt_odpep, mt_odpep) 

endpoints_ranx <- left_join(endpoints_ranx, endpoints_ranx2)
```

###### Figure 3.5: Aalen-Johansen estimates

These plots visualize time to first use of open-label corticosteroid within 12 months after randomization (curves going up from zero), with death as competing event (curves going down from one).

```{r figure-3.5}
#| out-width: 100%
#| fig-width: 6
#| fig-asp: 1.1


plt_combined <-  surv.dongle::gg_ajsurvplot2(
  Surv(mt_oddeath, ev_oddeath, type='mstate') ~ arm + lta4hresult, 
  data = filter(endpoints_ranx, lta4hresult!='TT') |>
    mutate(lta4hresult = 'CC & CT'),
  main.event = 'Open',
  competing.event='Death',
  facet.by = ~ lta4hresult
) +
  ylab('Cumulative incidence | Survival') +
  scale_x_continuous(name='Months since randomization', breaks=seq(0,12,1)) + 
  scale_fill_manual(values=ggsci::pal_nejm()(10)[2:3], aesthetics=c('color', 'fill'), name='Treatment arm', labels=arm_levels) +
  # ggsci::scale_fill_lancet(name='Arm', labels=(arm_levels)) + 
  # ggsci::scale_color_lancet(name='Arm', labels=(arm_levels)) +
  theme_bw()
  # theme(axis.title.x = element_blank())

plt_genotype <-  surv.dongle::gg_ajsurvplot2(
  Surv(mt_oddeath, ev_oddeath, type='mstate') ~ arm + lta4hresult, 
  data = filter(endpoints_ranx, lta4hresult!='TT'),
  main.event = 'Open',
  competing.event='Death',
  facet.by=~lta4hresult
) +
  scale_x_continuous(name='Months since randomization', breaks=seq(0,12,2)) + 
  ylab('Cumulative incidence | Survival') +
  scale_fill_manual(values=ggsci::pal_nejm()(10)[2:3], aesthetics=c('color', 'fill'), name='Treatment arm', labels=arm_levels) +
  # ggsci::scale_fill_lancet(name='Arm', labels=(arm_levels)) + 
  # ggsci::scale_color_lancet(name='Arm', labels=(arm_levels)) +
  theme_bw() 
  
plt_combined/plt_genotype + plot_layout(guides = 'collect') &
  theme(legend.position = 'bottom') 
```



###### Table 3.5: Overall risk of first use of open-label corticosteroid over the first 12 months after randomization


```{r outcome3-tbl}
#| message: false

# CC and CT combined

fml <- Surv(mt_oddeath, ev_oddeath=='Open') ~ arm + strata(tbmgrade, lta4hresult)
cox.c3 <- 
  sstable.survcomp(fml, data=subset(endpoints_ranx, lta4hresult %in% c('CC', 'CT')), 
                   digits=2,
                   time=3, compare.method = 'cox', add.prop.haz.test = F, flextable = F)

footer <- cox.c3$footer
cox.c3 <- cox.c3$table[1:3,]


cox.c6 <- 
  sstable.survcomp(fml, data=subset(endpoints_ranx, lta4hresult %in% c('CC', 'CT')), 
                   digits=2,
                   time=6, compare.method = 'cox',add.prop.haz.test = F, flextable = F)$table[3,, drop=F]

cox.c9 <- 
  sstable.survcomp(fml, data=subset(endpoints_ranx, lta4hresult %in% c('CC', 'CT')),
                   digits=2,
                   time=9, compare.method = 'cox', add.prop.haz.test = F, flextable = F)$table[3,, drop=F]


cox.c12 <-
  sstable.survcomp(
    fml, 
    data=subset(endpoints_ranx, lta4hresult %in% c('CC', 'CT')),
    digits=2,
    time=Inf, 
    compare.method = 'cox', 
    add.prop.haz.test = F,
    flextable = F)$table[3,, drop=F]

rmst.c12 <- 
  sstable.survcomp(
    Surv(mt_oddeath, ev_oddeath) ~ arm + lta4hresult + tbmgrade, 
    data=subset(endpoints_ranx, lta4hresult %in% c('CC', 'CT')) |> mutate(lta4hresult = droplevels(lta4hresult)),
    digits=2,
    time=Inf, 
    compare.method = 'rmst', 
    compare.args = list(
      cause='Open',
      type='lost.diff',
      model.censoring = "stratified", 
      formula.censoring = ~arm+lta4hresult),
    flextable = F)

# cuminc.c12 <- 
#   sstable.survcomp(
#     Surv(mt_ev, ev_f) ~ arm + lta4hresult + tbmgrade, 
#     data=subset(endpoints_ranx, lta4hresult %in% c('CC', 'CT')) |> mutate(lta4hresult = droplevels(lta4hresult)),
#     time=Inf, 
#     compare.method = 'cuminc', 
#     compare.args = list(
#       cause='Open',
#       model.censoring = "stratified", 
#       formula.censoring = ~arm+lta4hresult),
#     flextable = F)

rmst.c12 <- rmst.c12$table[1:3, ncol(rmst.c12$table), drop=F]
# cuminc.c12 <- cuminc.c12$table[1:3, ncol(cuminc.c12$table), drop=F]

cox.c3[3,4] <- cox.c6[1,4] <- cox.c9[1,4] <- ''
cox.c3[3,1] <- '3 months'
cox.c6[1,1] <- '6 months'
cox.c9[1,1] <- '9 months'
cox.c12[1,1] <- '12 months'

cox.c <- rbind(cox.c3, cox.c6, cox.c9, cox.c12) |> cbind('')
cox.c[2,1] <- cox.c[1,1]
cox.c[1:2, ncol(cox.c)] <- rmst.c12[1:2,]
cox.c[nrow(cox.c), ncol(cox.c)] <- rmst.c12[3,]
# cox.c <- cbind(cox.c, '')
# cox.c[1:2, ncol(cox.c)] <- cuminc.c12[1:2,]
# cox.c[nrow(cox.c), ncol(cox.c)] <- cuminc.c12[3,]

# CC only

fml <- Surv(mt_oddeath, ev_oddeath == 'Open') ~ arm + strata(tbmgrade)

cox.cc3 <- 
  sstable.survcomp(fml, data=subset(endpoints_ranx, lta4hresult %in% c('CC')),
                   digits=2,
                   time=3, compare.method = 'cox', add.prop.haz.test = F, flextable = F)$table[3,,drop=F]


cox.cc6 <- 
 sstable.survcomp(fml, data=subset(endpoints_ranx, lta4hresult %in% c('CC')),
                  digits=2,
                  time=6, compare.method = 'cox', add.prop.haz.test = F, flextable = F)$table[3,,drop=F]


cox.cc9 <- 
  sstable.survcomp(fml, data=subset(endpoints_ranx, lta4hresult %in% c('CC')),
                   digits=2,
                   time=9, compare.method = 'cox', add.prop.haz.test = F, flextable = F)$table[3,,drop=F]

cox.cc12 <- sstable.survcomp(fml, data=subset(endpoints_ranx, lta4hresult %in% c('CC')), 
                             digits=2,
                             time=Inf, compare.method = 'cox', add.prop.haz.test = F, flextable = F)$table[3,,drop=F]


rmst.cc12 <- 
  sstable.survcomp(
    Surv(mt_oddeath, ev_oddeath) ~ arm + tbmgrade, 
    data=subset(endpoints_ranx, lta4hresult %in% c('CC')), 
    digits=2,
    time=Inf, 
    compare.method = 'rmst', 
    compare.args = list(
      cause='Open',
      type='lost.diff',
      model.censoring = "stratified",
      formula.censoring = ~arm + tbmgrade),
    flextable = F)

# cuminc.cc12 <- 
#   sstable.survcomp(
#     Surv(mt_ev, ev_f) ~ arm + tbmgrade, 
#     data=subset(endpoints_ranx, lta4hresult %in% c('CC')), 
#     time=Inf, 
#     compare.method = 'cuminc', 
#     compare.args = list(
#       cause='Open',
#       model.censoring = "stratified",
#       formula.censoring = ~arm + tbmgrade),
#     flextable = F)

rmst.cc12  <- rmst.cc12$table[3, ncol(rmst.cc12 $table), drop=F]
# cuminc.cc12  <- cuminc.cc12$table[3, ncol(cuminc.cc12 $table), drop=F]


cox.cc3[1,4] <- cox.cc6[1,4] <- cox.cc9[1,4] <- ''
cox.cc3[1,1] <- '3 months'
cox.cc6[1,1] <- '6 months'
cox.cc9[1,1] <- '9 months'
cox.cc12[1,1] <- '12 months'

cox.cc <- rbind(cox.cc3, cox.cc6, cox.cc9, cox.cc12) |> cbind('')
cox.cc[nrow(cox.cc), ncol(cox.cc)] <- rmst.cc12[1,1]
# cox.cc <- cbind(cox.cc, '')
# cox.cc[nrow(cox.cc), ncol(cox.cc)] <- cuminc.cc12[1,1]

table3.5 <-
  cbind(
    c('Genotype','', rep('CC & CT', nrow(cox.cc)), rep('CC', nrow(cox.cc))),
    rbind(cox.c, cox.cc)
  )

ss_flextable(table3.5, 
             footer =  c('RMTL: Restricted mean time lost', 
                        'HR and p value were based on Cox cause-specific hazard model for event of interestwith MRC Grade and LTA4H genotype as stratum variables.',
                        'RMTL difference (months) and p value were based on Restricted mean survival time model with death as a competing risk, correcting for MRC Grade and LTA4H genotype.'
                        # 'Cumul.inc difference and p value were based on Generalized linear models for cumulative incidence, correcting for MRC Grade and LTA4H genotype.'
                        )) |>
  flextable::merge_v(j=1) |>
  flextable::hline(i=4, border=officer::fp_border()) |>
  flextable::hline(i=5, j=1,border=officer::fp_border(color="black", width = 1.5), part='body')

```

```{r outcome3-fit-and-save-coef}
#| eval: false
outcome <- 'First use of corticosteroid'
# Cox
cox.c <- coxph(Surv(tt_oddeath, ev_oddeath == 'Open') ~ arm + strata(tbmgrade, lta4hresult), data=subset(endpoints_ranx, lta4hresult %in% c('CC', 'CT')))
cox.cc <- coxph(Surv(tt_oddeath, ev_oddeath == 'Open') ~ arm + strata(tbmgrade, lta4hresult), data=subset(endpoints_ranx, lta4hresult %in% c('CC')))

coef.cox.c <- c('CC & CT', outcome, 'Cox PH', (c(coef(cox.c), confint(cox.c))))
coef.cox.cc <- c('CC', outcome, 'Cox PH', (c(coef(cox.cc), confint(cox.cc))))


# RMST
endpoints_ranx_ccct <- subset(endpoints_ranx, lta4hresult %in% c('CC', 'CT'))
tau <- with(endpoints_ranx_ccct, minimax(mt_oddeath, arm))

rmst.c <- eventglm::rmeanglm(
  Surv(mt_oddeath, ev_oddeath) ~ arm + tbmgrade + lta4hresult, 
  data=subset(endpoints_ranx, lta4hresult %in% c('CC', 'CT')) |>
    mutate(lta4hresult = droplevels(lta4hresult)),
  cause='Open',
  time = tau,
  model.censoring = 'stratified', 
  formula.censoring = ~ arm + tbmgrade,
  )
rmst.cc <- eventglm::rmeanglm(
  Surv(mt_oddeath, ev_oddeath) ~ arm + tbmgrade,
  data=subset(endpoints_ranx, lta4hresult %in% c('CC')) |>
    mutate(lta4hresult = droplevels(lta4hresult)),
  cause='Open',
  time = tau,
  model.censoring = 'stratified', 
  formula.censoring = ~ arm + tbmgrade
  )

coef.rmst.c <- c('CC & CT', outcome, 'RMTL', -(c(coef(rmst.c)[[2]], sort(confint(rmst.c)[2,], decreasing = TRUE)))) 
coef.rmst.cc <- c('CC', outcome, 'RMTL', -(c(coef(rmst.cc)[[2]], sort(confint(rmst.cc)[2,], decreasing = TRUE))))


forest.coef <- rbind(
  coef.cox.c, coef.cox.cc,
  coef.rmst.c, coef.rmst.cc
) |> data.frame() |> 
  setNames(names(forest.coef)) |>
  rbind(forest.coef)

```

###### Table 3.6: Subgroup comparison of first use of corticosteroid over the first 12 months after randomization {.tabset .tabset-fade}

We performed subgroup analysis for the following variables: LTA4H genotype, TBM MRC severity grade at enrolment (I, II, or III), TBM diagnosis (definite, probable, possible). Note that in the "All patients" group, no other variables were included, explaining the discrepancy in the estimates with the Overall table above.  

###### Figure 3.6: Aelen-Johansen estimates for subgroups (excluding LTA4H, which was mentioned above)

```{r figure-3.6}
#| fig-asp: 0.8
#| fig-width: 10
#| out-width: 100%

aj_subgroups <-
  lapply(
    c('tbm_dx2', 'tbmgrade'),
    function(subgroup){
      dt <- filter(endpoints_ranx, lta4hresult!='TT') |> 
          mutate(lta4hresult = droplevels2(lta4hresult))
      subgroup_lab <- attr(dt[[subgroup]], 'label') %||% subgroup
      fml <- Surv(mt_oddeath, ev_oddeath) ~ 1
      formula.tools::rhs(fml) <- formula.tools::rhs(as.formula(paste0('~arm+', subgroup)))
      facet <- as.formula(paste('~', subgroup))
      surv.dongle::gg_ajsurvplot2(
        fml,
        data = dt,
        main.event = 'Open',
        competing.event='Death',
        type='alternate',
        facet.by= facet
      ) +
        ggtitle(subgroup_lab) +
        scale_x_continuous(name='Months since randomization', breaks=seq(0,12,2)) + 
        ylab('Cumulative incidence | Survival') +
        scale_fill_manual(values=ggsci::pal_nejm()(10)[2:3], aesthetics=c('color', 'fill'), name='Treatment arm', labels=arm_levels) +
        # ggsci::scale_color_lancet(name='Arm', labels = arm_levels) +
        # ggsci::scale_fill_lancet(name='Arm', labels=arm_levels) +
        theme_bw() +
        theme(plot.title=element_text(size=14, face='bold', hjust=.5))
    }
  )

# for (i in seq_along(aj_subgroups)){
#   if (i < length(aj_subgroups)) aj_subgroups[[i]] <- aj_subgroups[[i]] + 
#       theme(axis.title.x = element_blank())
#                                                                 
# }

wrap_plots(aj_subgroups, ncol=1) + plot_layout(guides='collect') & theme(legend.position = 'bottom')

```


::: {.panel-tabset .tabset-fade}

###### Cox cause-specific hazard

```{r outcome3-subgroup-cox}

sstable.survcomp.subgroup(
  base.model=Surv(mt_oddeath, ev_oddeath == 'Open') ~ arm,
  subgroup.model = ~ lta4hresult + tbmgrade + tbm_dx2,
  digits=2,
  data = filter(endpoints_ranx, lta4hresult!='TT') |> mutate(lta4hresult = droplevels2(lta4hresult)),
  flextable = TRUE)
```

###### RMTL with death as competing risk


```{r outcome3-subgroup-rmst}

rmst_tbl = sstable.survcomp.subgroup(
  base.model=Surv(mt_oddeath, ev_oddeath) ~ arm,
  digits=2,
  subgroup.model = ~ lta4hresult + tbmgrade +tbm_dx2 ,
  data = filter(endpoints_ranx, lta4hresult!='TT') |> mutate(lta4hresult = droplevels2(lta4hresult)),
  compare.method = 'rmst', compare.args=list(type='lost.diff', cause='Open', unit='months'),
  flextable=FALSE)

rmst_tbl$footer[[2]] <- "RMTL difference (months) and p value were based on Restricted mean survival time model." 

ss_flextable(rmst_tbl)
```
:::

###### Forest plot for subgroup analysis

```{r outcome-3-forest-plot-1}

# forest.coef <- data.frame(genotype=character(0), outcome=character(0), model=character(0), est=numeric(0), l95=numeric(0), u95=numeric(0))

outcome <- 'Switch to open-label (vs. death)'
# Cox
cox.c <- coxph(Surv(mt_oddeath, ev_oddeath == 'Open') ~ arm + strata(tbmgrade, lta4hresult), data=subset(endpoints_ranx, lta4hresult %in% c('CC', 'CT')))
cox.cc <- coxph(Surv(mt_oddeath, ev_oddeath== 'Open') ~ arm + strata(tbmgrade, lta4hresult), data=subset(endpoints_ranx, lta4hresult %in% c('CC')))


tidy_cox_c <- broom::tidy(cox.c, exponentiate=TRUE, conf.int=TRUE) |>
  cbind(.subgroup_label = 'CC & CT',
        .subgroup_name =  'CC & CT',
        .subgroup_val = outcome) |>
  select(starts_with('.subgroup'), everything())

tidy_cox_cc <-  broom::tidy(cox.cc, exponentiate=TRUE, conf.int=TRUE) |>
  cbind(.subgroup_label = 'CC',
        .subgroup_name =  'CC',
        .subgroup_val = outcome)

tidy_cox_subgroup <- tidy_subgroup(
  coxph(Surv(mt_oddeath, ev_oddeath == 'Open') ~ arm, 
        filter(endpoints_ranx, lta4hresult!='TT') |> 
          mutate(lta4hresult = droplevels2(lta4hresult))),
  group = c(lta4hresult, tbmgrade, tbm_dx2), 
  data = filter(endpoints_ranx, lta4hresult!='TT') |> 
    mutate(lta4hresult = droplevels2(lta4hresult)),
  exponentiate=TRUE
)

# RMST
endpoints_ranx_ccct <- subset(endpoints_ranx, lta4hresult %in% c('CC', 'CT'))
tau <- with(endpoints_ranx_ccct, minimax(mt_oddeath, arm))

rmst.c <- eventglm::rmeanglm(
  Surv(mt_oddeath, ev_oddeath) ~ arm + tbmgrade + lta4hresult, 
  data=subset(endpoints_ranx, lta4hresult %in% c('CC', 'CT')) |>
    mutate(lta4hresult = droplevels(lta4hresult)),
  cause='Open',
  time = tau,
  model.censoring = 'stratified', 
  formula.censoring = ~ arm + tbmgrade,
  )
rmst.cc <- eventglm::rmeanglm(
  Surv(mt_oddeath, ev_oddeath) ~ arm + tbmgrade,
  data=subset(endpoints_ranx, lta4hresult %in% c('CC')) |>
    mutate(lta4hresult = droplevels(lta4hresult)),
  cause='Open',
  time = tau,
  model.censoring = 'stratified', 
  formula.censoring = ~ arm + tbmgrade
  )

tidy_rmst_c <- broom::tidy(rmst.c, conf.int=TRUE) |>
  cbind(.subgroup_label = 'CC & CT',
        .subgroup_name =  'CC & CT',
        .subgroup_val = outcome) |>
  select(starts_with('.subgroup'), everything())

tidy_rmst_cc <-  broom::tidy(rmst.cc, conf.int=TRUE) |>
  cbind(.subgroup_label = 'CC',
        .subgroup_name =  'CC',
        .subgroup_val = outcome) 

tidy_rmst_subgroup <- tidy_subgroup(
  eventglm::rmeanglm(
    Surv(mt_oddeath, ev_oddeath) ~ arm , 
    data=filter(endpoints_ranx, lta4hresult!='TT') |> 
          mutate(lta4hresult = droplevels2(lta4hresult)),
    time = tau,
    model.censoring='stratified',
    formula.censoring=~arm),
  group = c(lta4hresult, tbmgrade, tbm_dx2), 
  data = filter(endpoints_ranx, lta4hresult!='TT') |> 
          mutate(lta4hresult = droplevels2(lta4hresult)),
) |>
  # mutate(across(c(estimate, conf.low, conf.high), `-`)) |>
  rename(rmst.estimate=estimate, 
         rmst.conf.high=conf.high, 
         rmst.conf.low=conf.low,
         rmst.p.value=p.value) |>
  select(c(.subgroup_label, .subgroup_name, term, starts_with('rmst')))

tidy_cox_outcome3 <- bind_rows(tidy_cox_c, tidy_cox_cc)
# Strange behaviour: rmeanglm quantify rmst.diff for non competing risk and rmtl.diff for competing risks
tidy_rmst_outcome3 <- bind_rows(tidy_rmst_c, tidy_rmst_cc) |>
  # mutate(across(c(estimate, conf.low, conf.high), `-`)) |>
  rename(rmst.estimate=estimate, 
         rmst.conf.high=conf.high, 
         rmst.conf.low=conf.low,
         rmst.p.value=p.value) |>
  select(c(.subgroup_label, .subgroup_name, .subgroup_val, term,
           starts_with('rmst')))
tidy_outcome3 <- inner_join(tidy_cox_outcome3, tidy_rmst_outcome3)
tidy_subgroup_both <- inner_join(tidy_cox_subgroup, tidy_rmst_subgroup) |> 
  as_tidy_subgroup() |>
  as_forest_dt(
    terms = glue::glue('arm{arm_levels[2]}'),
    stats =  c(
      `HR (95% CI)` = format.ci(estimate, conf.low, conf.high, digits = 2),
      `p-value HR` = format.pval(p.value, digits = 2, eps = 0.001),
      `RMTL.diff (95% CI)` = format.ci(rmst.estimate, rmst.conf.low, rmst.conf.high, digits = 2),
      `p-value RMTL` = format.pval(rmst.p.value, digits = 2, eps = 0.001)
      ),
    plot_pos = c(2,5),
    plot_width = c(1.5,1.5))
```

```{r outcome-3-forest-plot-2}
#| fig-width: 10
#| out-width: 100%

forestploter(
  tidy_subgroup_both,
  stats_col = c(Subgroup, `HR (95% CI)`, `RMTL.diff (95% CI)`),
  terms=paste0('arm',arm_levels[2]), ref_line=c(1,0),
  est=list(estimate, rmst.estimate),
  lower=list(conf.low, rmst.conf.low),
  upper=list(conf.high, rmst.conf.high),
  x_trans=c('log', 'none'),
  ci_column=c(2,4),
  arrow_lab = glue::glue('{rev(arm_levels)} favoured'),
  theme=fr_theme)
```

##### Primary endpoint as competing event

###### Figure 3.7: Aalen-Johansen estimates

These plots visualize time to first use of open-label corticosteroid within 12 months after randomization (curves going up from zero), with death as competing event (curves going down from one). 

```{r figure-3.7}
#| out-width: 100%
#| fig-width: 6
#| fig-asp: 1.1

plt_combined <-  surv.dongle::gg_ajsurvplot2(
  Surv(mt_odpep, ev_odpep, type='mstate') ~ arm + lta4hresult, 
  data = filter(endpoints_ranx, !is.na(tt_odpep), lta4hresult!='TT') |>
    mutate(lta4hresult = 'CC & CT'),
  main.event = 'Open',
  competing.event='PrEP',
  facet.by = ~ lta4hresult
) +
  scale_x_continuous(name='Months since randomization', breaks=seq(0,12,1)) +
  ylab('Cumulative incidence | Event-free') +
  scale_fill_manual(values=ggsci::pal_nejm()(10)[2:3], aesthetics=c('color', 'fill'), name='Treatment arm', labels=arm_levels) +
  # ggsci::scale_fill_lancet(name='Arm', labels=(arm_levels)) + 
  # ggsci::scale_color_lancet(name='Arm', labels=(arm_levels)) +
  theme_bw()
  # theme(axis.title.x = element_blank())

plt_genotype <-  surv.dongle::gg_ajsurvplot2(
  Surv(mt_odpep, ev_odpep, type='mstate') ~ arm + lta4hresult, 
  data = filter(endpoints_ranx, !is.na(tt_odpep), lta4hresult!='TT'),
  main.event = 'Open',
  competing.event='PrEP',
  facet.by=~lta4hresult
) +
  scale_x_continuous(name='Months since randomization', breaks=seq(0,12,2)) + 
  ylab('Cumulative incidence | Event-free') +
  scale_fill_manual(values=ggsci::pal_nejm()(10)[2:3], aesthetics=c('color', 'fill'), name='Treatment arm', labels=arm_levels) +
  # ggsci::scale_fill_lancet(name='Arm', labels=(arm_levels)) + 
  # ggsci::scale_color_lancet(name='Arm', labels=(arm_levels)) +
  theme_bw() 
  
plt_combined/plt_genotype + plot_layout(guides = 'collect') &
  theme(legend.position = 'bottom') 
```

###### Table 3.7: Overall risk of first use of open-label corticosteroid over the first 12 months after randomization


```{r outcome3b-tbl}
#| message: false

# CC and CT combined

fml <- Surv(mt_odpep, ev_odpep=='Open') ~ arm + strata(tbmgrade, lta4hresult)
cox.c3 <- 
  sstable.survcomp(fml, data=subset(endpoints_ranx, lta4hresult %in% c('CC', 'CT')), 
                   digits=2,
                   time=3, compare.method = 'cox', add.prop.haz.test = F, flextable = F)

footer <- cox.c3$footer
cox.c3 <- cox.c3$table[1:3,]


cox.c6 <- 
  sstable.survcomp(fml, data=subset(endpoints_ranx, lta4hresult %in% c('CC', 'CT')), 
                   digits=2,
                   time=6, compare.method = 'cox',add.prop.haz.test = F, flextable = F)$table[3,, drop=F]

cox.c9 <- 
  sstable.survcomp(fml, data=subset(endpoints_ranx, lta4hresult %in% c('CC', 'CT')),
                   digits=2,
                   time=9, compare.method = 'cox', add.prop.haz.test = F, flextable = F)$table[3,, drop=F]


cox.c12 <-
  sstable.survcomp(
    fml, 
    data=subset(endpoints_ranx, lta4hresult %in% c('CC', 'CT')),
    digits=2,
    time=Inf, 
    compare.method = 'cox', 
    add.prop.haz.test = F,
    flextable = F)$table[3,, drop=F]

rmst.c12 <- 
  sstable.survcomp(
    Surv(mt_odpep, ev_odpep) ~ arm + lta4hresult + tbmgrade, 
    data=subset(endpoints_ranx, lta4hresult %in% c('CC', 'CT')) |> mutate(lta4hresult = droplevels(lta4hresult)),
    digits=2,
    time=Inf, 
    compare.method = 'rmst', 
    compare.args = list(
      cause='Open',
      type='lost.diff',
      model.censoring = "stratified", 
      formula.censoring = ~arm+lta4hresult),
    flextable = F)

# cuminc.c12 <- 
#   sstable.survcomp(
#     Surv(mt_ev, ev_f) ~ arm + lta4hresult + tbmgrade, 
#     data=subset(endpoints_ranx, lta4hresult %in% c('CC', 'CT')) |> mutate(lta4hresult = droplevels(lta4hresult)),
#     time=Inf, 
#     compare.method = 'cuminc', 
#     compare.args = list(
#       cause='Open',
#       model.censoring = "stratified", 
#       formula.censoring = ~arm+lta4hresult),
#     flextable = F)

rmst.c12 <- rmst.c12$table[1:3, ncol(rmst.c12$table), drop=F]
# cuminc.c12 <- cuminc.c12$table[1:3, ncol(cuminc.c12$table), drop=F]

cox.c3[3,4] <- cox.c6[1,4] <- cox.c9[1,4] <- ''
cox.c3[3,1] <- '3 months'
cox.c6[1,1] <- '6 months'
cox.c9[1,1] <- '9 months'
cox.c12[1,1] <- '12 months'

cox.c <- rbind(cox.c3, cox.c6, cox.c9, cox.c12) |> cbind('')
cox.c[2,1] <- cox.c[1,1]
cox.c[1:2, ncol(cox.c)] <- rmst.c12[1:2,]
cox.c[nrow(cox.c), ncol(cox.c)] <- rmst.c12[3,]
# cox.c <- cbind(cox.c, '')
# cox.c[1:2, ncol(cox.c)] <- cuminc.c12[1:2,]
# cox.c[nrow(cox.c), ncol(cox.c)] <- cuminc.c12[3,]

# CC only

fml <- Surv(mt_odpep, ev_odpep == 'Open') ~ arm + strata(tbmgrade)

cox.cc3 <- 
  sstable.survcomp(fml, data=subset(endpoints_ranx, lta4hresult %in% c('CC')), 
                   digits=2,
                   time=3, compare.method = 'cox', add.prop.haz.test = F, flextable = F)$table[3,,drop=F]


cox.cc6 <- 
 sstable.survcomp(fml, data=subset(endpoints_ranx, lta4hresult %in% c('CC')), 
                  digits=2,
                  time=6, compare.method = 'cox', add.prop.haz.test = F, flextable = F)$table[3,,drop=F]


cox.cc9 <- 
  sstable.survcomp(fml, data=subset(endpoints_ranx, lta4hresult %in% c('CC')), 
                   digits=2,
                   time=9, compare.method = 'cox', add.prop.haz.test = F, flextable = F)$table[3,,drop=F]

cox.cc12 <- sstable.survcomp(fml, data=subset(endpoints_ranx, lta4hresult %in% c('CC')), 
                             digits=2,
                             time=Inf, compare.method = 'cox', add.prop.haz.test = F, flextable = F)$table[3,,drop=F]


rmst.cc12 <- 
  sstable.survcomp(
    Surv(mt_odpep, ev_odpep) ~ arm + tbmgrade, 
    data=subset(endpoints_ranx, lta4hresult %in% c('CC')), 
    digits=2,
    time=Inf, 
    compare.method = 'rmst', 
    compare.args = list(
      cause='Open',
      type='lost.diff',
      model.censoring = "stratified",
      formula.censoring = ~arm + tbmgrade),
    flextable = F)

# cuminc.cc12 <- 
#   sstable.survcomp(
#     Surv(mt_ev, ev_f) ~ arm + tbmgrade, 
#     data=subset(endpoints_ranx, lta4hresult %in% c('CC')), 
#     time=Inf, 
#     compare.method = 'cuminc', 
#     compare.args = list(
#       cause='Open',
#       model.censoring = "stratified",
#       formula.censoring = ~arm + tbmgrade),
#     flextable = F)

rmst.cc12  <- rmst.cc12$table[3, ncol(rmst.cc12 $table), drop=F]
# cuminc.cc12  <- cuminc.cc12$table[3, ncol(cuminc.cc12 $table), drop=F]


cox.cc3[1,4] <- cox.cc6[1,4] <- cox.cc9[1,4] <- ''
cox.cc3[1,1] <- '3 months'
cox.cc6[1,1] <- '6 months'
cox.cc9[1,1] <- '9 months'
cox.cc12[1,1] <- '12 months'

cox.cc <- rbind(cox.cc3, cox.cc6, cox.cc9, cox.cc12) |> cbind('')
cox.cc[nrow(cox.cc), ncol(cox.cc)] <- rmst.cc12[1,1]
# cox.cc <- cbind(cox.cc, '')
# cox.cc[nrow(cox.cc), ncol(cox.cc)] <- cuminc.cc12[1,1]

table3.5 <-
  cbind(
    c('Genotype','', rep('CC & CT', nrow(cox.cc)), rep('CC', nrow(cox.cc))),
    rbind(cox.c, cox.cc)
  )

ss_flextable(table3.5, 
             footer =  c('RMTL: Restricted mean time lost', 
                        'HR and p value were based on Cox cause-specific hazard model for event of interestwith MRC Grade and LTA4H genotype as stratum variables.',
                        'RMTL difference (months) and p value were based on Restricted mean survival time model with death as a competing risk, correcting for MRC Grade and LTA4H genotype.'
                        # 'Cumul.inc difference and p value were based on Generalized linear models for cumulative incidence, correcting for MRC Grade and LTA4H genotype.'
                        )) |>
  flextable::merge_v(j=1) |>
  flextable::hline(i=4, border=officer::fp_border()) |>
  flextable::hline(i=5, j=1,border=officer::fp_border(color="black", width = 1.5), part='body')

```


###### Table 3.8: Subgroup comparison of first use of corticosteroid over the first 12 months after randomization {.tabset .tabset-fade}

We performed subgroup analysis for the following variables: LTA4H genotype, TBM MRC severity grade at enrolment (I, II, or III), TBM diagnosis (definite, probable, possible). Note that in the "All patients" group, no other variables were included, explaining the discrepancy in the estimates with the Overall table above. 

###### Figure 3.8: Aelen-Johansen estimates for subgroups (excluding LTA4H, which was mentioned above)

```{r figure-3.8}
#| fig-asp: 0.8
#| fig-width: 10
#| out-width: 100%

aj_subgroups <-
  lapply(
    c('tbm_dx2', 'tbmgrade'),
    function(subgroup){
      dt <- filter(endpoints_ranx, lta4hresult!='TT') |> 
          mutate(lta4hresult = droplevels2(lta4hresult))
      subgroup_lab <- attr(dt[[subgroup]], 'label') %||% subgroup
      fml <- Surv(mt_odpep, ev_odpep) ~ 1
      formula.tools::rhs(fml) <- formula.tools::rhs(as.formula(paste0('~arm+', subgroup)))
      facet <- as.formula(paste('~', subgroup))
      surv.dongle::gg_ajsurvplot2(
        fml,
        data = dt,
        main.event = 'Open',
        competing.event='PrEP',
        type='alternate',
        facet.by= facet
      ) +
        ggtitle(subgroup_lab) +
        scale_x_continuous(name='Months since randomization', breaks=seq(0,12,2)) + 
        ylab('Cumulative incidence | Event-free') +
        scale_fill_manual(values=ggsci::pal_nejm()(10)[2:3], aesthetics=c('color', 'fill'), name='Treatment arm', labels=arm_levels) +
        # ggsci::scale_color_lancet(name='Arm', labels = arm_levels) +
        # ggsci::scale_fill_lancet(name='Arm', labels=arm_levels) +
        theme_bw() +
        theme(plot.title=element_text(size=14, face='bold', hjust=.5))
    }
  )

wrap_plots(aj_subgroups, ncol=1) + plot_layout(guides='collect') & theme(legend.position = 'bottom')

```

::: {.panel-tabset .tabset-fade}

###### Cox cause-specific hazard

```{r outcome3b-subgroup-cox}

sstable.survcomp.subgroup(
  base.model=Surv(mt_odpep, ev_odpep == 'Open') ~ arm,
  subgroup.model = ~ lta4hresult + tbmgrade + tbm_dx2,
  digits=2,
  data = filter(endpoints_ranx, lta4hresult!='TT') |> mutate(lta4hresult = droplevels2(lta4hresult)),
  flextable = TRUE)
```

###### RMTL with primary endpoint as competing risk


```{r outcome3b-subgroup-rmst}

rmst_tbl <- sstable.survcomp.subgroup(
  base.model=Surv(mt_odpep, ev_odpep) ~ arm,
  subgroup.model = ~ lta4hresult + tbmgrade +tbm_dx2 ,
  digits=2,
  data = filter(endpoints_ranx, lta4hresult!='TT') |> mutate(lta4hresult = droplevels2(lta4hresult)),
  compare.method = 'rmst', compare.args=list(type='lost.diff', cause='Open', unit='months'),
  flextable=FALSE)

rmst_tbl$footer[[2]] <- "RMTL difference (months) and p value were based on Restricted mean survival time model." 

ss_flextable(rmst_tbl)
```
:::

###### Primary endpoint as competing event

###### Forest plot for subgroup analysis


```{r outcome-3b-forest-plot-1}

# forest.coef <- data.frame(genotype=character(0), outcome=character(0), model=character(0), est=numeric(0), l95=numeric(0), u95=numeric(0))
outcome <- 'Switch to open-label (vs. primary.ep)'
# Cox
cox.c <- coxph(Surv(mt_odpep, ev_odpep == 'Open') ~ arm + strata(tbmgrade, lta4hresult), data=subset(endpoints_ranx, lta4hresult %in% c('CC', 'CT')))
cox.cc <- coxph(Surv(mt_odpep, ev_odpep == 'Open') ~ arm + strata(tbmgrade, lta4hresult), data=subset(endpoints_ranx, lta4hresult %in% c('CC')))


tidy_cox_c <- broom::tidy(cox.c, exponentiate=TRUE, conf.int=TRUE) |>
  cbind(.subgroup_label = 'CC & CT',
        .subgroup_name =  'CC & CT',
        .subgroup_val = outcome) |>
  select(starts_with('.subgroup'), everything())

tidy_cox_cc <-  broom::tidy(cox.cc, exponentiate=TRUE, conf.int=TRUE) |>
  cbind(.subgroup_label = 'CC',
        .subgroup_name =  'CC',
        .subgroup_val = outcome)

tidy_cox_subgroup <- tidy_subgroup(
  coxph(Surv(mt_odpep, ev_odpep == 'Open') ~ arm, 
        filter(endpoints_ranx, lta4hresult!='TT') |> 
          mutate(lta4hresult = droplevels2(lta4hresult))),
  group = c(lta4hresult, tbmgrade, tbm_dx2), 
  data = filter(endpoints_ranx, lta4hresult!='TT') |> 
    mutate(lta4hresult = droplevels2(lta4hresult)),
  exponentiate=TRUE
)

# RMST
endpoints_ranx_ccct <- subset(endpoints_ranx, lta4hresult %in% c('CC', 'CT'))
tau <- with(endpoints_ranx_ccct, minimax(mt_odpep, arm))

rmst.c <- eventglm::rmeanglm(
  Surv(mt_odpep, ev_odpep) ~ arm + tbmgrade + lta4hresult, 
  data=subset(endpoints_ranx, !is.na(mt_odpep) & lta4hresult %in% c('CC', 'CT')) |>
    mutate(lta4hresult = droplevels(lta4hresult)),
  cause='Open',
  time = tau,
  model.censoring = 'stratified', 
  formula.censoring = ~ arm + tbmgrade,
  )
rmst.cc <- eventglm::rmeanglm(
  Surv(mt_odpep, ev_odpep) ~ arm + tbmgrade,
  data=subset(endpoints_ranx, !is.na(mt_odpep)&lta4hresult %in% c('CC')) |>
    mutate(lta4hresult = droplevels(lta4hresult)),
  cause='Open',
  time = tau,
  model.censoring = 'stratified', 
  formula.censoring = ~ arm + tbmgrade
  )

tidy_rmst_c <- broom::tidy(rmst.c, conf.int=TRUE) |>
  cbind(.subgroup_label = 'CC & CT',
        .subgroup_name =  'CC & CT',
        .subgroup_val = outcome) |>
  select(starts_with('.subgroup'), everything())

tidy_rmst_cc <-  broom::tidy(rmst.cc, conf.int=TRUE) |>
  cbind(.subgroup_label = 'CC',
        .subgroup_name =  'CC',
        .subgroup_val = outcome) 

tidy_rmst_subgroup <- tidy_subgroup(
  eventglm::rmeanglm(
    Surv(mt_odpep, ev_odpep) ~ arm , 
    data=filter(endpoints_ranx, !is.na(mt_odpep), lta4hresult!='TT') |> 
          mutate(lta4hresult = droplevels2(lta4hresult)),
    time = tau,
    model.censoring='stratified',
    formula.censoring=~arm),
  group = c(lta4hresult, tbmgrade, tbm_dx2), 
  data = filter(endpoints_ranx, !is.na(mt_odpep), lta4hresult!='TT') |> 
          mutate(lta4hresult = droplevels2(lta4hresult)),
) |>
  # mutate(across(c(estimate, conf.low, conf.high), `-`)) |>
  rename(rmst.estimate=estimate,
         rmst.conf.high=conf.high, 
         rmst.conf.low=conf.low,
         rmst.p.value=p.value) |>
  select(c(.subgroup_label, .subgroup_name, term, starts_with('rmst')))

tidy_cox_outcome3b <- bind_rows(tidy_cox_c, tidy_cox_cc)
# Strange behaviour: rmeanglm quantify rmst.diff for non competing risk and rmtl.diff for competing risks
tidy_rmst_outcome3b <- bind_rows(tidy_rmst_c, tidy_rmst_cc) |>
  # mutate(across(c(estimate, conf.low, conf.high), `-`)) |>
  rename(rmst.estimate=estimate, 
         rmst.conf.high=conf.high, 
         rmst.conf.low=conf.low,
         rmst.p.value=p.value) |>
  select(c(.subgroup_label, .subgroup_name, .subgroup_val, term,
           starts_with('rmst')))
tidy_outcome3b <- inner_join(tidy_cox_outcome3b, tidy_rmst_outcome3b)
tidy_subgroup_both <- inner_join(tidy_cox_subgroup, tidy_rmst_subgroup) |> 
  as_tidy_subgroup() |>
  as_forest_dt(
    terms = glue::glue('arm{arm_levels[2]}'),
    stats =  c(
      `HR (95% CI)` = format.ci(estimate, conf.low, conf.high, digits = 2),
      `p-value HR` = format.pval(p.value, digits = 2, eps = 0.001),
      `RMTL.diff (95% CI)` = format.ci(rmst.estimate, rmst.conf.low, rmst.conf.high, digits = 2),
      `p-value RMTL` = format.pval(rmst.p.value, digits = 2, eps = 0.001)
      ),
    plot_pos = c(2,5),
    plot_width = c(1.5,1.5))
```

```{r outcome-3b-forest-plot-2}
#| fig-width: 10
#| out-width: 100%

forestploter(
  tidy_subgroup_both,
  stats_col = c(Subgroup, `HR (95% CI)`, `RMTL.diff (95% CI)`),
  terms=paste0('arm',arm_levels[2]), ref_line=c(1,0),
  est=list(estimate, rmst.estimate),
  lower=list(conf.low, rmst.conf.low),
  upper=list(conf.high, rmst.conf.high),
  x_trans=c('log', 'none'),
  ci_column=c(2,4),
  arrow_lab = glue::glue('{rev(arm_levels)} favoured'),
  theme=fr_theme)
```

#### Forest plot of comparison between two treatment arms for each of the three time-to-event secondary outcomes, CC & CT combined and CC alone 

The forest plot show the effect size of `r arm_levels[2]` over `r arm_levels[1]` on each of the three time-to-event secondary outcomes, estimated by two models: Cox proportional (cause-specific) hazard (CoxPH) and Restricted mean time lost (RMTL). For the CoxPH model, the estimates shown are the Hazard Ratio and for the RMST model, they are the difference in Restricted mean time lost (RMTL). Models corrected for genotype (CC & CT) and TBM grade (both CC & CT and CC alone). 

```{r forest-plot-main}
#| fig-width: 10
#| out-width: 100%

tidy_cox <- grep('tidy_cox_outcome', ls(), value=TRUE) |> lapply(get) |> bind_rows()
tidy_rmst <- grep('tidy_rmst_outcome', ls(), value=TRUE) |> 
  lapply(get) |> bind_rows()
tidy_both <- inner_join(tidy_cox, tidy_rmst) |>
  mutate(
    .subgroup_val = 
      factor(.subgroup_val,
             levels = c(
               grep('Death', .subgroup_val, value=TRUE)[[1]],
               grep('neurological event', .subgroup_val, value=TRUE)[[1]],
               grep('Switch to open-label (vs. death)', .subgroup_val, fixed=TRUE, value=TRUE)[[1]],
               grep('vs. primary.ep', .subgroup_val, fixed=TRUE, value=TRUE)[[1]]
               )),
    .subgroup_name=factor(.subgroup_name, levels=c('CC & CT', 'CC'))) |>
  as_tidy_subgroup() |>
  arrange(.subgroup_name, .subgroup_val) |>
  as_forest_dt(
    terms = glue::glue('arm{arm_levels[2]}'),
    stats =  c(
      `HR (95% CI)` = format.ci(estimate, conf.low, conf.high, digits = 2),
      `p-value HR` = format.pval(p.value, digits = 2, eps = 0.001),
      `RMTL.diff (95% CI)` = format.ci(rmst.estimate, rmst.conf.low, rmst.conf.high, digits = 2),
      `p-value RMTL` = format.pval(rmst.p.value, digits = 2, eps = 0.001)
      ),
    plot_pos = c(2,5),
    plot_width = c(.8,.8)) |>
  rename(Outcome=Subgroup)
forestploter(
  tidy_both,
  stats_col = c(Outcome, `HR (95% CI)`, `RMTL.diff (95% CI)`),
  terms=paste0('arm',arm_levels[2]), ref_line=c(1,0),
  est=list(estimate, rmst.estimate),
  lower=list(conf.low, rmst.conf.low),
  upper=list(conf.high, rmst.conf.high),
  x_trans=c('log', 'none'),
  ci_column=c(2,4),
  arrow_lab = glue::glue('{rev(arm_levels)} favoured'),
  theme=fr_theme)
```


#### Outcome 4: Neurological disability at 12 months from randomization

Neurological disability, which denotes an inability to live independently of others, has been defined in earlier TBM trials as modified Rankin score ≥ 3. Individuals who died before 12 months will be treated as having a score of 6 (‘dead’). Individuals who withdrew or were lost to follow-up before 12 months will be excluded. For this 12-month assessment an acceptable range of -10 days/+1 month will be applied. Neurological disability was compared between the two arms via a logistic regression analysis, correcting for LTA4H genotype and MRC grade.

##### Table 3.9: Odds of neurological disability at 12 months from randomization, by treatment arms  

:::{.panel-tabset}

###### CC&CT
```{r table-3.7}
endpoints_ran2 <-
  mutate(endpoints_ran2, 
         ev_neurodis_12m = structure(
           factor(ev_neurodis_12m, levels=0:1, labels=c('No', 'Yes')), label='Neurological disability at 12 months'))
tbl3.7 <-
  sstable.baseline(ev_neurodis_12m ~ arm, data=filter(endpoints_ran2, lta4hresult!='TT') |> mutate(arm=relevel(arm, ref=arm_levels[1])), flextable = F)

get_ci <- function(x) do.call(sprintf, 
                              as.list(c('%s (%s, %s)' ,x[2, c('OR', 'lower.CI', 'upper.CI')])))
# lr3.7_unadj <- logist_summary(
#   glm(ev_neurodis_12m~arm, family=binomial,data=filter(endpoints_ran2, lta4hresult!='TT'))
# ) |> get_ci()
lr3.7_adj <- logist_summary(
  glm(ev_neurodis_12m~arm + lta4hresult+tbmgrade, family=binomial,data=filter(endpoints_ran2, lta4hresult!='TT'))
) |> get_ci()

tbl3.7$table <- cbind(tbl3.7$table, 
                # rbind('Comparison', 'Unadjusted OR (95% CI)', '', lr3.7_unadj, lr3.7_unadj),
                rbind('Comparison', 'OR (95% CI)', '', lr3.7_adj, lr3.7_adj)
)
ss_flextable(tbl3.7) |> 
  flextable::merge_v(j=6) |> 
  flextable::border(i=2, j=6,border.bottom = officer::fp_border(color="black", width = 1.5), part = "body")
```

###### CC

```{r table-3.7-cc}

tbl3.7 <-
  sstable.baseline(ev_neurodis_12m ~ arm, data=filter(endpoints_ran2, lta4hresult=='CC') |> mutate(arm=relevel(arm, ref=arm_levels[1])), flextable = F)

get_ci <- function(x) do.call(sprintf, 
                              as.list(c('%s (%s, %s)' ,x[2, c('OR', 'lower.CI', 'upper.CI')])))

lr3.7_adj <- logist_summary(
  glm(ev_neurodis_12m~arm +tbmgrade, family=binomial,data=filter(endpoints_ran2, lta4hresult=='CC'))
) |> get_ci()

tbl3.7$table <- cbind(tbl3.7$table, 
                rbind('Comparison', 'OR (95% CI)', '', lr3.7_adj, lr3.7_adj)
)
ss_flextable(tbl3.7) |> 
  flextable::merge_v(j=6) |>
  flextable::border(i=2, j=6,
                    border.bottom = officer::fp_border(color="black", width = 1.5), part = "body")
```
:::

#### Outcome 5: All modified Rankin scores at 12 months from randomization

All modified Rankin scores, as assessed by the ordinal modified Rankin scale at 12 months were compared between the two arms with a proportional odds regression model. The result will be summarised as a cumulative odds ratio. Individuals who withdrew or were lost to follow-up before 12 months were excluded.

##### Table 3.10: All modified Rankin scores at 12 months from randomization

::: {.panel-tabset .tabset-fade}

###### CC&CT
```{r table-3.8}
tbl3.8 <- sstable.baseline(
  mrs ~ arm, 
  data = endpoints_ran2 |> 
    filter(lta4hresult!='TT') |> 
    select(mrs, arm) |> 
    mutate(mrs = structure(mrs, label='12-month Modified Rankin score')),
  flextable=F
)

tbl3.8$footer <- 'N is number of all patients, n is number of patients included in that statistic, with individuals who withdrew or were lost to follow-up before 12 months excluded'

fit_mrs <- MASS::polr(mrs~arm+ lta4hresult+tbmgrade, Hess = TRUE, data=endpoints_ran2 |> 
    filter(lta4hresult!='TT'))
coef_mrs <- do.call(sprintf, 
                    as.list(
                      c('%s (%s, %s)',
                        exp(
                          c(coef(fit_mrs)[1], confint.default(fit_mrs)[1,])
                        ) |> formatC(digits=2, format='f')
                      ))
)

tbl3.8$table <-
  cbind(tbl3.8$table,
        c('Comparison', 'Odds ratio (95% CI)', coef_mrs, rep('',7)))

ss_flextable(tbl3.8)
```
###### CC

```{r table-3.8b}
tbl3.8b <- sstable.baseline(
  mrs ~ arm, 
  data = endpoints_ran2 |> 
    filter(lta4hresult=='CC') |> 
    select(mrs, arm) |> 
    mutate(mrs = structure(mrs, label='12-month Modified Rankin score')),
  flextable=F
)

tbl3.8b$footer <- 'N is number of all patients, n is number of patients included in that statistic, with individuals who withdrew or were lost to follow-up before 12 months excluded'

fit_mrs <- MASS::polr(mrs~arm+tbmgrade, Hess = TRUE, data=endpoints_ran2 |> 
    filter(lta4hresult=='CC'))
coef_mrs <- do.call(sprintf, 
                    as.list(
                      c('%s (%s, %s)',
                        exp(
                          c(coef(fit_mrs)[1], confint.default(fit_mrs)[1,])
                        ) |> formatC(digits=2, format='f')
                      ))
)

tbl3.8b$table <-
  cbind(tbl3.8b$table,
        c('Comparison', 'Odds ratio (95% CI)', coef_mrs, rep('',7)))

ss_flextable(tbl3.8b)
```

:::

## PP analysis


```{r pp}
pp_ran <- left_join(bsl_ran, select(endpoints_ran, usubjid=USUBJID, pp), by='usubjid') |>
  filter(pp==TRUE)

pp_alloc <- table(pp_ran$arm)
pp_genotype <- table(pp_ran$lta4hresult)

```

There were `r nrow(pp_ran)` patients in the per-protocol analysis, `r pp_alloc[1]` were allocated into `r names(pp_alloc)[[1]]`. Amongst them, `r pp_genotype[1]` were CC, `r pp_genotype[2]` were CT, and `r pp_genotype[3]` were TT.

```{r reason-pp}
endpoints_ran |>
  filter(!is.na(pp_reason)) |>
  select(pp_reason, LTA4HRESULT, arm) |>
  gtsummary::tbl_strata(
    strata = LTA4HRESULT,
    .tbl_fun = ~ tbl_summary(.x, by=arm) |>
      gtsummary::modify_header(label = 'Reason excluded from per-protocol analysis') 
  )|>
  gtsummary::as_flex_table() |>
  flextable::delete_rows(1) |>
  ft_sstheme()
  # gtsummary::tbl_summary(by=arm)) |>
  

```

### Primary endpoint

#### Table 4.1: Primary non-inferiority analysis {.tabset .tabset-fade} 


```{r pp-endpoints}
## add labels, units
endpoints_ran2 <- 
  left_join(select(pp_ran, usubjid), endpoints_ran2) 
```

```{r pp-crit_value}
#| description: calculate the first alpha.cc to protect the overall alpha
#| include: false

endpoints_c <- merge(
  endpoints_ran2, select(bsl3, USUBJID, LTA4HRESULT), all.x=TRUE
) |> filter(LTA4HRESULT %in% c('CC', 'CT'))

# we test for CC&CT and CC. so S is CC and F is CC&CT/slide referred.
# the slides say inforates = c(tau, 1) where tau is the relative fraction of information.
inforates <- with(endpoints_c, 
                  sum(ev_survival_neuro_12m&LTA4HRESULT%in%c('CC'))/
                    sum(ev_survival_neuro_12m&LTA4HRESULT%in%c('CC', 'CT'))
)


alpha.cc <- sapply(c(0.05, 0.025, 0.005), \(alpha) {
  rpact::getDesignGroupSequential(informationRates = c(inforates,1), alpha=alpha, typeOfDesign = "asUser", userAlphaSpending = c(alpha*4/5, alpha))$stageLevels[[2]]
}) 

```

The primary endpoint of the LAST ACT trial was all-cause mortality or new neurological event, whichever occurred earlier, over the first 12 months after randomization. A new neurological event was defined as follows: new cerebellar symptoms; hemiplegia, paraplegia, tetraplegia or monoplegia; seizures; cerebral herniation; cranial nerve palsy; or a fall in Glasgow coma score by ≥ 2 points for ≥ 2 days (from the highest previously recorded GCS, including baseline).

Two analyses were performed. The primary/default one was a Cox proportional hazard model stratified by MRC Grade and
LTA4H genotype. However, an extra analysis without stratification was done; results are shown in the second tab.

The null hypothesis of non-inferiority of placebo for the primary endpoint is HR ≤ 0.75 dex/placebo, which is rejected if the lower limit of the confidence interval is above 0.75. We performed the test for the combination CC & CT as well as for CC only, where 80% of the significance level was used for the combined group. Following the approximation by the Spiessens and Debois method, to protect the overall one-sided $\alpha$ as 2.5%, the $\alpha$ for testing CC is `r formatC(alpha.cc[2]*100, digits=2)`%. We also report results based on the one-sided overall $\alpha=5$% and $\alpha=0.5$%.


::: {.panel-tabset .tabset-fade}
##### With stratification

```{r pp-table2a}
<<table2a>>
```

```{r forestplot-pe-pp}
#| fig-width: 7
#| fig-asp: 0.25
#| out-width: 100%
<<forestplot-pe>>
```


Test for proportional hazard assumption by scaled Schoenfeld residuals versus time

```{r pp-coxzph_a}
#| out-width: 100%    
#| fig-asp: 0.7
<<coxzph_a>>
```

##### Without stratification

```{r pp-table2b}
<<table2b>>
```

```{r forestplot-pe-pp-2}
#| fig-width: 7
#| fig-asp: 0.25
<<forestplot-pe>>
```

Test for proportional hazard assumption by scaled Schoenfeld residuals versus time

```{r pp-coxzph_b}
#| out-width: 100%    
#| fig-asp: 0.7
<<coxzph_a>>
```

:::

#### Table 4.2: Primary endpoint; superiority analyses {.tabset .tabset-fade}

This table is similar to Table 4.1 above, with the addition of the p-values based on the null hypothesis of no difference between the treatment arms. 

::: {.panel-tabset .tabset-fade}

##### With stratification

```{r pp-table2.2a}

<<table2.2a>>
```

##### Without stratification

```{r pp-table2.2b}
<<table2.2b>>
```

:::

### Further analyses for superiority design

All further analyses use a superiority design. We performed Kaplan-Meier estimation and compared restricted mean time lost between the two arms with adjustment for LTA4H genotype and MRC grade. For this point onwards, correction for multiple testing is no longer made.

#### Figure 4.1: Kaplan-Meier curve for all-cause mortality or new neurological event, stratified by genotype

We visualise the distribution of time-to-primary endpoint using Kaplan-Meier plots, with stratification by genotype. We also visualize the difference in estimated survival probability between the arms over time.


```{r pp-figure2.1}
#| out-width: 100%
#| fig-width: 6
#| fig-asp: 1.1

<<figure2.1>>
```



```{r pp-figure2.2}
#| out-width: 100%
#| fig-width: 8
#| fig-asp: 1.1

<<figure2.2>>
```


#### Table 4.3: Restricted mean time lost for all-cause mortality or new neurological event, corrected for genotype and MRC grade

We report cumulative event risk at 3, 6, 9, and 12 months of follow-up. A formal comparison between the two arms of the restricted mean time lost (RMTL; difference in months for Dexamethasone-Placebo) by 12 months was performed as well.

```{r pp-table3.3}
#| message: false
<<table3.3>>
```


#### Table 4.4: Primary endpoint; superiority subgroup analyses 

We fit separate models per subgroup and we will fit a model in which we test for interaction between treatment and subgroup. We considered the following grouping variables: LTA4H genotype, TBM MRC severity grade at enrolment (I, II, or III), TBM diagnosis (definite, probable, possible), and drug resistance pattern (MDR-TB or rifampicin mono-resistance, isoniazid resistant non-MDR, no or other resistance). No stratification variables (genotype and MRC grade) were included in these analyses.  We additionally use a model for the RMTL (with linear link function), and use a similar presentation of the results. Results in the “All patients” group and in the "CC" group are the same as for the "Without stratification" analyses in Table 2.2, except for the confidence intervals which are not corrected for multiple testing (hence set at 95%).

##### Figure 4.2: Kaplan-Meier estimates for subgroups (excluding LTA4H, which was mentioned above)

```{r figure-4.2}
#| fig-asp: 1.2
#| fig-width: 10
#| out-width: 100%
<<figure-2.2>>
```

::: {.panel-tabset .tabset-fade}
##### CoxPH model


```{r pp-table4a}

<<table4a>>
```

##### RMST model

```{r pp-table4b}
<<table4b>>
```

:::

### Secondary endpoints


#### Outcome 1: Death over the first 12 months after randomization


##### Figure 5.1: Kaplan-Meier estimates

```{r outcome-1-pp}
endpoints_ran4 = left_join(pp_ran, endpoints_ran2 |> select(usubjid, ev_death_12m, tt_death_12m), by='usubjid') |> 
  mutate(ev_death_12m = as.logical(ev_death_12m)) |>
  mutate(
    mt_death_12m  = tt_death_12m/365*12,
    tbm_dx2 = droplevels2(tbm_dx2),
    resist = droplevels2(resist))

```

```{r figure-5}
#| out-width: 100%
#| fig-width: 6
#| fig-asp: 1.1
<<figure-2>>
```

##### Table 5.1: Overall incidence of death over the first 12 months after randomization

```{r outcome1-pp-tbl}

<<outcome1-tbl>>

```

##### Table 5.2: Subgroup comparison of death over the first 12 months after randomization {.tabset .tabset-fade}

We performed subgroup analysis for the following variables: LTA4H genotype, TBM MRC severity grade at enrolment (I, II, or III), TBM diagnosis (definite, probable, possible). Note that in the "All patients" group, no other variables were included, explaining the discrepancy in the estimates with the Overall table above. 

##### Figure 5.2: Kaplan-Meier estimates for subgroups (excluding LTA4H, which was mentioned above)

```{r figure-5.2}
#| fig-asp: 1
#| fig-width: 10
#| out-width: 100%
<<figure-3.2>>
```

::: {.panel-tabset .tabset-fade}

###### CoxPH

```{r outcome1-pp-subgroup-cox}
<<outcome1-subgroup-cox>>
```

###### RMTL

```{r outcome1-pp-subgroup-rmst}
<<outcome1-subgroup-rmst>>
```

:::

##### Forest plot for subgroup analysis

```{r pp-outcome-1-forest-plot}
#| fig-width: 10
#| out-width: 100%
<<outcome-1-forest-plot-1>>
<<outcome-1-forest-plot-2>>
```

#### Outcome 2: First neurological events within 12 months after randomization


##### Figure 5.3 Aalen-Johansen estimates

These plots visualize time to first neurological event within 12 months after randomization (curves going up from zero), with death as competing event (curves going down from one).

```{r outcome-2-pp}
endpoints_ran5 = left_join(pp_ran, endpoints_ran2 |> select(usubjid, ev_death_12m, tt_death_12m, ev_newnev_12m, tt_newnev_12m), by='usubjid') |>
  mutate(
    ev_newnev_12m = case_when(
      ev_newnev_12m == 1 & tt_death_12m >= tt_newnev_12m ~ "nev", 
      ev_death_12m == 1 & tt_death_12m < tt_newnev_12m ~ "death",
      TRUE ~ "cen") |> factor(levels=c('cen', 'nev', 'death')),
    tt_newnev_12m = pmax(1/365/24, pmin(tt_newnev_12m, tt_death_12m, na.rm=TRUE)), #add 1 hrs
    mt_newnev_12m  = tt_newnev_12m/365*12,
    tbm_dx2 = droplevels2(tbm_dx2),
    resist = droplevels2(resist))

```

```{r figure-5.3}
#| out-width: 100%
#| fig-width: 6
#| fig-asp: 1.1

<<figure-3.3>>
```

##### Table 5.3: Overall risk of first neurological event over the first 12 months after randomization


```{r outcome2-pp-tbl}
#| message: false

<<outcome2-tbl>>
```

##### Table 5.4: Subgroup comparison of first neurological events over the first 12 months after randomization {.tabset .tabset-fade}

We performed subgroup analysis for the following variables: LTA4H genotype, TBM MRC severity grade at enrolment (I, II, or III), TBM diagnosis (definite, probable, possible). Note that in the "All patients" group, no other variables were included, explaining the discrepancy in the estimates with the Overall table above.  

###### Figure 5.4: Aelen-Johansen estimates for subgroups (excluding LTA4H, which was mentioned above)

```{r figure-5.4}
#| fig-asp: 1
#| fig-width: 10
#| out-width: 100%
<<figure-3.4>>
```

::: {.panel-tabset .tabset-fade}

###### CoxPH

```{r outcome2-pp-subgroup-cox}

<<outcome2-subgroup-cox>>
```
###### RMTL

```{r outcome2-pp-subgroup-rmst}
<<outcome2-subgroup-rmst>>
```

:::

##### Forest plot for subgroup-analysis

```{r pp-outcome2-forest-plot}
#| fig-width: 10
#| out-width: 100%
<<outcome2-forest-plot-1>>
<<outcome2-forest-plot-2>>
```

#### Outcome 3: First use of open-label corticosteroid within 12 months after randomization

We performed analyses for open-label corticosteroid with (i) death and (ii) the primary endpoint as competing events.

##### Death as competing event

###### Figure 5.5: Aalen-Johansen estimates

These plots visualize time to first use of open-label corticosteroid within 12 months after randomization (curves going up from zero), with death as competing event (curves going down from one).

```{r outcome-3-pp}
names(open_drug) = tolower(names(open_drug))
open_drug_ran <- merge(open_drug, select(pp_ran, usubjid, daterandom2, arm)) |>
  mutate(dex_daystart = difftime(dex_datestart, daterandom2, units='d'),
         reason_od = ifelse(is.na(reason_od), '(missing)', reason_od)) |>
  filter(dex_daystart > 0) |>
  arrange(usubjid, dex_datestart) |>
  slice(1, .by=usubjid)


# Death as competing risk 
endpoints_ranx <- open_drug_ran |>
  mutate(ev_od = TRUE, tt_od=as.numeric(dex_daystart)) |>
  select(usubjid, ev_od, tt_od) |>
  right_join(select(pp_ran, usubjid, arm, lta4hresult,tbm_dx2, resist,tbmgrade), by='usubjid') |>
  left_join(select(endpoints_ran, usubjid=USUBJID, ev_death_12m, tt_death_12m), by='usubjid') |>
  mutate(
    ev_od = tidyr::replace_na(ev_od, FALSE),
    tt_od = pmax(0.01, ifelse(is.na(tt_od), tt_death_12m, tt_od)),
    ev_od_12m = ifelse(ev_od & tt_od > 365, FALSE, ev_od),
    tt_od_12m = pmin(tt_od, 365),
   
    ev_oddeath = case_when(ev_od_12m ~ 'Open', ev_death_12m == 1 ~ 'Death', TRUE ~ 'Cen') |> factor(levels=c('Cen', 'Open', 'Death')),
   tt_oddeath = pmax(1/365/24, pmin(tt_od_12m, tt_death_12m)), #adding 1 hrs
    mt_oddeath = tt_oddeath/365*12,
    tbm_dx2 = droplevels2(tbm_dx2),
    resist = droplevels2(resist)
  ) 

# Primary ep as competing risk
# for covenient, I derived it sepearately
endpoints_ranx2 <- open_drug_ran |>
  mutate(ev_od = TRUE, tt_od=as.numeric(dex_daystart)) |>
  select(usubjid, ev_od, tt_od, reason_od) |>
  right_join(select(pp_ran, usubjid, arm, lta4hresult,tbm_dx2, resist,tbmgrade), by='usubjid') |>
  left_join(select(endpoints_ran, usubjid=USUBJID, ev_survival_neuro_12m, tt_survival_neuro_12m), by='usubjid') |>
  mutate(
    ev_od = tidyr::replace_na(ev_od, FALSE),
    tt_od = pmax(0.01, ifelse(is.na(tt_od), tt_survival_neuro_12m, tt_od)),
    ev_od_12m = ifelse(ev_od & tt_od > 365, FALSE, ev_od),
    tt_od_12m = pmin(tt_od, 365),
    ev = case_when(ev_od_12m & tt_survival_neuro_12m >= tt_od_12m  ~ 2,
                   ev_survival_neuro_12m == 1 & tt_survival_neuro_12m <= tt_od_12m ~ 3,
                   ev_survival_neuro_12m==0 & !ev_od_12m ~ 1),
    ev_odpep = case_when(ev == 2 ~ 'Open', ev == 3 ~ 'PrEP', ev==1 ~ 'Cen') |> factor(levels=c('Cen', 'Open', 'PrEP')),
    tt_odpep = pmax(1/365/24, pmin(tt_od_12m, tt_survival_neuro_12m)), #adding 1 hrs
    mt_odpep = tt_odpep/365*12,
    tbm_dx2 = droplevels2(tbm_dx2),
    resist = droplevels2(resist)
  ) |> select(usubjid, ev_odpep, tt_odpep, mt_odpep) 

endpoints_ranx <- left_join(endpoints_ranx, endpoints_ranx2)
```

```{r figure-5.5}
#| out-width: 100%
#| fig-width: 6
#| fig-asp: 1.1
#| 
<<figure-3.5>>
```   

###### Table 5.5: Overall risk of first use of open-label corticosteroid over the first 12 months after randomization


```{r outcome3-pp-tbl}
<<outcome3-tbl>>
```

###### Table 5.6: Subgroup comparison of first use of corticosteroid over the first 12 months after randomization {.tabset .tabset-fade}

We performed subgroup analysis for the following variables: LTA4H genotype, TBM MRC severity grade at enrolment (I, II, or III), TBM diagnosis (definite, probable, possible). Note that in the "All patients" group, no other variables were included, explaining the discrepancy in the estimates with the Overall table above.

###### Figure 5.6: Aelen-Johansen estimates for subgroups (excluding LTA4H, which was mentioned above)

```{r figure-5.6}
#| fig-asp: 1
#| fig-width: 10
#| out-width: 100%
<<figure-3.6>>
```

::: {.panel-tabset .tabset-fade}

###### Cox cause-specific hazard

```{r outcome3-pp-subgroup-cox}
<<outcome3-subgroup-cox>>
```
###### RMTL with death as competing risk

```{r outcome3-pp-subgroup-rmst}
<<outcome3-subgroup-rmst>>
```

:::

###### Forest plot for subgroup-analysis

```{r pp-outcome-3-forest-plot}
#| fig-width: 10
#| out-width: 100%
<<outcome-3-forest-plot-1>>
<<outcome-3-forest-plot-2>>
```

##### Primary endpoint as competing event

###### Figure 5.7: Aalen-Johansen estimates

These plots visualize time to first use of open-label corticosteroid within 12 months after randomization (curves going up from zero), with death as competing event (curves going down from one).


```{r figure-5.7}
#| out-width: 100%
#| fig-width: 6
#| fig-asp: 1.1
<<figure-3.7>>
```

###### Table 5.7: Overall risk of first use of open-label corticosteroid over the first 12 months after randomization


```{r outcome3b-pp-tbl}
#| message: false
<<outcome3b-tbl>>
```


###### Table 5.8: Subgroup comparison of first use of corticosteroid over the first 12 months after randomization {.tabset .tabset-fade}

We performed subgroup analysis for the following variables: LTA4H genotype, TBM MRC severity grade at enrolment (I, II, or III), TBM diagnosis (definite, probable, possible). Note that in the "All patients" group, no other variables were included, explaining the discrepancy in the estimates with the Overall table above.

###### Figure 5.8: Aelen-Johansen estimates for subgroups (excluding LTA4H, which was mentioned above)

```{r figure-5.8}
#| fig-asp: 1
#| fig-width: 10
#| out-width: 100%
<<figure-3.8>>
```

::: {.panel-tabset .tabset-fade}

###### Cox cause-specific hazard

```{r pp-outcome3b-subgroup-cox}
<<outcome3b-subgroup-cox>>
```

###### RMTL with primary endpoint as competing risk


```{r pp-outcome3b-subgroup-rmst}
<<outcome3b-subgroup-rmst>>
```
:::

###### Forest plot for subgroup-analysis

```{r pp-outcome-3b-forest-plot}
#| fig-width: 10
#| out-width: 100%
<<outcome-3b-forest-plot-1>>
<<outcome-3b-forest-plot-2>>
```


#### Forest plot of survival comparison between two treatment arms, stratified by genotype

The forest plot show the effect size of `r arm_levels[2]` over `r arm_levels[1]` on three outcomes, stratified by genotype and estimated by two models: Cox proportional (specific) hazard (CoxPH) and Restricted mean time lost (RMTL), with our without death as a competing event. For the CoxPH model, the estimates shown are the log(Hazard Ratio) and for the RMST model, they are the difference in Restricted mean time lost (RMTL).

```{r forest-pp-plot-unused}
#| fig-width: 5
#| fig-asp: 1
#| out-width: 100%
#| eval: false

forest.coef <-
  forest.coef |>
  mutate(across(est:u95, as.numeric), 
         genotype=factor(genotype, levels=c('CC & CT', 'CC'))) |>
  rename(Model=model, Estimate=est)

# forest.coef$Estimator <- latex2exp::TeX(forest.coef$Estimator)

ggplot(forest.coef) +
  ggdist::geom_pointinterval(aes(xmin=l95, xmax=u95, x=Estimate, color=Model, y=outcome), position=position_dodge(.3)) + 
  scale_color_discrete(name='Estimator', labels=c('Cox PH' = latex2exp::TeX('\\log(Hazard Ratio)'), RMTL = latex2exp::TeX('$\\Delta_{RMTL}$'))) +
  scale_y_discrete(expand = c(0,0)) +
  facet_wrap(~genotype, ncol=1,strip.position="right", as.table = TRUE) +
  geom_vline(aes(xintercept=0), color='#A7A7A7')  +
  theme_bw() + 
  theme(legend.position = 'bottom', axis.title.y = element_blank(),
        panel.spacing = unit(0 , 'lines'))

```


```{r pp-forest-plot-main}
#| fig-width: 10
#| out-width: 100%

<<forest-plot-main>>
```



#### Outcome 4: Neurological disability at 12 months from randomization

Neurological disability, which denotes an inability to live independently of others, has been defined in earlier TBM trials as modified Rankin score ≥ 3. Individuals who died before 12 months will be treated as having a score of 6 (‘dead’). Individuals who withdrew or were lost to follow-up before 12 months will be excluded. For this 12-month assessment an acceptable range of -10 days/+1 month will be applied. Neurological disability was compared between the two arms via a logistic regression analysis. Adjusted OR corrected for LTA4H genotype and MRC grade was reported.

##### Table 5.9: Odds of neurological disability at 12 months from randomization, by treatment arms  


:::{.panel-tabset}

###### CC&CT
```{r table-pp-3.7}
#| message: False

endpoints_ran7 = left_join(
  pp_ran, 
  select(endpoints_ran2, usubjid, ev_neurodis_12m, ev_death_12m, mrs), 
  by='usubjid')

tbl3.7 <-
  sstable.baseline(ev_neurodis_12m ~ arm, 
                   data=filter(endpoints_ran7, lta4hresult!='TT') |> mutate(arm=relevel(arm, ref=arm_levels[1])), flextable = F)

get_ci <- function(x) do.call(sprintf, 
                              as.list(c('%s (%s, %s)' ,x[2, c('OR', 'lower.CI', 'upper.CI')])))
# lr3.7_unadj <- logist_summary(
#   glm(ev_neurodis_12m~arm, family=binomial,data=filter(endpoints_ran7, lta4hresult!='TT'))
# ) |> get_ci()
lr3.7_adj <- logist_summary(
  glm(ev_neurodis_12m~arm + lta4hresult + tbmgrade, family=binomial,data=filter(endpoints_ran7, lta4hresult!='TT'))
) |> get_ci()

tbl3.7$table <- cbind(tbl3.7$table, 
                # rbind('Comparison', 'Unadjusted OR (95% CI)', '', lr3.7_unadj, lr3.7_unadj),
                rbind('Comparison', 'OR (95% CI)', '', lr3.7_adj, lr3.7_adj)
)
ss_flextable(tbl3.7) |> 
  flextable::merge_v(j=6) |>
  flextable::border(
    i=2, j=6,
    border.bottom = officer::fp_border(color="black", width = 1.5), part = "body")
```


###### CC

```{r table-pp-3.7b}
tbl3.7 <-
  sstable.baseline(ev_neurodis_12m ~ arm, 
                   data=filter(endpoints_ran7, lta4hresult=='CC') |> mutate(arm=relevel(arm, ref=arm_levels[1])), flextable = F)

get_ci <- function(x) do.call(sprintf, 
                              as.list(c('%s (%s, %s)' ,x[2, c('OR', 'lower.CI', 'upper.CI')])))
# lr3.7_unadj <- logist_summary(
#   glm(ev_neurodis_12m~arm, family=binomial,data=filter(endpoints_ran7, lta4hresult!='TT'))
# ) |> get_ci()
lr3.7_adj <- logist_summary(
  glm(ev_neurodis_12m~arm + tbmgrade, family=binomial,data=filter(endpoints_ran7, lta4hresult=='CC'))
) |> get_ci()

tbl3.7$table <- cbind(tbl3.7$table, 
                # rbind('Comparison', 'Unadjusted OR (95% CI)', '', lr3.7_unadj, lr3.7_unadj),
                rbind('Comparison', 'OR (95% CI)', '', lr3.7_adj, lr3.7_adj)
)
ss_flextable(tbl3.7) |> 
  flextable::merge_v(j=6) |>
  flextable::border(
    i=2, j=6,
    border.bottom = officer::fp_border(color="black", width = 1.5), part = "body")
```

:::

#### Outcome 5: All modified Rankin scores at 12 months from randomization

All modified Rankin scores, as assessed by the ordinal modified Rankin scale at 12 months were compared between the two arms with a proportional odds regression model. The result will be summarised as a cumulative odds ratio. Individuals who withdrew or were lost to follow-up before 12 months were excluded.

##### Table 5.10: All modified Rankin scores at 12 months from randomization

::: {.panel-tabset .tabset-fade}

###### CC&CT

```{r table-pp-3.8}
tbl3.8 <- sstable.baseline(
  mrs ~ arm, 
  data = endpoints_ran7 |> 
    filter(lta4hresult!='TT') |> 
    select(mrs, arm) |> 
    mutate(mrs = structure(mrs, label='Modified Rankin score')),
  flextable=F
)

tbl3.8$footer <- 'N is number of all patients, n is number of patients included in that statistic, with individuals who withdrew or were lost to follow-up before 12 months excluded'

fit_mrs <- MASS::polr(mrs~arm + tbmgrade + lta4hresult, Hess = TRUE, 
                      data=endpoints_ran7 |> 
                        filter(lta4hresult!='TT'))
coef_mrs <- do.call(sprintf, 
                    as.list(
                      c('%s (%s, %s)',
                        exp(
                          c(coef(fit_mrs)[[1]], confint.default(fit_mrs)[1,])
                        ) |> formatC(digits=2, format='f')
                      ))
)

tbl3.8$table <-
  cbind(tbl3.8$table,
        c('Comparison', 'Odds ratio (95% CI)', coef_mrs, rep('',7)))

ss_flextable(tbl3.8)
```

###### CC

```{r table-pp-3.8b}
tbl3.8b <- sstable.baseline(
  mrs ~ arm, 
  data = endpoints_ran7 |> 
    filter(lta4hresult=='CC') |> 
    select(mrs, arm) |> 
    mutate(mrs = structure(mrs, label='Modified Rankin score')),
  flextable=F
)

tbl3.8b$footer <- 'N is number of all patients, n is number of patients included in that statistic, with individuals who withdrew or were lost to follow-up before 12 months excluded'

fit_mrs <- MASS::polr(mrs~arm + tbmgrade, Hess = TRUE, 
                      data=endpoints_ran7 |> 
                        filter(lta4hresult=='CC'))
coef_mrs <- do.call(sprintf, 
                    as.list(
                      c('%s (%s, %s)',
                        exp(
                          c(coef(fit_mrs)[[1]], confint.default(fit_mrs)[1,])
                        ) |> formatC(digits=2, format='f')
                      ))
)

tbl3.8b$table <-
  cbind(tbl3.8b$table,
        c('Comparison', 'Odds ratio (95% CI)', coef_mrs, rep('',7)))

ss_flextable(tbl3.8b)
```
:::


## Analysis of TT genotype participants

The following analyses will compare non-randomized TT genotype participants with pooled randomized participants, combined, and separated into CC and CT, based on Kaplan-Meier estimates and log-rank test, randomized to either dexamethasone or placebo, as follows

### All-cause mortality or new neurological event over the first 12 months after randomization

#### Table 6.1 Absolute event risk by genotype and treatment arm

```{r tt-descriptive}
endpoints_ran2_itt |>
  mutate(
    # LTA4H = paste(lta4hresult, arm, sep = ' ')
    LTA4H = ifelse(
    lta4hresult == 'TT', 'TT Dexamethasone',
    paste(lta4hresult, arm, sep = ' '))
  ) |>
  rbind(
    endpoints_ran2_itt |>
      filter(lta4hresult!='TT') |>
      mutate(LTA4H = paste('CC&CT', arm, sep=' '))) |>
  select(ev_survival_neuro_12m, LTA4H) |>
  mutate(ev_survival_neuro_12m =
           structure(
             factor(ev_survival_neuro_12m,
                    labels=c('No', 'Yes')),
             label=attr(ev_survival_neuro_12m,'label'))) |>
  tbl_cross(row=LTA4H, 
            col=ev_survival_neuro_12m,
            margin=NULL,
            percent='row') |>
  as_flex_table() |>
  ft_sstheme() |>
  flextable::autofit()
``` 

#### Figure 6.1: Kaplan-Meier estimates each genotype against TT

```{r tt-survneuro}
#| fig-align: center
#| fig-width: 7.5
#| fig-asp: 1
#| out-width: 100%

fml <- Surv(mt_survival_neuro_12m, ev_survival_neuro_12m)~lta4hresult
dex <- endpoints_ran2_itt |> 
  filter(lta4hresult=='TT' | arm == levels(arm)[[2]]) |>
  mutate(Compare = 'CC&CT') %>%
  rbind(
    .,
    mutate(filter(., lta4hresult != 'CT'), Compare = 'CC'),
    mutate(filter(., lta4hresult != 'CC'), Compare = 'CT')
  ) |>
  # mutate(lta4hresult =
  #          ifelse(lta4hresult != 'TT' & compare=='TT vs CC&CT',
  #                 'CC&CT', as.character(lta4hresult)) |>
  #          factor(levels=c('TT', 'CC', 'CT', 'CC&CT')))|>
    mutate(lta4hresult =
           ifelse(lta4hresult != 'TT', 'Other', 'TT') |>
           factor(levels=c('TT', 'Other')))|>
  survfit(eval(substitute(fml)), data = _) |>
  survminer::ggsurvplot(conf.int = TRUE, pval=TRUE, pval.method = TRUE,
                        xlim = c(0, 9),
                        # legend.labs = c(''TT'),
                        facet.by = 'Compare',
                        short.panel.labs=TRUE,
                        xlab = "Months since randomization", break.time.by = 1, 
                        ylab = 'Probability of event-free survival',
                        break.x.by=2,
                        legend.title='Genotype(s)',
                        palette=c(ggsci::pal_nejm()(10)[2:3]), 
                        ggtheme=theme_bw(base_size=12))

placebo <- endpoints_ran2_itt |> 
  filter(lta4hresult=='TT' | arm == levels(arm)[[1]]) |>
  mutate(Compare = 'CC&CT') %>%
  rbind(
    .,
    mutate(filter(., lta4hresult != 'CT'), Compare = 'CC'),
    mutate(filter(., lta4hresult != 'CC'), Compare = 'CT')
  ) |>
  # mutate(lta4hresult = 
  #          ifelse(lta4hresult != 'TT' & Compare=='TT vs CC&CT', 
  #                 'CC&CT', as.character(lta4hresult)) |>
  #          factor(levels=c('TT', 'CC', 'CT', 'CC&CT')))|>
  mutate(lta4hresult =
           ifelse(lta4hresult != 'TT', 'Other', 'TT') |>
           factor(levels=c('TT', 'Other')))|>
  survfit(eval(substitute(fml)), data = _) |>
  survminer::ggsurvplot(conf.int = TRUE, pval=TRUE, pval.method = TRUE,
                        xlim = c(0, 9), 
                        xlab = "Months since randomization", break.time.by = 60, 
                        ylab = 'Probability of event-free survival',
                        # legend.labs = c('CC', 'CT', 'TT'),
                        short.panel.labs=TRUE,
                        facet.by = 'Compare',
                        legend.title='Genotype(s)',
                        break.x.by=2,
                        palette=c(ggsci::pal_nejm()(10)[2:3]),
                        ggtheme=theme_bw(base_size=12))

(dex + ggtitle(glue::glue('TT (Dexamethasone) vs {arm_levels[[2]]}')))/
  (placebo + ggtitle(glue::glue('TT (Dexamethasone) vs {arm_levels[[1]]}'))) +
  plot_layout(guides = 'collect') & theme(legend.position = 'bottom')

```

```{r tt-survneuro-2}
#| fig-align: center
#| fig-width: 6
#| fig-asp: 0.7
#| out-width: 100%

fml <- Surv(mt_survival_neuro_12m, ev_survival_neuro_12m)~genoarm
endpoints_ran2_itt |> 
  mutate(
    genoarm = glue::glue("{lta4hresult} - {arm}") 
  )  %>%
  rbind(., 
        filter(., lta4hresult=='TT') |> mutate(arm=arm_levels[1])) |>
  survfit(eval(substitute(fml)), data = _) |>
  survminer::ggsurvplot(#pval=TRUE, pval.method = TRUE,
                        xlim = c(0, 9),
                        conf.int.alpha = 0.1,
                        # legend.labs = c(''TT'),
                        facet.by = 'arm',
                        short.panel.labs=TRUE,
                        censor = FALSE,
                        conf.int = TRUE, 
                        xlab = "Months since randomization", break.time.by = 1, 
                        ylab = 'Probability of event-free survival',
                        break.x.by=2,
                        legend.title='Genotype - Treatment arm',
                        palette=c(ggsci::pal_nejm()(10)[c(2:4,1,8)]), 
                        ggtheme=theme_bw(base_size=12)) + 
  guides(color = guide_legend(nrow = 2,direction = 'vertical')) + 
                            theme(legend.position='bottom')

```


#### Figure 6.1b: Kaplan-Meier estimates each genotype against TT, by MRC grade

```{r tt-survneuro-grade}
#| fig-align: center
#| fig-width: 7.5
#| fig-asp: 0.9
#| out-width: 100%


fml <- Surv(mt_survival_neuro_12m, ev_survival_neuro_12m)~strat
tmp_data <- endpoints_ran2_itt |> 
  mutate(lta4hresult =
           ifelse(lta4hresult != 'TT', 'CC & CT', 'TT') |>
           factor(levels=c('TT', 'CC & CT')),
         strat = paste(lta4hresult, arm, sep=' - ') |> 
           factor(levels = c('CC & CT - Placebo', 'CC & CT - Dexamethasone', 'TT - Dexamethasone')),
         tbmgrade2 = factor(tbmgrade, labels=c('Grade I', 'Grade II', 'Grade III')))

plt_all <-  survfit(eval(substitute(fml)), data = tmp_data) |>
  survminer::ggsurvplot(conf.int = TRUE, censor = FALSE,
                        legend.title='Genotype - Treatment arm',
                        legend.labs = levels(tmp_data$strat),
                        ylab = 'Probability of event-free survival',
                        risk.table=TRUE,
                        tables.height = 0.2,
                        pval = TRUE, pval.method = TRUE,
                        pval.size=4,
                        short.panel.labs = TRUE,
                        xlim = c(0, 12), xlab = "Months since randomization",
                        ggtheme = theme_bw(base_size = 12),
                        tables.theme = theme_void() + 
                          theme(axis.line.y = element_blank(), axis.text.y = element_blank(),
                                axis.title.y = element_blank(), axis.ticks.y = element_blank()),
                        risk.table.y.text.col = TRUE, risk.table.y.text = FALSE,
                        risk.table.title='Number at risk across all MRC grades',
                        fontsize = 3, break.x.by=1,
                        palette=ggsci::pal_nejm()(5)[2:4])

plt_grade <-  survfit(eval(substitute(fml)), data = tmp_data) |>
 ggsurvplot_facet(data=tmp_data, conf.int = TRUE, censor = FALSE,
                  legend.title='Genotype - Treatment arm',
                  legend.labs = levels(tmp_data$strat),
                  risk.table=F,
                  ylab = 'Probability of event-free survival',
                  tables.height = 0.2,
                  facet.by = c('tbmgrade2'),
                  pval = TRUE, pval.method = TRUE,
                  short.panel.labs = TRUE,
                  pval.size=4,
                  xlim = c(0, 12), xlab = "Months since randomization",
                  ggtheme = theme_bw(base_size = 12),
                  tables.theme = theme_void() + 
                    theme(axis.line.y = element_blank(), axis.text.y = element_blank(),
                          axis.title.y = element_blank(), axis.ticks.y = element_blank()),
                  risk.table.y.text.col = TRUE, risk.table.y.text = FALSE,
                  risk.table.title='Number at risk across all MRC grades',
                  fontsize = 3, break.x.by=2,
                  palette=ggsci::pal_nejm()(10)[2:4])


design <- c(area(1,1,1,3), area(2,1,5,3), area(6,1,9,3))

(plt_all$table) / (plt_all$plot) / plt_grade + plot_layout(guides='collect', design=design) & theme(legend.position = 'bottom') & guides(color = guide_legend(nrow = 2))

```


### Death over the first 12 months after randomization

#### Table 6.2: Absolute event risk by genotype and treatment arm

```{r tt-descriptive-mortality}
endpoints_ran2_itt |>
  mutate(LTA4H = ifelse(
    lta4hresult == 'TT', 'TT',
    paste(lta4hresult, arm, sep = ' ')
  )) |>
  rbind(
    endpoints_ran2_itt |>
      filter(lta4hresult!='TT') |>
      mutate(LTA4H = paste('CC&CT', arm, sep=' '))) |>
  select(ev_death_12m, LTA4H) |>
  mutate(ev_death_12m =
           structure(
             factor(ev_death_12m,
                    labels=c('No', 'Yes')),
             label=attr(ev_death_12m,'label'))) |>
  tbl_cross(row=LTA4H, 
            col=ev_death_12m,
            margin=NULL,
            percent='row') |>
  as_flex_table() |>
  ft_sstheme() |>
  flextable::autofit()
``` 

#### Figure 6.2: Kaplan-Meier estimates each genotype against TT

```{r tt-death}
#| fig-align: center
#| fig-width: 7.5
#| fig-asp: 1
#| out-width: 100%

fml <- Surv(mt_death_12m, ev_death_12m)~lta4hresult
dex <- endpoints_ran2_itt |>
  filter(lta4hresult=='TT' | arm == levels(arm)[[2]]) |>
  mutate(Compare = 'CC&CT',mt_death_12m = tt_death_12m/365*12) %>%
  rbind(
    .,
    mutate(filter(., lta4hresult != 'CT'), Compare = 'CC'),
    mutate(filter(., lta4hresult != 'CC'), Compare = 'CT')
  ) |>
  # mutate(lta4hresult =
  #          ifelse(lta4hresult != 'TT' & compare=='TT vs CC&CT',
  #                 'CC&CT', as.character(lta4hresult)) |>
  #          factor(levels=c('TT', 'CC', 'CT', 'CC&CT')))|>
  mutate(lta4hresult =
           ifelse(lta4hresult != 'TT', 'Other', 'TT') |>
           factor(levels=c('TT', 'Other')))|>
  survfit(eval(substitute(fml)), data = _) |>
  survminer::ggsurvplot(conf.int = TRUE, pval=TRUE, pval.method = TRUE,
                        censor=FALSE,
                        xlim = c(0, 9),
                        short.panel.labs=TRUE,
                        # legend.labs = c(''TT'),
                        conf.int.alpha = 0.1,
                        facet.by = 'Compare',
                        xlab = "Months since randomization", break.time.by = 1,
                        legend.title='Genotype(s)',
                        break.x.by=2,
                        palette=c(ggsci::pal_nejm()(10)[c(2:4,1,8)]), 
                        ggtheme=theme_bw(base_size=12))

placebo <- endpoints_ran2_itt |>
  filter(lta4hresult=='TT' | arm == levels(arm)[[1]]) |>
  mutate(Compare = 'CC&CT',mt_death_12m = tt_death_12m/365*12) %>%
  rbind(
    .,
    mutate(filter(., lta4hresult != 'CT'), Compare = 'CC'),
    mutate(filter(., lta4hresult != 'CC'), Compare = 'CT')
  ) |>
  # mutate(lta4hresult =
  #          ifelse(lta4hresult != 'TT' & compare=='TT vs CC&CT',
  #                 'CC&CT', as.character(lta4hresult)) |>
  #          factor(levels=c('TT', 'CC', 'CT', 'CC&CT')))|>
  mutate(lta4hresult =
           ifelse(lta4hresult != 'TT', 'Other', 'TT') |>
           factor(levels=c('TT', 'Other')))|>
  survfit(eval(substitute(fml)), data = _) |>
  survminer::ggsurvplot(conf.int = TRUE, pval=TRUE, pval.method = TRUE,
                        censor=FALSE,
                        xlim = c(0, 9),
                        short.panel.labs=TRUE,
                        xlab = "Months since randomization", break.time.by = 60,
                        # legend.labs = c('CC', 'CT', 'TT'),
                        break.x.by=2,
                         facet.by = 'Compare',
                        legend.title='Genotype(s)',
                        palette=ggsci::pal_nejm()(10)[2:3],
                        ggtheme=theme_bw(base_size=12))

(dex + ggtitle(glue::glue('TT (Dexamethasone) vs {arm_levels[[2]]}')))/
  (placebo + ggtitle(glue::glue('TT (Dexamethasone) vs {arm_levels[[1]]}'))) +
  plot_layout(guides = 'collect') & theme(legend.position = 'bottom')
```


```{r tt-death2}
#| fig-align: center
#| fig-width: 6
#| fig-asp: 0.7
#| out-width: 100%

fml <- Surv(mt_death_12m, ev_death_12m)~genoarm
endpoints_ran2_itt |> 
  mutate(
    mt_death_12m = tt_death_12m/365*12,
    genoarm = glue::glue("{lta4hresult} - {arm}") 
  )  %>%
  rbind(., 
        filter(., lta4hresult=='TT') |> mutate(arm=arm_levels[1])) |>
   survfit(eval(substitute(fml)), data = _) |>
  survminer::ggsurvplot(#pval=TRUE, pval.method = TRUE,
                        xlim = c(0, 9),
                        # legend.labs = c(''TT'),
                        facet.by = 'arm',
                        short.panel.labs=TRUE,
                        censor = FALSE,
                        conf.int = TRUE, 
                        xlab = "Months since randomization", break.time.by = 1, 
                        ylab = 'Probability of event-free survival',
                        break.x.by=2,
                        legend.title='Genotype - Treatment arm',
                        palette=c(ggsci::pal_nejm()(10)[c(2:4,1,8)]), 
                        ggtheme=theme_bw(base_size=12)) + 
  guides(color = guide_legend(nrow = 2,direction = 'vertical')) + 
                            theme(legend.position='bottom')
```

#### Figure 6.2b: Kaplan-Meier estimates each genotype against TT, stratified by MRC Grade

```{r tt-surv-grade}
#| fig-align: center
#| fig-width: 7.5
#| fig-asp: 1
#| out-width: 100%


fml <- Surv(mt_death_12m, ev_death_12m)~strat
tmp_data <- endpoints_ran2_itt |> 
  mutate(lta4hresult =
           ifelse(lta4hresult != 'TT', 'CC & CT', 'TT') |>
           factor(levels=c('TT', 'CC & CT')),
         mt_death_12m = tt_death_12m/365*12,
         strat = paste(lta4hresult, arm, sep=' - ') |> 
           factor(levels = c('CC & CT - Placebo', 'CC & CT - Dexamethasone', 'TT - Dexamethasone')),
         tbmgrade2 = factor(tbmgrade, labels=c('Grade I', 'Grade II', 'Grade III')))

plt_all <-  survfit(eval(substitute(fml)), data = tmp_data) |>
  survminer::ggsurvplot(conf.int = TRUE, censor = FALSE,
                        legend.title='Genotype - Treatment arm',
                        legend.labs = levels(tmp_data$strat),
                        risk.table=TRUE,
                        tables.height = 0.2,
                        pval = TRUE, pval.method = TRUE,
                        pval.size=4,
                        short.panel.labs = TRUE,
                        xlim = c(0, 12), xlab = "Months since randomization",
                        ggtheme = theme_bw(base_size = 12),
                        tables.theme = theme_void() + 
                          theme(axis.line.y = element_blank(), axis.text.y = element_blank(),
                                axis.title.y = element_blank(), axis.ticks.y = element_blank()),
                        risk.table.y.text.col = TRUE, risk.table.y.text = FALSE,
                        risk.table.title='Number at risk across all MRC grades',
                        fontsize = 3, break.x.by=1,
                        palette=ggsci::pal_nejm()(5)[2:4])

plt_grade <-  survfit(eval(substitute(fml)), data = tmp_data) |>
 ggsurvplot_facet(data=tmp_data, conf.int = TRUE, censor = FALSE,
                  legend.title='Genotype - Treatment arm',
                  legend.labs = levels(tmp_data$strat),
                  risk.table=F,
                  tables.height = 0.2,
                  facet.by = c('tbmgrade2'),
                  pval = TRUE, pval.method = TRUE,
                  short.panel.labs = TRUE,
                  pval.size=4,
                  xlim = c(0, 12), xlab = "Months since randomization",
                  ggtheme = theme_bw(base_size = 12),
                  tables.theme = theme_void() + 
                    theme(axis.line.y = element_blank(), axis.text.y = element_blank(),
                          axis.title.y = element_blank(), axis.ticks.y = element_blank()),
                  risk.table.y.text.col = TRUE, risk.table.y.text = FALSE,
                  risk.table.title='Number at risk across all MRC grades',
                  fontsize = 3, break.x.by=2,
                  palette=ggsci::pal_nejm()(10)[2:4])


design <- c(area(1,1,1,3), area(2,1,5,3), area(6,1,9,3))

(plt_all$table) / (plt_all$plot) / plt_grade + plot_layout(guides='collect', design=design) & theme(legend.position = 'bottom') & guides(color = guide_legend(nrow = 2))

```

### Table 6.3: Neurological disability (Rankin score ≥ 3, including death) at 12 months after randomization

```{r neurodis-tt}
mutate(endpoints_ran2_itt, 
       TTorDex = ifelse(
         lta4hresult=='TT', 'TT',
         paste(lta4hresult, arm)
       )) %>%
  rbind(., 
        mutate(filter(., TTorDex!='TT'), TTorDex=paste('CC&CT',arm))) |>
  mutate(TTorDex = 
           factor(TTorDex,
             levels = c('TT',
                        paste(c('CC&CT', 'CC', 'CT'), arm_levels[[1]]),
                        paste(c('CC&CT','CC', 'CT'), arm_levels[[2]])))
  )|>
  glm(ev_neurodis_12m~TTorDex, family=binomial(), data=_) |>
gtsummary::tbl_regression(label = TTorDex ~ 'Group',
                          pvalue_fun = \(p) style_pvalue(p,digits=2),
                          exponentiate = TRUE) |>
  modify_table_body(function(x){
    x$stat_sum = ifelse(x$row_type!='label',
                        glue::glue('{x$n_event}/{x$n_obs} ({round(x$n_event/x$n_obs*100,1)})'), NA)
    x |> select(variable:label, stat_sum, everything())
  }) |>
  modify_header(stat_sum = '**events/n (risk [%])**')  |>
  gtsummary::modify_header(label = 'Group') |>
  gtsummary::as_flex_table() |>
  flextable::delete_rows(1) |>
  ft_sstheme()
  
```

## Safety analysis

### Table 7.1:  Summary of reason to use open-label corticosteroid treatment over the first 12 months after randomization

Note that one episode of open-label corticosteroid could be led by several reasons.

```{r table6}

# open_drug_ran <- left_join(open_drug, select(bsl_ran, USUBJID, arm), by='USUBJID')
names(open_drug) = tolower(names(open_drug))
open_drug_ran <- merge(open_drug, select(bsl_ran, usubjid, daterandom2, arm)) |>
  mutate(dex_daystart = difftime(dex_datestart, daterandom2, units='d'),
         reason_od = ifelse(is.na(reason_od), '(missing)', reason_od)) |>
  filter(dex_daystart > 0) |>
  mutate(reason_od = ifelse(reason_od=='Burred vision', 'Blurred vision', reason_od)) # fix typo
tbl8 <- 
  sstable.ae(
    ae_data = open_drug_ran,
    fullid_data = bsl_ran,
    id.var = 'usubjid',
    aetype.var = 'reason_od',
    arm.var = 'arm',
    sort.by = - ep - pt,
    test=FALSE,
    flextable=FALSE
  )$table

tbl8 = tbl8[-3,]
tbl8[2,1] = "Reason"
tbl8[2,c(2,4)] = "n episode"

# ss_flextable(tbl8)

tbl8.2.all_pt <- sstable.baseline(dex_daystart~arm,
                   data=open_drug_ran, flextable=F)$table[, c(3,5)]

tbl8.2 <-
  sstable.baseline(reason_od~arm|dex_daystart,
                   data=open_drug_ran |> mutate(reason_od=factor(reason_od, levels=tbl8[-c(1:3),1])), flextable=F)$table[, c(3,5)]
tbl8.2[3,] <- tbl8.2.all_pt[3,]
tbl8.2[1,] <- ""
tbl8.2[2,] <- "Days from randomization until use of open-label corticosteroids"


content <- cbind(tbl8[,1:3], tbl8.2[,1], tbl8[,4:5], tbl8.2[,2])
content[3:nrow(content), 1] <- paste("- ", content[3:nrow(content), 1] )
# content <- rbind(content[1:2,],
                 # matrix(c('Reasons for use', rep('', ncol(content)-1)), nrow=1),
                 # rep('Reasons for use', ncol(content)),
                 # content[3:nrow(content),]
# )
# content[,1] <- iconv(content[,1], to='ASCII//TRANSLIT')
content[content=='NA'] <- '-'

content |> 
  ss_flextable(footer = c('Summary statistic = the mean, median (1st and 3rd quartile) value for days to events and frequency (%) for number of episode and number of patient with that particular reason."')) |> flextable::merge_h(i=2)

```

### Table 7.2: Use of open-label dexamethasone within 12 months, by subgroup

This table repeated the descriptive summary in Table 3.8, but included all episodes of open-label dexamethasone throughout the follow-up periods, instead of just the first episodes.

```{r table8}
#| include: false
#| eval: false
open_drug_pt_ran <- open_drug_ran |> 
  group_by(usubjid) |>
  group_modify(
    ~ .x |>  arrange(dex_daystart) |> dplyr::first()
  ) |>
  select(usubjid, dex_daystart) |>
  transmute(dex_daystart = as.integer(dex_daystart)) |>
  right_join(bsl_ran, by='usubjid') |>
  mutate(ev_open = !is.na(dex_daystart), dex_daystart = tidyr::replace_na(dex_daystart, 365)) |>
  mutate(
    tbm_dx2 = droplevels(tbm_dx2)
  )  

open_drug_pt_ran$tbm_dx2 = structure(open_drug_pt_ran$tbm_dx2, label='TBM diagnosis')

tbl8.ccct <- sstable.survcomp(Surv(dex_daystart, ev_open)~arm, data=open_drug_pt_ran |> filter(lta4hresult!='TT'), digits=2, flextable=FALSE, add.risk=F, add.prop.haz.test=F)$table[3,]
tbl8.ccct[1] = 'All patients of CT or CC genotype' 

tbl8.subgroup <- sstable.survcomp.subgroup(Surv(dex_daystart, ev_open)~arm, subgroup.model = ~ lta4hresult+tbmgrade+tbm_dx2, data=open_drug_pt_ran, digits=2, flextable=FALSE, add.risk=F, add.prop.haz.test=F)$table

tbl8.subgroup[2,2] = 'events/n '
tbl8.subgroup[3,] = c(tbl8.ccct, '')
tbl8.subgroup <- ss_format(tbl8.subgroup)
rownames(tbl8.subgroup)[1:2] <- rep('header',2)
ss_flextable(tbl8.subgroup, header=1:2)

```

```{r table-51}
names(open_drug) = tolower(names(open_drug))
open_drug_ran <- merge(open_drug, select(bsl_ran, usubjid, daterandom2, arm, lta4hresult, tbmgrade, tbm_dx2)) |>
  mutate(dex_daystart = difftime(dex_datestart, daterandom2, units='d'),
         reason_od = ifelse(is.na(reason_od), '(missing)', reason_od)) |>
  filter(dex_daystart > 0) |>
  select(usubjid, lta4hresult,tbmgrade,tbm_dx2, dex_daystart) |>
  unique()
tbl5.1 <- 
  sstable.ae(
    ae_data = open_drug_ran,
    fullid_data = bsl_ran,
    id.var = 'usubjid',
    aetype.var = c('Leukotriene A4 hydrolase'='lta4hresult', 'Modified MRC grade'='tbmgrade', 'TBM diagnosis'='tbm_dx2'),
    arm.var = 'arm',
    test=FALSE,
    flextable=FALSE
  )
tbl5.1$table[3,1] = "All patients"
tbl5.1$footer[1] = "n episode refers to the number of events in each study arm."
ss_flextable(tbl5.1)
```

### Adverse events


```{r table-10}
#| include: false
#| eval: false
tbl10 <- sstable.baseline(mrs~arm|ev_death_12m, data=endpoints_ran2_itt)
tbl10$footer="N is number of all patients, n is number of patients included in that statistic, with individuals who died or were lost to follow-up before 12 months excluded. "

ss_flextable(tbl10)

```

#### Table 7.3: Summary of serious adverse events {.tabset .tabset-fade}

We listed the number of serious adverse event episodes and the number of participants who suffered such events. The total number of serious adverse event episodes are summarised and informally compared based on a quasi-Poisson regression model with treatment as the only covariate and total follow-up time as offset.

```{r}
names(ae) <- tolower(names(ae))
ae <- select(ae, -reasonsae) |>
  mutate(aeterm=ifelse(aeterm=='Burred vision', 'Blurred vision', aeterm)) #fix typo
ae_ran <- ae |> right_join(select(bsl_ran, usubjid))
```

```{r table-11}

sae <-
  ae_ran |>
  filter((aeser == "Yes" | grade %in% c(3,4))) |>
  select(
    usubjid, ae_start = aestdtc, ae_end = aeendtc, aeser, relatestdr, aecode, reasonsae_final
  ) |>
  left_join(
    select(bsl_ran, usubjid, daterandom2), by='usubjid') |>
  mutate(ae_start =  (ymd(ae_start) - ymd(daterandom2))/ddays(1),
         ae_end = (ymd(ae_end) - ymd(daterandom2))/ddays(1)) |>
  select(-daterandom2)

sae_full <- 
  bsl_ran |> select(usubjid, arm, lta4hresult) |>
  left_join(endpoints_ran2_itt |> select(usubjid, tt_death_12m), by='usubjid') |>
  left_join(sae, by=c('usubjid')) |>
  filter(lta4hresult%in%c('CC', 'CT')) |>
  group_by(usubjid) |>
  group_modify(
    function(x, y){
      # browser()
      if (nrow(subset(x, !is.na(as.numeric(ae_end)))) > 1){
        # browser()
        x = as.data.frame(x) |> subset(!is.na(ae_end) & !is.na(ae_start))
        diff_ae_period = rangemisc::overlap_collapse(x, vars(ae_start, ae_end))
        total_ae_day = sum(diff_ae_period$ae_end - diff_ae_period$ae_start)
      } else
        total_ae_day = sum(x$ae_end - x$ae_start)
      
      ev_ae = 1
      if (is.na(total_ae_day)) {
        total_ae_day <- 0; ev_ae = 0
      }
      # if (max(x$tt_death_12m) - total_ae_day < 0) browser()
      # last_ae_day = max(x$ae_end, na.rm =TRUE)
      # if (is.infinite(last_ae_day)) last_ae_day = x$tt_death_12m
      data.frame(ev_ae = ev_ae, tt_ae =  max(x$tt_death_12m) - total_ae_day, total_ae = nrow(x), tt_death_12m = max(x$tt_death_12m), arm=unique(x$arm), lta4hresult=x$lta4hresult[[1]])
    }
  )

```

::: {.panel-tabset .tabset-fade}

##### CC&CT

```{r tbl11-ccct}
tbl11.c <- sstable.ae(
  ae_data = subset(sae, aeser == "Yes") |> inner_join(bsl_ran |> subset(lta4hresult %in% c('CC', 'CT')) |> select(usubjid), by='usubjid'),
  fullid_data = bsl_ran |> subset(lta4hresult %in% c('CC', 'CT')),
  sort.by = - ep - pt,
  id.var = 'usubjid',
  chisq.test=TRUE,
  arm.var = 'arm', aetype.var='aecode',
  flextable=F
)

tbl11.c$table[3,1] = "CC & CT genotype: Any serious adverse event"
rownames(tbl11.c$table)[3] = "section"

## Add Poisson fit
tbl11fit_cc = glm(total_ae~arm+offset(tt_death_12m/365*12), data=sae_full |> subset(lta4hresult %in% c('CC', 'CT')), family=quasipoisson, maxit=1e2)
tbl11.c$table <- cbind(tbl11.c$table, '')
tbl11.c$table[-1:-3, 6] = ''
tbl11.c$table[3,7] = format.pval(summary(tbl11fit_cc)$coef[2,"Pr(>|t|)" ], digits = 2)
tbl11.c$table[2,6] <- 'p-value for number of patients with SAE'
tbl11.c$table[1,6:7] <- 'Comparison'
tbl11.c$table[2,7] <- 'p-value for total number of SAEs per patient'
tbl11.c$footer <- c(tbl11.c$footer[-3], 'p-value for number of patients with SAE was based on a Chi-squared test between to treatment arm', 'p-value for total number of SAEs per patient was based on a quasi-Poisson regression model with treatment as the only covariate and total follow-up time as offset')

ss_flextable(tbl11.c)
```

##### CC

```{r tbl11-cc}
tbl11.cc <- sstable.ae(
  ae_data = subset(sae, aeser == "Yes") |> inner_join(bsl_ran |> subset(lta4hresult %in% c('CC')) |> select(usubjid), by='usubjid'),
  fullid_data = bsl_ran |> subset(lta4hresult %in% c('CC')),
  sort.by = - ep - pt,
  id.var = 'usubjid',
  chisq.test=TRUE,
  arm.var = 'arm', aetype.var='aecode',
  flextable=F
)

tbl11.cc$table[3,1] = "CC genotype: Any serious adverse event"
rownames(tbl11.cc$table)[3] = "section"

## Add Poisson fit
tbl11fit_cc = glm(total_ae~arm+offset(tt_death_12m/365*12), data=sae_full |> subset(lta4hresult %in% 'CC'), family=quasipoisson, maxit=1e2)
tbl11.cc$table <- cbind(tbl11.cc$table, '')
tbl11.cc$table[-1:-3, 6] = ''
tbl11.cc$table[3,7] = format.pval(summary(tbl11fit_cc)$coef[2,"Pr(>|t|)" ], digits = 2)
tbl11.cc$table[2,6] <- 'p-value for number of patients with SAE'
tbl11.cc$table[1,6:7] <- 'Comparison'
tbl11.cc$table[2,7] <- 'p-value for total number of SAEs per patient'
tbl11.cc$footer <- c(tbl11.cc$footer[-3], 'p-value for number of patients with SAE was based on a Chi-squared test between to treatment arm', 'p-value for total number of SAEs per patient was based on a quasi-Poisson regression model with treatment as the only covariate and total follow-up time as offset')

ss_flextable(tbl11.cc)
```


##### CT
```{r tbl11-ct}

tbl11.ct <- sstable.ae(
  ae_data = subset(sae, aeser == "Yes") |> inner_join(bsl_ran |> subset(lta4hresult %in% c('CT')) |> select(usubjid), by='usubjid'),
  fullid_data = bsl_ran |> subset(lta4hresult %in% c('CT')),
  sort.by = - ep - pt,
  id.var = 'usubjid',
  chisq.test=TRUE,
  arm.var = 'arm', aetype.var='aecode',
  flextable=F
)

tbl11.ct$table[3,1] = "CT genotype: Any serious adverse event"
rownames(tbl11.ct$table)[3] = "section"
# tbl11.ct$table = tbl11.ct$table[-c(1,2),]

## Add Poisson fit
tbl11fit_ct = glm(total_ae~arm+offset(tt_death_12m/365*12), data=sae_full |> subset(lta4hresult %in% 'CT'), family=quasipoisson, maxit=1e2)
tbl11.ct$table <- cbind(tbl11.ct$table, '')
tbl11.ct$table[-1:-3, 6] = ''
tbl11.ct$table[3,7] = format.pval(summary(tbl11fit_ct)$coef[2,"Pr(>|t|)" ], digits = 2)
tbl11.ct$table[2,6] <- 'p-value for number of patients with SAE'
tbl11.ct$table[1,6:7] <- 'Comparison'
tbl11.ct$table[2,7] <- 'p-value for total number of SAEs per patient'

tbl11.ct$footer <- c(tbl11.ct$footer[-3], 'p-value for number of patients with SAE was based on a Chi-squared test between to treatment arm', 'p-value for total number of SAEs per patient was based on a quasi-Poisson regression model with treatment as the only covariate and total follow-up time as offset')
ss_flextable(tbl11.ct)
```

##### TT

```{r tbl11-tt}
tbl11.tt <- sstable.ae(
  ae_data = subset(sae, aeser == "Yes") |> inner_join(bsl_ran |> subset(lta4hresult %in% c('TT')) |> select(usubjid), by='usubjid'),
  fullid_data = bsl_ran |> subset(lta4hresult %in% c('TT')),
  sort.by = - ep - pt,
  id.var = 'usubjid',
  chisq.test=FALSE,
  test=FALSE,
  arm.var = 'arm', aetype.var='aecode',
  flextable=F
)

tbl11.tt$table[3,1] = "TT genotype: Any serious adverse event"
rownames(tbl11.tt$table)[3] = "section"
tbl11.tt$table <- tbl11.tt$table[,1:3]

# tbl11.tt$table = tbl11.tt$table[-c(1,2),]
# tbl11.tt$table[-c(1,2),4:6]=''


ss_flextable(tbl11.tt)
```

:::

```{r unused-tbl11}
#| eval: false
#| include: false

### Unused code

tbl11fit_ct = glm(tt_ae~arm+offset(tt_death_12m), data=sae_full |> subset(lta4hresult %in% 'CT'), family=quasipoisson)


tbl11.ct$table <- cbind(tbl11.ct$table, '')
tbl11.tt$table <- cbind(tbl11.tt$table, '')
tbl11.cc$table[-1:-3, 6] = ''
tbl11.ct$table[-1, 6] = ''

tbl11.cc$table[3,7] = format.pval(summary(tbl11fit_cc)$coef[2,"Pr(>|t|)" ], digits = 2)
tbl11.ct$table[1,7] = format.pval(summary(tbl11fit_ct)$coef[2,"Pr(>|t|)" ], digits = 2)

tbl11 = list(
  table=rbind(tbl11.cc$table, tbl11.ct$table, tbl11.tt$table),
  footer = tbl11.tt$footer
)



tbl11$table[2,6] <- 'p-value for number of patients with AE'

tbl11$table[1,6:7] <- 'Comparison'
tbl11$table[2,7] <- 'p-value for time to first event'
tbl11$table[1,2:5] <- rep(c('Dummy B (N=397)', 'Dummy A (N=305)'), each=2)

tbl11$footer[3] = "p-values for number of patients with AE were based on Chi-square tests where appopriate or Fisher exact tests otherwise. p-values for time to first event were based on quasipossion regression comparing AE-free duration between study arms."

ss_flextable(tbl11, section=which(rownames(tbl11$table)=='section'))
```

#### Table 7.4: Summary of clinical grade 3&4 adverse events {.tabset .tabset-fade}

::: {.panel-tabset .tabset-fade}

##### CC&CT

```{r table12-ccct}
## create 2 tables
tbl12.c <- sstable.ae(
  ae_data = subset(ae_ran, grade %in% c(2, 3, 4) & usubjid %in% subset(bsl_ran, lta4hresult %in% c('CC', 'CT'), select='usubjid', drop=T)), 
  fullid_data = subset(bsl_ran, lta4hresult %in% c('CC', 'CT')),
  sort.by = - ep - pt,
  arm.var = "arm", id.var = "usubjid", aetype.var = "aecode", grade.var = "grade2", digits = 0,
  test = FALSE, pdigits = 3, pcutoff = 0.0001, chisq.test = TRUE,
  footer = NULL, flextable = FALSE, bg = "#F2EFEE")

tbl12.c$table[3:5,1] = paste0("CC & CT genotype: ", tbl12.c$table[3:5,1]) 
ss_flextable(tbl12.c)
```

##### CC

```{r table12-cc}
## create 2 tables
tbl12.cc <- sstable.ae(
  ae_data = subset(ae_ran, grade %in% c(2, 3, 4) & usubjid %in% subset(bsl_ran, lta4hresult %in% c('CC'), select='usubjid', drop=T)), 
  fullid_data = subset(bsl_ran, lta4hresult %in% c('CC')),
  sort.by = - ep - pt,
  arm.var = "arm", id.var = "usubjid", aetype.var = "aecode", grade.var = "grade2", digits = 0,
  test = FALSE, pdigits = 3, pcutoff = 0.0001, chisq.test = TRUE,
  footer = NULL, flextable = FALSE, bg = "#F2EFEE")

tbl12.cc$table[3:5,1] = paste0("CC genotype: ", tbl12.cc$table[3:5,1]) 
ss_flextable(tbl12.cc)
```


##### CT

```{r table12-ct}
tbl12.ct <- sstable.ae(
  ae_data = subset(ae_ran, grade %in% c(2, 3, 4) & usubjid %in% subset(bsl_ran, lta4hresult %in% c('CT'), select='usubjid', drop=T)), 
  fullid_data = subset(bsl_ran, lta4hresult %in% c('CT')),
  sort.by = - ep - pt,
  arm.var = "arm", id.var = "usubjid", aetype.var = "aecode", grade.var = "grade2", digits = 0,
  test = FALSE, pdigits = 3, pcutoff = 0.0001, chisq.test = TRUE,
  footer = NULL, flextable = FALSE, bg = "#F2EFEE")


tbl12.ct$table[3:5,1] = paste0("CT genotype: ", tbl12.ct$table[3:5,1]) 
ss_flextable(tbl12.ct)
```

##### TT

```{r table12-tt}

tbl12.tt <- sstable.ae(
  ae_data = subset(ae_ran, grade %in% c(2, 3, 4) & usubjid %in% subset(bsl_ran, lta4hresult %in% c('TT'), select='usubjid', drop=T)), 
  fullid_data = subset(bsl_ran, lta4hresult %in% c('TT')),
  sort.by = - ep - pt,
  arm.var = "arm", id.var = "usubjid", aetype.var = "aecode", grade.var = "grade2", digits = 0,
  test = FALSE, pdigits = 3, pcutoff = 0.0001, chisq.test = TRUE,
  footer = NULL, flextable = FALSE, bg = "#F2EFEE")


tbl12.tt$table[3:5,1] = paste0("TT genotype: ", tbl12.tt$table[3:5,1]) 
tbl12.tt$table <- tbl12.tt$table[,1:3]

ss_flextable(tbl12.tt)
```

```{r table12-unused}
#| include: false
#| eval: false
#| 
tbl12.ct[, 4:5] = ''
tbl12.tt[, 4:5] = ''
rownames(tbl12.cc$table)[3] = 'section'
rownames(tbl12.ct)[1] = 'section'
rownames(tbl12.tt)[1] = 'section'

tbl12 = rbind(tbl12.cc$table,tbl12.ct, tbl12.tt)

## final table
tbl12[1,2:5] <- rep(c('Dummy B (N=397)', 'Dummy A (N=305)'), each=2)
ss_flextable(tbl12, section=which(rownames(tbl12)=='section'))
```

:::

#### Table 7.5: Summary of serious adverse events, shown by reasons for which they were considered serious, not shown by study arm

```{r table13}
tbl13 <- sstable.baseline(
  formula = aecode ~ reasonsae_final, 
  data = mutate(subset(sae, aeser == "Yes"), 
                aecode = structure(droplevels(aecode),
                                   label ='Any adverse event')), 
  pooledGroup = FALSE, digits = 0, flextable = FALSE,
  footer = c("Life threatening event: subjects were at immediate risk of death at the time of the event; it does not refer to an event which hypothetically might have caused death if it were more severe",
             "Persistent or significant disability/ incapacity: A substantial disruption of a person's ability to conduct normal life functions"))
tbl13$footer[1] <- 'N is number of all events, n is number of events for each particular event type.'
tbl13$table[2,1] <- 'Type of adverse event'
flextable::width(ss_flextable(tbl13), width = 1.5)
```

#### Table 7.6: Summary of serious adverse events possibly, probably, or definitely related to the study drug {.tabset .tabset-fade}

```{r table-14}
sae.related <-
  ae |> filter((aeser == "Yes" | grade %in% c(3,4)) & relatestdr %in% c("Related to study drug", "Possibly related to study drug", "Liver injury (record as AE)")) |>
  select(
    usubjid, ae_start = aestdtc, ae_end = aeendtc, aeser, aecode
  ) |>
  left_join(
    select(bsl_ran, usubjid, daterandom2), by='usubjid') |>
  mutate(ae_start =  (ymd(ae_start) - ymd(daterandom2))/ddays(1),
         ae_end = (ymd(ae_end) - ymd(daterandom2))/ddays(1)) |>
  select(-daterandom2)
```

::: {.panel-tabset .tabset-fade}

##### CC&CT

```{r table14-ccct}

tbl14.c <- sstable.ae(
  ae_data = subset(sae.related) |> inner_join(bsl_ran |> subset(lta4hresult %in% c('CC', 'CT')) |> select(usubjid), by='usubjid'),
  fullid_data = bsl_ran |> subset(lta4hresult %in% c('CC', 'CT')),
  sort.by = - ep - pt,
  chisq.test=TRUE,
  id.var = 'usubjid',
  arm.var = 'arm', aetype.var='aecode',
  test=F,
  flextable=F
)

tbl14.c$table[3,1] = "CC & CT genotype: Any serious adverse event"
rownames(tbl14.c$table)[3] = "section"

ss_flextable(tbl14.c)
```


##### CC

```{r table14-cc}

tbl14.cc <- sstable.ae(
  ae_data = subset(sae.related) |> inner_join(bsl_ran |> subset(lta4hresult %in% c('CC')) |> select(usubjid), by='usubjid'),
  fullid_data = bsl_ran |> subset(lta4hresult %in% c('CC')),
  sort.by = - ep - pt,
  chisq.test=TRUE,
  id.var = 'usubjid',
  arm.var = 'arm', aetype.var='aecode',
  test=F,
  flextable=F
)

tbl14.cc$table[3,1] = "CC genotype: Any serious adverse event"
rownames(tbl14.cc$table)[3] = "section"

ss_flextable(tbl14.cc)
```

##### CT

```{r table14-ct}

tbl14.ct <- sstable.ae(
  ae_data = subset(sae.related) |> inner_join(bsl_ran |> subset(lta4hresult %in% c('CT')) |> select(usubjid), by='usubjid'),
  fullid_data = bsl_ran |> subset(lta4hresult %in% c('CT')),
  sort.by = - ep - pt,
  chisq.test=TRUE,
  id.var = 'usubjid',
  arm.var = 'arm', aetype.var='aecode',
  test=F,
  flextable=F
)

tbl14.ct$table[3,1] = "CT genotype: Any serious adverse event"
rownames(tbl14.ct$table)[3] = "section"

ss_flextable(tbl14.ct)
```


##### TT

```{r table14-tt}
tbl14.tt <- sstable.ae(
  ae_data = subset(sae.related) |> inner_join(bsl_ran |> subset(lta4hresult %in% c('TT')) |> select(usubjid), by='usubjid'),
  fullid_data = bsl_ran |> subset(lta4hresult %in% c('TT')),
  sort.by = - ep - pt,
  chisq.test=TRUE,
  id.var = 'usubjid',
  arm.var = 'arm', aetype.var='aecode',
  test=F,
  flextable=F
)

tbl14.tt$table[3,1] = "TT genotype: Any serious adverse event"
rownames(tbl14.tt$table)[3] = "section"
tbl14.tt$table <- tbl14.tt$table[,1:3]

ss_flextable(tbl14.tt)
```

:::

```{r tabl14-unused}
#| include: false
#| eval: false
tbl14.ct$table = tbl14.ct$table[-c(1,2),]
tbl14.tt$table[, 4:5] = ''
tbl14.tt$table = tbl14.tt$table[-c(1,2),]

tbl14 = list(
  table=rbind(tbl14.cc$table,tbl14.ct$table, tbl14.tt$table),
  footer = tbl14.tt$footer
)

tbl14$table[1,2:5] <- rep(c('Dummy B (N=397)', 'Dummy A (N=305)'), each=2)
ss_flextable(tbl14, section=which(rownames(tbl14$table)=='section'))
```

#### Table 7.7: Summary of adverse events leading to TB drug interruption {.tabset .tabset-fade}

```{r table 15}
ae_stoptbdrug <-
  ae |> filter(stop_tbdrug==1) |>
  select(
    usubjid, ae_start = aestdtc, ae_end = aeendtc, aeser, aecode
  ) |>
  left_join(
    select(bsl_ran, usubjid, daterandom2), by='usubjid') |>
  mutate(ae_start =  (ymd(ae_start) - ymd(daterandom2))/ddays(1),
         ae_end = (ymd(ae_end) - ymd(daterandom2))/ddays(1)) |>
  select(-daterandom2)

```

::: {.panel-tabset .tabset-fade}

##### CC&CT

```{r table15-ccct}
tbl15.c <- sstable.ae(
  ae_data = subset(ae_stoptbdrug) |> inner_join(bsl_ran |> subset(lta4hresult %in% c('CC', 'CT')) |> select(usubjid), by='usubjid'),
  fullid_data = bsl_ran |> subset(lta4hresult %in% c('CC', 'CT')),
  sort.by = - ep - pt,
  chisq.test=TRUE,
  id.var = 'usubjid',
  arm.var = 'arm', aetype.var='aecode',
  test=F,
  flextable=F
)

tbl15.c$table[3,1] = "CC & CT genotype: Any adverse event leading to TB treatment interruption"
rownames(tbl15.c$table)[3] = "section"

ss_flextable(tbl15.c)
```

##### CC

```{r table15-cc}
tbl15.cc <- sstable.ae(
  ae_data = subset(ae_stoptbdrug) |> inner_join(bsl_ran |> subset(lta4hresult %in% c('CC')) |> select(usubjid), by='usubjid'),
  fullid_data = bsl_ran |> subset(lta4hresult %in% c('CC')),
  sort.by = - ep - pt,
  chisq.test=TRUE,
  id.var = 'usubjid',
  arm.var = 'arm', aetype.var='aecode',
  test=F,
  flextable=F
)

tbl15.cc$table[3,1] = "CC genotype: Any adverse event leading to TB treatment interruption"
rownames(tbl15.cc$table)[3] = "section"

ss_flextable(tbl15.cc)
```

##### CT

```{r table15-ct}
tbl15.ct <- sstable.ae(
  ae_data = subset(ae_stoptbdrug) |> inner_join(bsl_ran |> subset(lta4hresult %in% c('CT')) |> select(usubjid), by='usubjid'),
  fullid_data = bsl_ran |> subset(lta4hresult %in% c('CT')),
  sort.by = - ep - pt,
  chisq.test=TRUE,
  id.var = 'usubjid',
  arm.var = 'arm', aetype.var='aecode',
   test=F,
  flextable=F
)

tbl15.ct$table[3,1] = "CT genotype: Any adverse event leading to TB treatment interruption"
rownames(tbl15.ct$table)[3] = "section"

ss_flextable(tbl15.ct)
```

##### TT

```{r table15-tt}
tbl15.tt <- sstable.ae(
  ae_data = subset(ae_stoptbdrug) |> inner_join(bsl_ran |> subset(lta4hresult %in% c('TT')) |> select(usubjid), by='usubjid'),
  fullid_data = bsl_ran |> subset(lta4hresult %in% c('TT')),
  sort.by = - ep - pt,
  chisq.test=TRUE,
  id.var = 'usubjid',
  arm.var = 'arm', aetype.var='aecode',
   test=F,
  flextable=F
)

tbl15.tt$table[3,1] = "TT genotype: Any adverse event leading to TB treatment interruption"
tbl15.tt$table <- tbl15.tt$table[,1:3]
rownames(tbl15.tt$table)[3] = "section"
ss_flextable(tbl15.tt)
```

:::

```{r table15-unused}
#| include: false
#| eval: false

tbl15.ct$table = tbl15.ct$table[-c(1,2),]
tbl15.tt$table = tbl15.tt$table[-c(1,2),]
tbl15.tt$table[, 4:5] = ''

tbl15 = list(
  table=rbind(tbl15.cc$table, tbl15.ct$table, tbl15.tt$table),
  footer = tbl15.tt$footer
)

tbl15$table[1,2:5] <- rep(c('Dummy B (N=397)', 'Dummy A (N=305)'), each=2)
ss_flextable(tbl15, section=which(rownames(tbl15$table)=='section'))
```

#### Table 7.8: Summary of Grade 3&4 laboratory abnormalities 

```{r table16}
names(ae_lab) <- tolower(names(ae_lab))
tbl16.cc <-
  sstable.ae(
    ae_data = ae_lab |> subset(grade %in% c(3,4) & usubjid %in% subset(bsl_ran, lta4hresult %in% c('CC'), select='usubjid', drop=T)),
    fullid_data = subset(bsl_ran, lta4hresult %in% c('CC')),
    sort.by = - ep - pt,
    arm.var = 'arm', id.var = 'usubjid', aetype.var = 'type',
    flextable=F,
    grade.var='grade', digits=0, test=FALSE)

tbl16.ct <-
  sstable.ae(
    ae_data = ae_lab |> subset(grade %in% c(3,4) & usubjid %in% subset(bsl_ran, lta4hresult %in% c('CT'), select='usubjid', drop=T)),
    fullid_data = subset(bsl_ran, lta4hresult %in% c('CT')),
    sort.by = - ep - pt,
    arm.var = 'arm', id.var = 'usubjid', aetype.var = 'type',
    flextable=F,
    grade.var='grade', digits=0, test=FALSE)$table[-(1:2),]

tbl16.tt <-
  sstable.ae(
    ae_data = ae_lab |> subset(grade %in% c(3,4) & usubjid %in% subset(bsl_ran, lta4hresult %in% c('TT'), select='usubjid', drop=T)),
    fullid_data = subset(bsl_ran, lta4hresult %in% c('TT')),
    sort.by = - ep - pt,
    arm.var = 'arm', id.var = 'usubjid', aetype.var = 'type',
    flextable=FALSE,
    grade.var='grade', digits=0, test=FALSE)$table[-(1:2),]

tbl16.cc$table[3,1] = 'CC genotype: Any grade 3&4 laboratory abnormality'
tbl16.ct[1,1] = 'CT genotype: Any grade 3&4 laboratory abnormality'
tbl16.tt[1,1] = 'TT genotype: Any grade 3&4 laboratory abnormality'
tbl16.tt[,4:5] = ''
rownames(tbl16.cc$table)[3] <- rownames(tbl16.ct)[1]  <- rownames(tbl16.tt)[1] <- 'section'

tbl16 <- list(
  table = rbind(tbl16.cc$table, tbl16.ct, tbl16.tt),
  footer = tbl16.cc$footer)

tbl16$table[1,2:5] <- rep(glue::glue('{rev(arm_levels)} (N = {table(bsl_ran$arm == arm_levels[[1]])})'), each=2)
ss_flextable(tbl16, 
             section=which(rownames(tbl16$table)=='section'))

```


## Meta analysis

To investigate the benefit of dexamethasone in all adults with TBM, regardless of LTA4H status, we conducted an individual patient data meta-analysis and combine the current trial data with data from 447 HIV non-positive adults (of which 436 were confirmed negative) with TBM enrolled into a previous trial of adjunctive dexamethasone conducted in Vietnam.

```{r add-pooled-dataset}
dex_added <- readRDS('data/VAD/dex_added.RDS') %>% 
  filter(!(HIV == 'Yes') %in% TRUE) %>% # HIV == 'No' # for true non-HIV pts.
  select(usubjid = PatID ,
         site = Hospital,
         age = Age,
         sex = Sex,
         tbmgrade = TBMGrade,
         arm = Dex,
         ev_death = Evdead,
         tt_death = Ttdead,
         tbm_dx,
         drug_resist = Resistance,
         mrs = mrs_9m) %>%
  mutate(
    sex = factor(sex, levels=c('F', 'M'), labels=c('Female', 'Male')),
    tbmgrade = factor(tbmgrade, levels=1:3, labels=paste('Grade', c('I', 'II', 'III'))),
    arm = dplyr::recode(arm,  "No" = if (dummy) "Dummy A" else "Placebo",
                     "Yes" =  if (dummy) "Dummy B" else "Dexamethasone") |>
      relevel(ref=1),
    ev_death_9m = case_when(tt_death<=365/12*9 ~ ev_death,
                              tt_death>365/12*9 ~ 0),
    tt_death_9m = pmin(tt_death, 365/12*9),
    mt_death_9m = pmin(tt_death/365*12, 9),
    trial = 'Thwaites 2004',
    tbm_dx = ifelse(tbm_dx=='Confirmed TBM', 'Definite TBM', tbm_dx),
    resist = case_match(
      drug_resist,
      "Isoniazid resistant" ~ "Isoniazid resistant non-MDR",
      "Rifampicin resistant/MDR" ~ "Multi-drug resistant or rifampicin mono-resistant",
      "Unknown resistance" ~ '*Mtb* non-isolated or missing result',
      "No or other resistance" ~ "No or other resistance"
    )
  ) 

pooled_bsl <- rbind(
  select(dex_added, usubjid:arm, site, resist, trial, tbm_dx = tbm_dx),
  select(bsl_ran, usubjid, age, sex, tbmgrade, arm, site, resist, tbm_dx = tbm_dx2) |> mutate( trial = 'LAST ACT', tbm_dx = ifelse(grepl('(Probable)|(Possible)',as.character(tbm_dx)), 'Probable or possible TBM', as.character(tbm_dx)))) |>
  mutate(
    tbm_dx = structure(factor(tbm_dx, levels=c('Definite TBM', 'Probable or possible TBM', 'Confirmed non-TBM')), label='TBM diagnosis'),
    age = structure(age, label='Age'),
    arm = structure(arm, label='Treatment arm'),
    sex = structure(sex, label='Gender'),
    trial = structure(trial, label='Trial'),
    tbmgrade = structure(tbmgrade, label='MRC Grade'),
    resist = structure(resist|> factor(levels = levels(bsl_ran$resist)), label='Anti-tuberculosis drug resistance') 
  ) |>
  select(age, arm, tbm_dx, tbmgrade, everything())

pooled_endpoint <-
  rbind(
    endpoints_ran2_itt |>
      mutate(ev_death_9m = case_when(tt_death<=365/12*9 ~ ev_death,
                                     tt_death>365/12*9 ~ 0),
             tt_death_9m = pmin(tt_death, 365/12*9),
             mt_death_9m = pmin(tt_death/365*12, 9)) |>
      select(usubjid, ev_death_9m, mt_death_9m, tt_death_9m, mrs=mrs_9m),
    select(dex_added, usubjid, ev_death_9m, mt_death_9m, tt_death_9m, mrs)) |>
  right_join(pooled_bsl, by='usubjid') |>
  mutate(ev_death_9m = structure(ev_death_9m, label='Death within 9 months after randomization')) 
```

Baseline characteristics (age, sex, enrolment MRC TBM grade, diagnostic category) was compared between trials and presented in Table 7.1. Due to the lack of information, TBM diagnosis category was pooled to "Definite TBM", "Confirmed non-TBM" for microbiologically confirmed case and "Probable or possible TBM" otherwise.

### Table 8.1: Baseline characteristics, by study

```{r baseline-pooled}
pooled_bsl |>
  select(-usubjid, -site) |>
  tbl_summary(by=trial,
              digits = list(all_continuous()~1),
              missing = 'no',
              missing_text = ' (Missing/Unknown)',
              statistic = list(
               all_continuous() ~ '{mean}; {median} ({p25}, {p75})',
                all_categorical() ~ '{n} ({p}%)'
              )) |> 
  gtsummary::add_n(statistic='{N_nonmiss}') |>
  modify_footnote(
    update = list(all_stat_cols() ~ "Summary statistic is absolute count (%) for categorical variable(s) and median (1st, 3rd quartile) for continuous variable(s).")
  ) |>
  as_flex_table() |>
  ftExtra::colformat_md(j=1, part='body') |>
  flextable::set_caption('Baseline characteristics') |>
  flextable::footnote(
    i = 5, j = 1,
    part='body',
    value = flextable::as_paragraph(c(
      'Participants will only be categorised as ‘not TBM’ if they have a confirmed alternative diagnosis (alternative to TBM) or if they fully recovered without any anti-TB drugs. Results given for sub-group with positive mycobacterial culture on baseline CSF. \n
      N = number of patients with non-missing data included in that statistic. \n
      Summary statistic = the mean; median (1st and 3rd quartile) value for numeric data, and the number and frequency (%) of patients with the characteristic for categorical data.\n
      Definite TBM = positive acid fast bacilli (AFB) on CSF Ziehl Neelsen stain, or positive CSF TB GeneXpert test, OR positive CSF TB culture. Confirmed non-TBM = microbiologically confirmed other brain infection. Confirmed additional brain infection includes positive CSF India Ink stain, or CSF cryptococcal antigen, or positive blood cryptococcal antigen, or positive CSF bacterial Gram stain, or positive CSF bacterial culture, or positive CSF viral or helminth PCR test. Probable or possible TBM were pooled together and comprises of cases that were not fall into either group above'
      )),
    ref_symbols = '2'
  ) |>
  ft_sstheme(bg="#F2EFEE")

```

### Death within 9 months from randomization

We compute Kaplan-Meier survival curves and fit a Cox proportional hazard model and an RMST model. We also show the Kaplan-Meier curves stratified by TBM grade (not in SAP)


#### Figure 8.1: Kaplan-Meier estimate for survival 9 months after randomization, comparing two treatment arms

```{r primary-ep-km}
#| fig-width: 7.5
#| fig-asp: 0.6
#| out-width: 100%

pooledoutc1.fit1 <- survfit(Surv(mt_death_9m, ev_death_9m) ~ arm,
        data = pooled_endpoint)
pooledoutc1.surv1 = ggsurvplot(pooledoutc1.fit1, data = pooled_endpoint,  
           risk.table = TRUE,  censor = FALSE,
           tables.height = 0.2,
           pval = TRUE, pval.method = TRUE,
           pval.size=4,
           conf.int = TRUE, 
           short.panel.labs = TRUE,
           xlim = c(0, 9), xlab = "Months since randomization",
           # ylab = 'Proabability of survival',
           ggtheme = theme_bw(base_size = 12),
           tables.theme = theme_void() + theme(axis.line = element_blank(), axis.text = element_blank(),
                                axis.title = element_blank(), axis.ticks = element_blank()),
           risk.table.title='Number at risk across all MRC grades',
           fontsize = 3, break.x.by=1,
           legend.labs = arm_levels,
           legend.title= 'Treatment arm',
           palette=ggsci::pal_nejm()(10)[2:3],
           risk.table.y.text.col = TRUE, risk.table.y.text = FALSE)

pooledoutc1.fit2 <- survfit(Surv(mt_death_9m, ev_death_9m) ~ arm + tbmgrade,
        data = pooled_endpoint)
pooledoutc1.surv2 = ggsurvplot(pooledoutc1.fit2, data = pooled_endpoint,
           risk.table = FALSE,  censor = FALSE,
           pval = TRUE, pval.method = TRUE,
           conf.int = TRUE,
           facet.by= 'tbmgrade',
           short.panel.labs = TRUE,
           xlim = c(0, 9), xlab = "Months since randomization", break.time.by = 30,
           # ylab = 'Proabability of survival',
           ggtheme = theme_bw(base_size = 12) + theme(legend.position = 'none', panel.spacing = unit(1, 'lines'),),
           tables.theme = theme(axis.line = element_blank(), axis.text = element_blank(),
                                axis.title = element_blank(), axis.ticks = element_blank()),
           fontsize = 2, break.x.by=2,
           legend.title= 'Treatment arm',
           palette=ggsci::pal_nejm()(10)[2:3],
           risk.table.y.text.col = TRUE, risk.table.y.text = FALSE)

pooledoutc1_tbl <- lapply(
  levels(pooled_endpoint$tbmgrade),
  function(grade){
    dt <- pooled_endpoint |> filter(tbmgrade==grade)
    pooledoutc1.surv2 = ggsurvplot(survfit(Surv(mt_death_9m, ev_death_9m) ~ arm + tbmgrade,
                                           data = dt), 
                                   data = dt,
                                   risk.table = TRUE,  censor = FALSE,
                                   pval = TRUE, pval.method = TRUE,
                                   conf.int = TRUE,
                                   short.panel.labs = TRUE,
                                   xlim = c(0, 9), xlab = "Months since randomization", break.time.by = 30,
                                   # ylab = 'Proabability of survival',
                                   ggtheme = theme_bw(base_size = 12) + theme(legend.position = 'none'),
                                   tables.theme = theme_void() +
                                     theme(
                                       plot.title = element_blank(),
                                       axis.line = element_blank(), axis.text = element_blank(),
                                       axis.title = element_blank(), axis.ticks = element_blank()),
                                   fontsize = 3, break.x.by=2,
                                   legend.title= 'Treatment arm',
                                   risk.table.title = NULL,
                                   palette=ggsci::pal_nejm()(10)[2:3],
                                   risk.table.y.text.col = TRUE, risk.table.y.text = FALSE)[[2]]
  })
  

design <- c(area(1,1,1,3), area(2,1,5,3))

(pooledoutc1.surv1$table) / (pooledoutc1.surv1$plot) +
  plot_layout(design=design) & theme(legend.position = 'bottom')


design <- c(area(1,1,4,3), area(5,1,5.5,3))
(pooledoutc1.surv2)/(pooledoutc1_tbl[[1]] + pooledoutc1_tbl[[2]] + pooledoutc1_tbl[[3]]) +
  plot_layout(design=design) & theme(legend.position = 'bottom')
# pooledoutc1.surv1
```

#### Figure 8.2: Kaplan-Meier estimate for survival 9 months after randomization, comparing two treatment arms (TT removed)

We additionally removed the TT group in the LAST ACT trial and re-analysed (not in SAP). **Note that**  no consistent genotyping was performed in the Thwaites 2004 study.

```{r primary-ep-km-c}
#| fig-width: 7.5
#| fig-asp: 0.6
#| out-width: 100%

pooled_endpoint2 <- filter(pooled_endpoint, !usubjid %in% filter(bsl_ran, lta4hresult=='TT')$usubjid)

pooledoutc1.fit1 <- survfit(Surv(mt_death_9m, ev_death_9m) ~ arm,
        data = pooled_endpoint2)
pooledoutc1.surv1 = ggsurvplot(pooledoutc1.fit1, data = pooled_endpoint2,  
           risk.table = TRUE,  censor = FALSE,
           tables.height = 0.2,
           pval = TRUE, pval.method = TRUE,
           conf.int = TRUE, 
           pval.size=4,
           short.panel.labs = TRUE,
           xlim = c(0, 9), xlab = "Months since randomization",
           # ylab = 'Proabability of survival',
           ggtheme = theme_bw(base_size = 12),
           tables.theme = theme_void() + theme(axis.line = element_blank(), axis.text = element_blank(),
                                axis.title = element_blank(), axis.ticks = element_blank()),
           risk.table.title='Number at risk across all MRC grades',
           fontsize = 3, break.x.by=1,
           legend.labs = arm_levels,
           legend.title= 'Treatment arm',
           palette=ggsci::pal_nejm()(10)[2:3],
           risk.table.y.text.col = TRUE, risk.table.y.text = FALSE)

pooledoutc1.fit2 <- survfit(Surv(mt_death_9m, ev_death_9m) ~ arm + tbmgrade,
        data = pooled_endpoint2)
pooledoutc1.surv2 = ggsurvplot(pooledoutc1.fit2, data = pooled_endpoint2,
           risk.table = FALSE,  censor = FALSE,
           pval = TRUE, pval.method = TRUE,
           conf.int = TRUE,
           facet.by= 'tbmgrade',
           short.panel.labs = TRUE,
           xlim = c(0, 9), xlab = "Months since randomization", break.time.by = 30,
           # ylab = 'Proabability of survival',
           ggtheme = theme_bw(base_size = 12) + theme(legend.position = 'none', panel.spacing = unit(1, 'lines'),),
           tables.theme = theme(axis.line = element_blank(), axis.text = element_blank(),
                                axis.title = element_blank(), axis.ticks = element_blank()),
           fontsize = 2, break.x.by=2,
           legend.title= 'Treatment arm',
           palette=ggsci::pal_nejm()(10)[2:3],
           risk.table.y.text.col = TRUE, risk.table.y.text = FALSE)

pooledoutc1_tbl <- lapply(
  levels(pooled_endpoint2$tbmgrade),
  function(grade){
    dt <- pooled_endpoint2 |> filter(tbmgrade==grade)
    pooledoutc1.surv2 = ggsurvplot(survfit(Surv(mt_death_9m, ev_death_9m) ~ arm + tbmgrade,
                                           data = dt), 
                                   data = dt,
                                   risk.table = TRUE,  censor = FALSE,
                                   pval = TRUE, pval.method = TRUE,
                                   conf.int = TRUE,
                                   short.panel.labs = TRUE,
                                   xlim = c(0, 9), xlab = "Months since randomization", break.time.by = 30,
                                   # ylab = 'Proabability of survival',
                                   ggtheme = theme_bw(base_size = 12) + theme(legend.position = 'none'),
                                   tables.theme = theme_void() +
                                     theme(
                                       plot.title = element_blank(),
                                       axis.line = element_blank(), axis.text = element_blank(),
                                       axis.title = element_blank(), axis.ticks = element_blank()),
                                   fontsize = 3, break.x.by=2,
                                   legend.title= 'Treatment arm',
                                   risk.table.title = NULL,
                                   palette=ggsci::pal_nejm()(10)[2:3],
                                   risk.table.y.text.col = TRUE, risk.table.y.text = FALSE)[[2]]
  })
  

# design <- c(area(1,1,1,3), area(2,1,5,3), area(6,1,9,3), area(10,1,10.5,3))
# 
# (pooledoutc1.surv1$table) / (pooledoutc1.surv1$plot) / (pooledoutc1.surv2) / (pooledoutc1_tbl[[1]] + pooledoutc1_tbl[[2]] + pooledoutc1_tbl[[3]]) + plot_layout(guides='collect', design=design) & theme(legend.position = 'bottom')

design <- c(area(1,1,1,3), area(2,1,5,3))

(pooledoutc1.surv1$table) / (pooledoutc1.surv1$plot) +
  plot_layout(design=design) & theme(legend.position = 'bottom')

design <- c(area(1,1,4,3), area(5,1,5.5,3))
(pooledoutc1.surv2)/(pooledoutc1_tbl[[1]] + pooledoutc1_tbl[[2]] + pooledoutc1_tbl[[3]]) +
  plot_layout(design=design) & theme(legend.position = 'bottom')

# pooledoutc1.surv1
```

#### Figure 8.3: Kaplan-Meier estimate for survival 9 months after randomization, comparing study, stratified by treatment arms

This is additional to the SAP. It shows the difference in survival between two studies, within each arm. TT is included. The main factor that led to change in benefit may lay within the placbo group. Note that this is speculative.

```{r primary-ep-study}
#| fig-width: 6
#| fig-asp: .8
#| out-width: 100%

pooledoutc1.fit3 <- survfit(Surv(mt_death_9m, ev_death_9m) ~ trial,
        data = pooled_endpoint)
pooledoutc1.surv3 <-
  ggsurvplot(pooledoutc1.fit3, data = pooled_endpoint,  
           risk.table = FALSE,  censor = FALSE,
           pval = TRUE, pval.method = TRUE,
           conf.int = TRUE, 
           short.panel.labs = TRUE,
           xlim = c(0, 9), xlab = "Months since randomization", break.time.by = 1, 
           ggtheme = theme_bw(base_size = 12),
           tables.theme = theme(
             panel.spacing = unit(1, 'lines'),
             axis.line = element_blank(), axis.text = element_blank(),
                                axis.title = element_blank(), axis.ticks = element_blank()),
           facet.by='arm',
           fontsize = 2, break.x.by=2,
           # legend.labs = arm_levels,
           palette=ggsci::pal_nejm()(10)[2:3],
           legend.title='Study',
           risk.table.y.text.col = TRUE, risk.table.y.text = FALSE)

pooledoutc1_tbl3 <-
  lapply(
    levels(pooled_endpoint$arm),
    function(Arm){
      dt <- pooled_endpoint |>
        filter(arm==Arm)
      ggsurvplot( survfit(Surv(mt_death_9m, ev_death_9m) ~ trial,
        data = dt), 
        data = dt,  
           risk.table = TRUE,  censor = FALSE,
           pval = TRUE, pval.method = TRUE,
           conf.int = TRUE, 
           short.panel.labs = TRUE,
           xlim = c(0, 9), xlab = "Months since randomization", break.time.by = 1, 
           ggtheme = theme_bw(base_size = 12),
           tables.theme = theme_void() + theme(
             plot.title = element_blank(),
             axis.line = element_blank(), axis.text = element_blank(),
             axis.title = element_blank(), axis.ticks = element_blank()),
           fontsize = 3, break.x.by=2,
           palette=ggsci::pal_nejm()(10)[2:3],
           legend.title='Study',
           risk.table.y.text.col = TRUE, risk.table.y.text = FALSE)[[2]]
    })
    
design <- c(area(1,1,4,3), area(5,1,5.5,3))
pooledoutc1.surv3 / ( pooledoutc1_tbl3[[1]] + pooledoutc1_tbl3[[2]]) + plot_layout(design = design)
```

#### Table 8.2: Survival over the first 9 months after randomization, by study and arm

A Cox PH and RMST models for time to death within 9 months were fitted on the pooled dataset, unadjusted and adjusted for study cohort with interaction with treatment arm.

<!-- ##### RMTL-->

```{r pooled-ep}

cox.unadj <- sstable.survcomp(
    Surv(mt_death_9m, ev_death_9m) ~ arm ,
    data = pooled_endpoint,
    digits=2,
    medsum=FALSE,
    flextable=F
  )$table

rmst.unadj <- sstable.survcomp(
    Surv(mt_death_9m, ev_death_9m) ~ arm,
    data = pooled_endpoint,
    digits=2,
    compare.method = 'rmst',
    compare.args = list(
      type = 'lost.diff',
      model.censoring = 'stratified',
      formula.censoring = ~ arm
    ),
    medsum=FALSE,
    flextable=FALSE
  )$table

cox.adj <- sstable.survcomp(
    Surv(mt_death_9m, ev_death_9m) ~ arm + trial + arm:trial,
    data = pooled_endpoint,
    digits=2,
    medsum=FALSE,
    flextable=F
  )$table

rmst.adj <- sstable.survcomp(
    Surv(mt_death_9m, ev_death_9m) ~ arm + trial + arm:trial,
    data = pooled_endpoint,
    digits=2,
    compare.method = 'rmst',
    compare.args = list(
      type = 'lost.diff',
      model.censoring = 'stratified',
      formula.censoring = ~ arm * trial
    ),
    medsum=FALSE,
    flextable=FALSE
  )$table

cox.adj2 <- sstable.survcomp(
    Surv(mt_death_9m, ev_death_9m) ~ arm + I(trial=="LAST ACT") + arm:I(trial=="LAST ACT"),
    data = pooled_endpoint,
    digits=2,
    medsum=FALSE,
    flextable=F
  )$table

rmst.adj2 <- sstable.survcomp(
    Surv(mt_death_9m, ev_death_9m) ~  arm + I(trial=="LAST ACT") + arm:I(trial=="LAST ACT"),
    data = pooled_endpoint,
    digits=2,
    compare.method = 'rmst',
    compare.args = list(
      type = 'lost.diff',
      model.censoring = 'stratified',
      formula.censoring = ~ arm * trial
    ),
    medsum=FALSE,
    flextable=FALSE
  )$table

cox.all <- cbind(cox.unadj[,1:3],
                   rmst.unadj[,4], 
                   cox.unadj[, 4:ncol(cox.unadj)]) |>
  rbind(rep('', ncol(cox.unadj)+1)) |>
  rbind(cbind(cox.adj[-1:-2,1:3,drop=F],
                   rmst.adj[-1:-2,4, drop=F], 
                   cox.adj[-1:-2, 4:ncol(cox.adj), drop=F])) |>
  rbind(cbind(cox.adj2[-1:-2,1:3,drop=F],
                   rmst.adj2[-1:-2,4, drop=F], 
                   cox.adj2[-1:-2, 4:ncol(cox.adj2), drop=F]))
cox.all[,1] <- c(rep('Model',2), 'Unadjusted model', 'Adjusted model', '- LAST ACT', '- Thwaites 2004')
cox.all <- ss_format(cox.all, header=1:2, body=3:nrow(cox.all))
ss_flextable(cox.all,
             footer = 
               c('HR = hazard ratio; RMTL = Restricted mean time lost',
                 'HR and p value were based on Cox proportional hazards model',
                 'RMTL difference (months) and p value were based on Restricted mean survival time model',
                 'The adjusted model was corrected for study cohort, with interaction between study cohort and treatment arm'))
```

### Table 8.3: Death or disability at 9 months

The second outcome is *death or disability (Rankin score ≥ 3) at 9 months from randomization*. For this 9-month assessment an acceptable range of -10 days/+1 month will be applied. Individuals who withdrew, were lost to follow-up before 9 months. Additionally, 4 participants not contactable during the acceptable period above  due to the impact of COVID-19 pandemic were also excluded from the analysis. Two arms were compared with Chi-squared test for independence. 

```{r mrs}
#| out-width: 100%
pooled_endpoint |>
  filter(!is.na(mrs)) |>
  mutate(ev_dis = structure(factor(as.numeric(mrs)>=3, labels=c('No', 'Yes')), label = 'Death or disability at 9 months'),
         mrs = structure(mrs, label='9-month Modified Rankin score'),
         arm = factor(arm, levels=rev(arm_levels))) |>
  select(arm, ev_dis) |>
  gtsummary::tbl_summary(by=arm,
                        missing_text = '(Missing)') |>
  gtsummary::add_n() |>
  gtsummary::add_p(test = list(
    ev_dis ~ "chisq.test.no.correct")) |>
  gtsummary::as_flex_table() |>
  ft_sstheme()
```


## Session info


```{r sessioninfo, results='asis'}
sessionInfo()
```
